using DevExpress.DashboardCommon.Localization;
using DevExpress.DashboardWin.Localization;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace VTMES3_RE.Common
{
    public class clsDashboardCommonLocalizer : DevExpress.DashboardCommon.Localization.DashboardLocalizer
    {
        protected override void PopulateStringTable()
        {
            AddString(DashboardStringId.DefaultDashboardTitleText, "Dashboard");
            AddString(DashboardStringId.DefaultNameChartPane, "Pane");
            AddString(DashboardStringId.DefaultNamePivotItem, "Pivot");
            AddString(DashboardStringId.DefaultNameGridItem, "Grid");
            AddString(DashboardStringId.DefaultNameChartItem, "Chart");
            AddString(DashboardStringId.DefaultNameScatterChartItem, "Scatter Chart");
            AddString(DashboardStringId.DefaultNamePieItem, "Pies");
            AddString(DashboardStringId.DefaultNameGaugeItem, "Gauges");
            AddString(DashboardStringId.DefaultNameCardItem, "Cards");
            AddString(DashboardStringId.DefaultNameImageItem, "Image");
            AddString(DashboardStringId.DefaultNameBoundImageItem, "Bound Image");
            AddString(DashboardStringId.DefaultNameTextBoxItem, "Text Box");
            AddString(DashboardStringId.DefaultNameRangeFilterItem, "Range Filter");
            AddString(DashboardStringId.DefaultNameMapItem, "Map");
            AddString(DashboardStringId.DefaultNameComboBoxItem, "Combo Box");
            AddString(DashboardStringId.DefaultNameListBoxItem, "List Box");
            AddString(DashboardStringId.DefaultNameTreeViewItem, "Tree View");
            AddString(DashboardStringId.DefaultNameDateFilterItem, "Date Filter");
            AddString(DashboardStringId.DefaultNameTreemapItem, "Treemap");
            AddString(DashboardStringId.DefaultNameItemGroup, "Group");
            AddString(DashboardStringId.DefaultNameTabContainerItem, "Tab Container");
            AddString(DashboardStringId.DefaultNameTabPage, "Page");
            AddString(DashboardStringId.DefaultNameCustomItem, "Custom Item");
            AddString(DashboardStringId.SummaryTypeCount, "Count");
            AddString(DashboardStringId.SummaryTypeCountDistinct, "Count Distinct");
            AddString(DashboardStringId.SummaryTypeSum, "Sum");
            AddString(DashboardStringId.SummaryTypeMin, "Min");
            AddString(DashboardStringId.SummaryTypeMax, "Max");
            AddString(DashboardStringId.SummaryTypeAverage, "Average");
            AddString(DashboardStringId.SummaryTypeStdDev, "StdDev");
            AddString(DashboardStringId.SummaryTypeStdDevp, "StdDevP");
            AddString(DashboardStringId.SummaryTypeVar, "Var");
            AddString(DashboardStringId.SummaryTypeVarp, "VarP");
            AddString(DashboardStringId.SummaryTypeMedian, "Median");
            AddString(DashboardStringId.SummaryTypeMode, "Mode");
            AddString(DashboardStringId.GridTotalAutoTemplate, "{0}");
            AddString(DashboardStringId.GridTotalValueTemplate, "{0}");
            AddString(DashboardStringId.GridTotalTemplate, "{0} = {1}");
            AddString(DashboardStringId.GridTotalTypeCount, "Count");
            AddString(DashboardStringId.GridTotalTypeMin, "Min");
            AddString(DashboardStringId.GridTotalTypeMax, "Max");
            AddString(DashboardStringId.GridTotalTypeAvg, "Avg");
            AddString(DashboardStringId.GridTotalTypeSum, "Sum");
            AddString(DashboardStringId.GridHyperlinkUriPatternErrorMessage, "Invalid placeholder");
            AddString(DashboardStringId.GroupIntervalNone, "No Grouping");
            AddString(DashboardStringId.TextGroupIntervalAlphabetical, "Alphabetical");
            AddString(DashboardStringId.NumericGroupIntervalDiscrete, "Discrete");
            AddString(DashboardStringId.NumericGroupIntervalContinuous, "Continuous");
            AddString(DashboardStringId.DateTimeGroupIntervalYear, "Year");
            AddString(DashboardStringId.DateTimeGroupIntervalQuarter, "Quarter");
            AddString(DashboardStringId.DateTimeGroupIntervalMonth, "Month");
            AddString(DashboardStringId.DateTimeGroupIntervalDay, "Day");
            AddString(DashboardStringId.DateTimeGroupIntervalHour, "Hour");
            AddString(DashboardStringId.DateTimeGroupIntervalMinute, "Minute");
            AddString(DashboardStringId.DateTimeGroupIntervalSecond, "Second");
            AddString(DashboardStringId.DateTimeGroupIntervalDayOfYear, "Day of Year");
            AddString(DashboardStringId.DateTimeGroupIntervalDayOfWeek, "Day of Week");
            AddString(DashboardStringId.DateTimeGroupIntervalWeekOfYear, "Week of Year");
            AddString(DashboardStringId.DateTimeGroupIntervalWeekOfMonth, "Week of Month");
            AddString(DashboardStringId.DateTimeGroupIntervalMonthYear, "Month-Year");
            AddString(DashboardStringId.DateTimeGroupIntervalQuarterYear, "Quarter-Year");
            AddString(DashboardStringId.DateTimeGroupIntervalDayMonthYear, "Day-Month-Year");
            AddString(DashboardStringId.DateTimeGroupIntervalWeekYear, "Week-Year");
            AddString(DashboardStringId.DateTimeGroupIntervalDateHour, "Date-Hour");
            AddString(DashboardStringId.DateTimeGroupIntervalDateHourMinute, "Date-Hour-Minute");
            AddString(DashboardStringId.DateTimeGroupIntervalDateHourMinuteSecond, "Date-Hour-Minute-Second");
            AddString(DashboardStringId.DateTimeGroupIntervalExactDate, "Exact Date");
            AddString(DashboardStringId.DateTimeQuarterFormat, "Q{0}");
            AddString(DashboardStringId.DateTimeQuarterFormatSpecifier, "QQ");
            AddString(DashboardStringId.ColoringModeDefault, "Default");
            AddString(DashboardStringId.ColoringModeNone, "None");
            AddString(DashboardStringId.ColoringModeHue, "Hue");
            AddString(DashboardStringId.AxisYNameCount, "Count");
            AddString(DashboardStringId.AxisYNameValues, "Values");
            AddString(DashboardStringId.AxisXNameArguments, "Arguments");
            AddString(DashboardStringId.ValueCaption, "Value");
            AddString(DashboardStringId.Value1Caption, "Value 1");
            AddString(DashboardStringId.Value2Caption, "Value 2");
            AddString(DashboardStringId.WeightCaption, "Weight");
            AddString(DashboardStringId.OpenCaption, "Open");
            AddString(DashboardStringId.HighCaption, "High");
            AddString(DashboardStringId.LowCaption, "Low");
            AddString(DashboardStringId.CloseCaption, "Close");
            AddString(DashboardStringId.ActualValueCaption, "Actual");
            AddString(DashboardStringId.TargetValueCaption, "Target");
            AddString(DashboardStringId.UriCaption, "Uri");
            AddString(DashboardStringId.DisplayValueCaption, "Display Value");
            AddString(DashboardStringId.SeriesTypeBar, "Bar");
            AddString(DashboardStringId.SeriesTypeStackedBar, "Stacked Bar");
            AddString(DashboardStringId.SeriesTypeFullStackedBar, "Full-Stacked Bar");
            AddString(DashboardStringId.SeriesTypeSideBySideStackedBar, "Stacked Bar Side-by-Side");
            AddString(DashboardStringId.SeriesTypeSideBySideFullStackedBar, "Full-Stacked Bar Side-by-Side");
            AddString(DashboardStringId.SeriesTypePoint, "Point");
            AddString(DashboardStringId.SeriesTypeLine, "Line");
            AddString(DashboardStringId.SeriesTypeStackedLine, "Stacked Line");
            AddString(DashboardStringId.SeriesTypeFullStackedLine, "Full-Stacked Line");
            AddString(DashboardStringId.SeriesTypeStepLine, "Step Line");
            AddString(DashboardStringId.SeriesTypeSpline, "Spline");
            AddString(DashboardStringId.SeriesTypeArea, "Area");
            AddString(DashboardStringId.SeriesTypeStackedArea, "Stacked Area");
            AddString(DashboardStringId.SeriesTypeFullStackedArea, "Full-Stacked Area");
            AddString(DashboardStringId.SeriesTypeStepArea, "Step Area");
            AddString(DashboardStringId.SeriesTypeSplineArea, "Spline Area");
            AddString(DashboardStringId.SeriesTypeStackedSplineArea, "Stacked Spline Area");
            AddString(DashboardStringId.SeriesTypeFullStackedSplineArea, "Full-Stacked Spline Area");
            AddString(DashboardStringId.SeriesTypeSideBySideRangeBar, "Range Bar Side-by-Side");
            AddString(DashboardStringId.SeriesTypeRangeArea, "Range Area");
            AddString(DashboardStringId.SeriesTypeBubble, "Bubble");
            AddString(DashboardStringId.SeriesTypeStock, "Stock");
            AddString(DashboardStringId.SeriesTypeCandleStick, "Candle Stick");
            AddString(DashboardStringId.SeriesTypeHighLowClose, "High-Low-Close");
            AddString(DashboardStringId.SeriesTypeGroupBar, "Bar");
            AddString(DashboardStringId.SeriesTypeGroupPointLine, "Point / Line");
            AddString(DashboardStringId.SeriesTypeGroupArea, "Area");
            AddString(DashboardStringId.SeriesTypeGroupRange, "Range");
            AddString(DashboardStringId.SeriesTypeGroupBubble, "Bubble");
            AddString(DashboardStringId.SeriesTypeGroupFinancial, "Financial");
            AddString(DashboardStringId.SeriesTypeGroupRangeFilter, "Range Filter");
            AddString(DashboardStringId.DescriptionValues, "Values");
            AddString(DashboardStringId.DescriptionMaps, "Maps");
            AddString(DashboardStringId.DescriptionMapValue, "Map / Value");
            AddString(DashboardStringId.DescriptionMapValues, "Map / Values");
            AddString(DashboardStringId.DescriptionArgument, "Argument");
            AddString(DashboardStringId.DescriptionArguments, "Arguments");
            AddString(DashboardStringId.DescriptionSeries, "Series");
            AddString(DashboardStringId.DescriptionSparkline, "Sparkline");
            AddString(DashboardStringId.DescriptionSparklineArgument, "Argument");
            AddString(DashboardStringId.DescriptionColumns, "Columns");
            AddString(DashboardStringId.DescriptionRows, "Rows");
            AddString(DashboardStringId.DescriptionDimensions, "Dimensions");
            AddString(DashboardStringId.DescriptionMeasures, "Measures");
            AddString(DashboardStringId.DescriptionGauges, "Gauges");
            AddString(DashboardStringId.DescriptionCards, "Cards");
            AddString(DashboardStringId.DescriptionItemValue, "Value");
            AddString(DashboardStringId.DescriptionItemArgument, "Argument");
            AddString(DashboardStringId.DescriptionItemSeries, "Series");
            AddString(DashboardStringId.DescriptionItemColumn, "Column");
            AddString(DashboardStringId.DescriptionItemRow, "Row");
            AddString(DashboardStringId.DescriptionItemDimension, "Dimension");
            AddString(DashboardStringId.DescriptionItemMeasure, "Measure");
            AddString(DashboardStringId.DescriptionItemAuto, "New Column");
            AddString(DashboardStringId.DataEngineGrandTotal, "Grand Total");
            AddString(DashboardStringId.DescriptionItemColor, "Color");
            AddString(DashboardStringId.DescriptionItemWeight, "Weight");
            AddString(DashboardStringId.DescriptionItemAxisXMeasure, "X-axis");
            AddString(DashboardStringId.DescriptionItemAxisYMeasure, "Y-axis");
            AddString(DashboardStringId.DescriptionItemMeasureWeight, "Weight");
            AddString(DashboardStringId.DescriptionDashboardItemName, "Dashboard item name");
            AddString(DashboardStringId.DescriptionDashboardItemComponentName, "Dashboard item component name");
            AddString(DashboardStringId.DescriptionTooltipDimensions, "Tooltip dimensions");
            AddString(DashboardStringId.DescriptionTooltipMeasures, "Tooltip measures");
            AddString(DashboardStringId.DescriptionBoundImageAttribute, "Attribute");
            AddString(DashboardStringId.RangeFilterEmptySeries, "Please specify Range Filter values");
            AddString(DashboardStringId.RangeFilterIncompatibleSeriesType, "A Range Filter can contain Line, Area and Bar series only");
            AddString(DashboardStringId.RangeFilterEmptyArgument, "Please specify the Range Filter's argument");
            AddString(DashboardStringId.RangeFilterIncompatibleArgument, "Range Filter's argument field should have Numeric, DateTime, or TimeSpan type");
            AddString(DashboardStringId.RangeFilterIncompatibleNumericScale, "Range Filter's numeric argument values should produce a continuous axis. Set the numeric scale to Continuous");
            AddString(DashboardStringId.RangeFilterIncompatibleDateTimeGroupInterval, "Date-time argument values should identify actual calendar dates or time spans rather than grouping (i.e., they should contain a year part). Change the group interval accordingly");
            AddString(DashboardStringId.RangeFilterIncompatibleArgumentSorting, "Range Filter's argument should not be sorted in the descending order or by another data item");
            AddString(DashboardStringId.RangeFilterIncompatibleTopN, "Range Filter's argument does not support the Top N feature");
            AddString(DashboardStringId.MessageLoading, "Loading...");
            AddString(DashboardStringId.MessageInvalidStream, "The 'stream' parameter can't be null");
            AddString(DashboardStringId.MessageInternalError, "Internal error. Please contact the application vendor or your system administrator and provide the following information.\r\n\r\n{0}");
            AddString(DashboardStringId.MessageDashboardNotFoundError, "Dashboard has not been found.");
            AddString(DashboardStringId.MessageDashboardNotRelevantError, "Dashboard object model was changed. Refresh operation is required.");
            AddString(DashboardStringId.MessageDashboardInternalError, "Dashboard internal error. Please contact the application vendor or your system administrator.");
            AddString(DashboardStringId.MessageInvalidFilterExpression, "Incorrect column identifier: {0}. A valid column identifier must consist of the column name preceeded by the table name (or alias, if specified). These names must be dot-separated.");
            AddString(DashboardStringId.MessageIncorrectDataAssign, "Data cannot be assigned if a data provider is used");
            AddString(DashboardStringId.MessageDuplicatedDataItem, "This instance of the '{0}' data item has already been added to '{1}'. To add a similar data item to '{1}', create a new instance of this data item.");
            AddString(DashboardStringId.MessageIncorrectValueTopNCount, "The TopNCount property value cannot be negative or zero.");
            AddString(DashboardStringId.MessageIncorrectNumericPrecision, "The numeric value precision cannot be negative.");
            AddString(DashboardStringId.MessageInvalidCultureName, "Cannot find a specific culture with the following name: {0}");
            AddString(DashboardStringId.MessageIncorrectLayoutItemWeight, "Layout item weight cannot be negative or equal to zero");
            AddString(DashboardStringId.MessageDuplicatedLayoutItem, "This layout item is already contained in the tree");
            AddString(DashboardStringId.MessageLayoutDuplicatedDashboardItem, "A layout item for the specified dashboard item has already been added to the layout tree");
            AddString(DashboardStringId.MessageIncorrectMoveTarget, "Cannot move a layout item to a position within its own branch");
            AddString(DashboardStringId.MessageMasterFilterIncorrectNumberOfValues, "Cannot identify an element that will be used to perform master filtering due to an incorrect number of provided values.");
            AddString(DashboardStringId.MessageIncorrectFilterValueLength, "The list of values that has been assigned as the filter value has a length that does not match the expected length of the filter value.");
            AddString(DashboardStringId.MessageCustomItemIsNotSupported, "The custom item is not supported by this control.");
            AddString(DashboardStringId.MessageCustomItemConfigurationError, "Dashboard item configuration error. Please contact the application vendor or system administrator for assistance.");
            AddString(DashboardStringId.MessageLegacyCardLayoutIsNotSupported, "Card layout is outdated and cannot be displayed. To view this item, specify the layout template in the Dashboard Designer. To know more, see the 'Designing Dashboard Items > Cards > Layout' documentation topic.");
            AddString(DashboardStringId.MessageGridHasNoData, "The grid has no data.");
            AddString(DashboardStringId.MessagePivotHasNoData, "The pivot grid has no data.");
            AddString(DashboardStringId.MessageIncorrectGridDashboardControlOperation, "An invalid operation was performed in GridDashboardControl.");
            AddString(DashboardStringId.MessageUnassignedDashboardItemGroup, "The dashboard item group should belong to the dashboard. To add a group to the dashboard, use the Dashboard.Groups property.");
            AddString(DashboardStringId.MessageIncorrectDashboardItemGroupAssign, "A dashboard item group cannot be added to a collection of dashboard items. Use the Dashboard.Groups property to add the group to the dashboard.");
            AddString(DashboardStringId.MessageWrongAxisName, "A data axis with the specified name does not exist in this dashboard item. See the DevExpress.DashboardCommon.DashboardDataAxisNames static class for valid data axis names.");
            AddString(DashboardStringId.MessageInvalidLayoutClientWidth, "The layout width must be greater than zero.");
            AddString(DashboardStringId.MessageInvalidLayoutClientHeight, "The layout height must be greater than zero.");
            AddString(DashboardStringId.MessageInvalidFontSize, "The font size must be greater than zero.");
            AddString(DashboardStringId.MessageInvalidCardLayoutTemplateMinWidth, "The minimum width must be greater than zero.");
            AddString(DashboardStringId.MessageInvalidCardLayoutTemplateMaxWidth, "The maximum width must be greater than zero or equal to null.");
            AddString(DashboardStringId.MessageInvalidDeltaIndicatorSize, "The delta indicator size must be greater than zero.");
            AddString(DashboardStringId.MessageInvalidDataFormat, "Cannot convert the {0} value to the {1} data type.");
            AddString(DashboardStringId.MessageWrongDateTimePeriodName, "The DateTimePeriodCollection does not contain the item with the specified name.");
            AddString(DashboardStringId.MessageSummaryCalculatedFieldInDimension, "Cannot change the expression of the '{0}' calculated field that provides data for the '{1}' dimension. Summary-based calculated fields can provide data for measures only.");
            AddString(DashboardStringId.AggrInMasterFilterDimensionError, "Master filtering cannot be applied by dimension values created using the expression containing the Aggr function.");
            AddString(DashboardStringId.MessageAggregateFunctionInMasterFilterDimension, "Master filtering cannot be applied by values of the dimension created based on the calculated field with the Aggr function. The following dimensions are created based on such fields: {0}.");
            AddString(DashboardStringId.MessageWrongExcelDataSourceConnectionParametersType, "Connection parameters are invalid. An excel data source supports only ExcelDataSourceConnectionParameters.");
            AddString(DashboardStringId.MessageWrongExtractDataSourceConnectionParametersType, "Connection parameters are invalid. An extract data source supports only ExtractDataSourceConnectionParameters.");
            AddString(DashboardStringId.FormatStringDashboardItemCaption, " - {0}");
            AddString(DashboardStringId.FormatStringKpiElementCaption, "{0} vs {1}");
            AddString(DashboardStringId.FormatStringSeriesName, " - {0}");
            AddString(DashboardStringId.FormatStringDataItemName, "{0} ({1})");
            AddString(DashboardStringId.FormatRangeFilterDisplayText, "{0} - {1}");
            AddString(DashboardStringId.FormatMasterFilterDisplayText, ", {0}");
            AddString(DashboardStringId.DataItemsHeader, "DATA ITEMS");
            AddString(DashboardStringId.HiddenDataItemsHeader, "HIDDEN DATA ITEMS");
            AddString(DashboardStringId.TooltipDataItemsHeader, "TOOLTIP DATA ITEMS");
            AddString(DashboardStringId.NumericFormatUnitSymbolThousands, "K");
            AddString(DashboardStringId.NumericFormatUnitSymbolMillions, "M");
            AddString(DashboardStringId.NumericFormatUnitSymbolBillions, "B");
            AddString(DashboardStringId.TopNOthersValue, "Others");
            AddString(DashboardStringId.DashboardNullValue, " ");
            AddString(DashboardStringId.ActionClearMasterFilter, "Clear Master Filter");
            AddString(DashboardStringId.ActionClearSelection, "Clear Selection");
            AddString(DashboardStringId.ActionDrillUp, "Drill Up");
            AddString(DashboardStringId.ActionOtherValues, "Values");
            AddString(DashboardStringId.ActionExportDashboard, "Export Dashboard");
            AddString(DashboardStringId.ActionExportTemplate, "{0} - {1}");
            AddString(DashboardStringId.ActionPrintPreview, "Print Preview...");
            AddString(DashboardStringId.ActionExportTo, "Export To");
            AddString(DashboardStringId.ActionExportToExcel, "Export To Excel");
            AddString(DashboardStringId.ActionExportToPdf, "Export To PDF");
            AddString(DashboardStringId.ActionExportToImage, "Export To Image");
            AddString(DashboardStringId.ActionAllowMultiselection, "Multi-Select");
            AddString(DashboardStringId.ActionMaximizeDashboardItem, "Maximize");
            AddString(DashboardStringId.ActionRestoreDashboardItem, "Restore");
            AddString(DashboardStringId.ActionShowDataInspector, "Inspect Data");
            AddString(DashboardStringId.InspectedData, "Inspected Data:");
            AddString(DashboardStringId.InspectedTypeFormatString, "({0} Data)");
            AddString(DashboardStringId.AggregatedDataType, "Aggregated");
            AddString(DashboardStringId.RawDataType, "Raw");
            AddString(DashboardStringId.OLAPUnavailableRawData, "OLAP Data Source - Data Unavailable");
            AddString(DashboardStringId.SparklineValuesSeparator, ", ");
            AddString(DashboardStringId.SparklineArgumentValueSeparator, " - ");
            AddString(DashboardStringId.StartDate, "(Start Date)");
            AddString(DashboardStringId.EndDate, "(End Date)");
            AddString(DashboardStringId.DataInspectorObjectValue, "[Object]");
            AddString(DashboardStringId.DataInspectorButtonClose, "Close");
            AddString(DashboardStringId.ElementNamePies, "Pies");
            AddString(DashboardStringId.ElementNameCards, "Cards");
            AddString(DashboardStringId.ElementNameGauges, "Gauges");
            AddString(DashboardStringId.EmptyColumnAliasPattern, "Column{0}");
            AddString(DashboardStringId.PivotGridTotal, "{0} Total");
            AddString(DashboardStringId.PivotGridGrandTotal, "Grand Total");
            AddString(DashboardStringId.ChartTotalValue, "Total");
            AddString(DashboardStringId.LoadingDataError, "The Dashboard encountered an issue while loading data. One or several dashboard items may appear empty.\r\nPlease contact the application vendor or your system administrator and provide the following information.\r\n\r\nThe Web application server failed to establish the following data connections:\r\n{0}");
            AddString(DashboardStringId.CalculatedFieldsTreeItemName, "Calculated Fields");
            AddString(DashboardStringId.ExpressionFieldsTreeItemName, "Expressions");
            AddString(DashboardStringId.MapAttributeDimension, "Attribute");
            AddString(DashboardStringId.Latitude, "Latitude");
            AddString(DashboardStringId.Longitude, "Longitude");
            AddString(DashboardStringId.Delta, "Delta");
            AddString(DashboardStringId.NewCalculatedFieldNamePrefix, "Calculated Field");
            AddString(DashboardStringId.NewParameterNamePrefix, "Parameter");
            AddString(DashboardStringId.ParametersFormCaption, "검색 조건");
            AddString(DashboardStringId.ParametersFormValueColumnCaption, "Value");
            AddString(DashboardStringId.ParametersFormNameColumnCaption, "Parameter");
            AddString(DashboardStringId.ParametersFormAllowNullColumnCaption, "Pass Null");
            AddString(DashboardStringId.ParametersFormCalendarTodayButton, "Today");
            AddString(DashboardStringId.ParametersSelectorText, "Select...");
            AddString(DashboardStringId.ParameterNullExportValue, "null");
            AddString(DashboardStringId.ParameterTrueExportValue, "True");
            AddString(DashboardStringId.ParameterFalseExportValue, "False");
            AddString(DashboardStringId.ButtonOK, "OK");
            AddString(DashboardStringId.ButtonCancel, "Cancel");
            AddString(DashboardStringId.ButtonReset, "Reset");
            AddString(DashboardStringId.ButtonSubmit, "Submit");
            AddString(DashboardStringId.ButtonApply, "Apply");
            AddString(DashboardStringId.ButtonExport, "Export");
            AddString(DashboardStringId.GridResetColumnWidths, "Reset column widths");
            AddString(DashboardStringId.GridSortAscending, "Sort Ascending");
            AddString(DashboardStringId.GridSortDescending, "Sort Descending");
            AddString(DashboardStringId.GridClearSorting, "Clear Sorting");
            AddString(DashboardStringId.PageLayout, "Page Layout");
            AddString(DashboardStringId.PageLayoutAuto, "Auto");
            AddString(DashboardStringId.PageLayoutPortrait, "Portrait");
            AddString(DashboardStringId.PageLayoutLandscape, "Landscape");
            AddString(DashboardStringId.PaperKind, "Size");
            AddString(DashboardStringId.PaperKindLetter, "Letter");
            AddString(DashboardStringId.PaperKindLegal, "Legal");
            AddString(DashboardStringId.PaperKindExecutive, "Executive");
            AddString(DashboardStringId.PaperKindA5, "A5");
            AddString(DashboardStringId.PaperKindA4, "A4");
            AddString(DashboardStringId.PaperKindA3, "A3");
            AddString(DashboardStringId.ScaleMode, "Scale Mode");
            AddString(DashboardStringId.ScaleModeNone, "None");
            AddString(DashboardStringId.ScaleModeUseScaleFactor, "Use Scale Factor");
            AddString(DashboardStringId.ScaleModeAutoFitToPagesWidth, "Auto Fit to Pages Width");
            AddString(DashboardStringId.AutoFitPageCount, "Auto Fit Page Count");
            AddString(DashboardStringId.ScaleFactor, "Scale Factor");
            AddString(DashboardStringId.PrintHeadersOnEveryPage, "Print Headers on Every Page");
            AddString(DashboardStringId.FitToPageWidth, "Fit to Page Width");
            AddString(DashboardStringId.SizeMode, "Size Mode");
            AddString(DashboardStringId.SizeModeNone, "None");
            AddString(DashboardStringId.SizeModeStretch, "Stretch");
            AddString(DashboardStringId.SizeModeZoom, "Zoom");
            AddString(DashboardStringId.AutoArrangeContent, "Auto Arrange Content");
            AddString(DashboardStringId.ImageFormat, "Image Format");
            AddString(DashboardStringId.ExcelFormat, "Excel Format");
            AddString(DashboardStringId.Resolution, "Resolution (dpi)");
            AddString(DashboardStringId.ShowTitle, "Show Title");
            AddString(DashboardStringId.Title, "Title");
            AddString(DashboardStringId.CsvValueSeparator, "Separator");
            AddString(DashboardStringId.FileName, "File Name");
            AddString(DashboardStringId.FilterStatePresentationNone, "None");
            AddString(DashboardStringId.FilterStatePresentationAfter, "Below");
            AddString(DashboardStringId.FilterStatePresentationAfterAndSplitPage, "Separate Page");
            AddString(DashboardStringId.FilterStatePresentationSplitSheet, "Separate Sheet");
            AddString(DashboardStringId.DashboardStatePosition, "Position");
            AddString(DashboardStringId.ExportFilters, "Filters");
            AddString(DashboardStringId.ExportParameters, "Parameters");
            AddString(DashboardStringId.IncludeExportDashboardState, "Include");
            AddString(DashboardStringId.MessageIncorrectMapLatitude, "The latitude should be greater than or equal to {0} and less than or equal to {1}.");
            AddString(DashboardStringId.IncorrectParameterType, "The dashboard parameter values type does not correspond to Parameter.Type.");
            AddString(DashboardStringId.SparklineTooltipStartValue, "Start:");
            AddString(DashboardStringId.SparklineTooltipEndValue, "End:");
            AddString(DashboardStringId.SparklineTooltipMinValue, "Min:");
            AddString(DashboardStringId.SparklineTooltipMaxValue, "Max:");
            AddString(DashboardStringId.RangeFilterOLAPDataSource, "The Range Filter is not supported in OLAP mode.");
            AddString(DashboardStringId.RangeFilterHasNoData, "The Range Filter does not contain any data to display.");
            AddString(DashboardStringId.InitialExtent, "Initial Extent");
            AddString(DashboardStringId.FilterElementShowAllItem, "(All)");
            AddString(DashboardStringId.FilterElementCheckedComboBoxNoDataCaption, "(none)");
            AddString(DashboardStringId.FilterElementRadioComboBoxNoDataCaption, "Select...");
            AddString(DashboardStringId.FilterElementNoDataToDisplay, "No data to display");
            AddString(DashboardStringId.MeasureNamesDimensionName, "MeasureNames");
            AddString(DashboardStringId.ColorAutoAssignedNotApplied, "Auto (not applied)");
            AddString(DashboardStringId.ColorAutoAssigned, "Auto");
            AddString(DashboardStringId.ColorPaletteIndex, "Palette index:");
            AddString(DashboardStringId.ColorInherited, "(Inherited)");
            AddString(DashboardStringId.DashboardErrorValue, "Error");
            AddString(DashboardStringId.DefaultSqlDataSourceName, "SQL Data Source");
            AddString(DashboardStringId.DefaultEFDataSourceName, "EF Data Source");
            AddString(DashboardStringId.DefaultOlapDataSourceName, "OLAP Data Source");
            AddString(DashboardStringId.DefaultObjectDataSourceName, "Object Data Source");
            AddString(DashboardStringId.DefaultExcelDataSourceName, "Excel Data Source");
            AddString(DashboardStringId.DefaultFileExtractDataSourceName, "Extract Data Source");
            AddString(DashboardStringId.DefaultFederationDataSourceName, "Federated Data Source");
            AddString(DashboardStringId.DefaultMongoDBDataSourceName, "MongoDB Data Source");
            AddString(DashboardStringId.DefaultJsonDataSourceName, "JSON Data Source");
            AddString(DashboardStringId.DefaultXpoDataSourceName, "XPO Data Source");
            AddString(DashboardStringId.DefaultDataSourceName, "Data Source");
            AddString(DashboardStringId.DashboardDataUpdating, "Updating");
            AddString(DashboardStringId.ErrorHandlingDataBindingError, "The following errors occur during data binding:");
            AddString(DashboardStringId.ErrorHandlingNoSuchDataMembers, "The following data items do not exist");
            AddString(DashboardStringId.ErrorHandlingRecursiveDataMembers, "The following data items refer to each other");
            AddString(DashboardStringId.ErrorHandlingTopNByCalculationDataMembers, "Top N cannot be applied if its target measure has a calculation. The following dimensions have Top N applied by measures with calculations");
            AddString(DashboardStringId.ErrorHandlingOrderByCalculationDataMembers, "Sorting by measure cannot be applied if the target measure has calculations. The following dimensions are ordered by measures with calculations");
            AddString(DashboardStringId.ErrorHandlingInvalidCustomFunctions, "Calculated Field and Window expressions cannot contain some custom functions. Evaluated expressions contain the following forbidden functions");
            AddString(DashboardStringId.ErrorHandlingEFServerModeError, "Server mode is not supported for this data member");
            AddString(DashboardStringId.ErrorHandlingSQLServerModeError, "Server mode is not supported for stored procedures");
            AddString(DashboardStringId.ErrorHandlingWindowDefinitionServerMode, "The w function cannot be used for server-mode data sources");
            AddString(DashboardStringId.ErrorHandlingJoinRuleFunctionServerMode, "The joinRule function cannot be used for server-mode data sources");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionGetDateHour, "GetDateHour(DateTime)\r\nExtracts the date part with the hour value from the defined DateTime.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionGetDateHourMinute, "GetDateHourMinute(DateTime)\r\nExtracts the date part with the hour and minute values from the defined DateTime.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionGetDateHourMinuteSecond, "GetDateHourMinuteSecond(DateTime)\r\nExtracts the date part with the hour, minute, and second values from the defined DateTime.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionGetDateMonthYear, "GetDateMonthYear(DateTime)\r\nReturns the date of the first day of the month for a given DateTime.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionGetDateQuarterYear, "GetDateQuarterYear(DateTime)\r\nReturns the date of the first day of the quarter for a given DateTime.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionGetQuarter, "GetQuarter(DateTime)\r\nExtracts a quarter from the defined DateTime.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionGetWeekOfMonth, "GetWeekOfMonth(DateTime)\r\nExtracts the week of the month from the defined DateTime.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionGetWeekOfYear, "GetWeekOfYear(DateTime)\r\nExtracts the week of the year from the defined DateTime.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionToDateTime, "ToDateTime(Value)\r\nConverts Value to a DateTime value.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionToBoolean, "ToBoolean(Value)\r\nConverts Value to an equivalent Boolean value.");
            AddString(DashboardStringId.FunctionDescriptionGetDateWeekYear, "GetDateWeekYear(DateTime)\r\nReturns the date of the first day of the week for a given DateTime (uses culture settings).");
            AddString(DashboardStringId.FunctionDescriptionGetDateWeekYear2, "GetDateWeekYear(DateTime, ['FirstDay', 'FirstFullWeek', 'FirstFourDayWeek'])\r\nReturns the date of the first day of the week for a given DateTime. The second parameter determines the rule for calculating the calendar week.");
            AddString(DashboardStringId.FunctionDescriptionWindowCustomAggregate, "WindowAggregate(SummaryExpression, StartOffset, EndOffset, CustomAggregateName) - Returns the result of the custom function applied to the specified expression in the window.");
            AddString(DashboardStringId.FunctionDescriptionRunningCustomAggregate, "RunningAggregate(SummaryExpression, CustomAggregateName) - Returns the cumulative result of the custom function applied to specified expression from the first row in the window to the current row.");
            AddString(DashboardStringId.FunctionDescriptionWindowFirstValue, "WindowFirstValue(SummaryExpression, StartOffset, EndOffset)\r\nReturns the first value of the expression within the window.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionMakeDateTime3, "MakeDateTime(Year, Month, Day)\r\nReturns a date value constructed from the specified Year, Month and Day.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionMakeDateTime4, "MakeDateTime(Year, Month, Day, Hour)\r\nReturns a date value constructed from the specified Year, Month, Day and Hour.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionMakeDateTime5, "MakeDateTime(Year, Month, Day, Hour, Minute)\r\nReturns a date value constructed from the specified Year, Month, Day, Hour and Minute.");
            AddString(DashboardStringId.FunctionOperatorExFunctionDescriptionMakeDateTime6, "MakeDateTime(Year, Month, Day, Hour, Minute, Second)\r\nReturns a date value constructed from the specified Year, Month, Day, Hour, Minute and Second.");
            AddString(DashboardStringId.FunctionDescriptionAggr, "aggr(SummaryExpression, Dimension1, Dimension2, ...)\r\nUses the detail level and summary function to aggregate underlying data. The level depends on the number of dimensions.");
            AddString(DashboardStringId.FunctionDescriptionAggrJoinRule, "joinRule(dimension, searchValue)\r\nSpecifies the dimension for the 'aggr' function and a column whose values are used in the join operation after aggregation is completed.");
            AddString(DashboardStringId.FunctionDescriptionAggregateFilter, "filter(SummaryExpression, filterCriteria)\r\nFilters underlying data with specified filter criteria and aggregates filtered data using current detail level and the summary function.");
            AddString(DashboardStringId.FunctionDescriptionWindowDefinition, "w(WindowExpression, partitionByFunction, orderByFunction)\r\nCalculates aggregated values with the specified window function for the window defined by the specified partitioning and ordering.");
            AddString(DashboardStringId.FunctionDescriptionWindowDefinitionPartitionBy, "partitionBy(column1, column2, ...)\r\nSpecifies the columns by which the data rows are partitioned. The window function is applied to each partition separately.");
            AddString(DashboardStringId.FunctionDescriptionWindowDefinitionOrderBy, "orderBy(column1, column2, ...)\r\nSpecifies the columns by which the values are sorted.");
            AddString(DashboardStringId.FunctionDescriptionWindowDefinitionOrderAsc, "asc(column)\r\nData rows are sorted by values in the specified column in ascending order. This is the default sort order.");
            AddString(DashboardStringId.FunctionDescriptionWindowDefinitionOrderDesc, "desc(column)\r\nData rows are sorted by values in the specified column in descending order.");
            AddString(DashboardStringId.FunctionDescriptionWindowAvg, "WindowAvg(SummaryExpression, StartOffset, EndOffset)\r\nReturns the average of the expression within the window, which is defined using offsets from the current row.");
            AddString(DashboardStringId.FunctionDescriptionRankCompetition, "RankCompetition(SummaryExpression, ['asc', 'desc'])\r\nReturns the standard competition rank for the current row in the window.");
            AddString(DashboardStringId.FunctionDescriptionWindowCountDistinct, "WindowCountDistinct(SummaryExpression, StartOffset, EndOffset)\r\nReturns the distinct count of the expression within the window.");
            AddString(DashboardStringId.FunctionDescriptionWindowCount, "WindowCount(SummaryExpression, StartOffset, EndOffset)\r\nReturns the count of the expression within the window.");
            AddString(DashboardStringId.FunctionDescriptionRankDense, "RankDense(SummaryExpression, ['asc', 'desc'])\r\nReturns the dense rank for the current row in the window.");
            AddString(DashboardStringId.FunctionDescriptionFirst, "First()\r\nReturns the number of rows from the current row to the first row in the window.");
            AddString(DashboardStringId.FunctionDescriptionIndex, "Index()\r\nReturns the index of the current row in the window.");
            AddString(DashboardStringId.FunctionDescriptionLast, "Last()\r\nReturns the number of rows from the current row to the last row in the window.");
            AddString(DashboardStringId.FunctionDescriptionLookup, "Lookup(SummaryExpression, Position)\r\nReturns the value of the expression in a target position specified as a relative offset from the current position.");
            AddString(DashboardStringId.FunctionDescriptionWindowMax, "WindowMax(SummaryExpression, StartOffset, EndOffset)\r\nReturns the maximum of the expression within the window.");
            AddString(DashboardStringId.FunctionDescriptionWindowMedian, "WindowMedian(SummaryExpression, StartOffset, EndOffset)\r\nReturns the median of the expression within the window.");
            AddString(DashboardStringId.FunctionDescriptionWindowMode, "WindowMode(SummaryExpression, StartOffset, EndOffset)\r\nReturns the mode of the expression within the window.");
            AddString(DashboardStringId.FunctionDescriptionWindowMin, "WindowMin(SummaryExpression, StartOffset, EndOffset)\r\nReturns the minimum of the expression within the window.");
            AddString(DashboardStringId.FunctionDescriptionRankModified, "RankModified(SummaryExpression, ['asc', 'desc'])\r\nReturns the modified competition rank for the current row in the window.");
            AddString(DashboardStringId.FunctionDescriptionRankPercentile, "RankPercentile(SummaryExpression, ['asc', 'desc'])\r\nReturns the percentile rank for the current row in the window.");
            AddString(DashboardStringId.FunctionDescriptionRunningAvg, "RunningAvg(SummaryExpression)\r\nReturns the running average of the specified expression from the first row in the window to the current row.");
            AddString(DashboardStringId.FunctionDescriptionRunningCount, "RunningCount(SummaryExpression)\r\nReturns the running count of the specified expression from the first row in the window to the current row.");
            AddString(DashboardStringId.FunctionDescriptionRunningMax, "RunningMax(SummaryExpression)\r\nReturns the running maximum of the specified expression from the first row in the window to the current row.");
            AddString(DashboardStringId.FunctionDescriptionRunningMin, "RunningMin(SummaryExpression)\r\nReturns the running minimum of the specified expression from the first row in the window to the current row.");
            AddString(DashboardStringId.FunctionDescriptionRunningSum, "RunningSum(SummaryExpression)\r\nReturns the running sum of the specified expression from the first row in the window to the current row.");
            AddString(DashboardStringId.FunctionDescriptionSize, "Size()\r\nReturns the number of rows in the window.");
            AddString(DashboardStringId.FunctionDescriptionWindowStdDev, "WindowStdDev(SummaryExpression, StartOffset, EndOffset)\r\nReturns the sample standard deviation of the expression within the window.");
            AddString(DashboardStringId.FunctionDescriptionWindowStdDevp, "WindowStdDevp(SummaryExpression, StartOffset, EndOffset)\r\nReturns the biased standard deviation of the expression within the window.");
            AddString(DashboardStringId.FunctionDescriptionWindowSum, "WindowSum(SummaryExpression, StartOffset, EndOffset)\r\nReturns the sum of the expression within the window.");
            AddString(DashboardStringId.FunctionDescriptionTotal, "Total(SummaryExpression)\r\nReturns the total for the specified expression in a table calculation window.");
            AddString(DashboardStringId.FunctionDescriptionRankUnique, "RankUnique(SummaryExpression, ['asc', 'desc'])\r\nReturns the unique rank for the current row in the window.");
            AddString(DashboardStringId.FunctionDescriptionWindowVar, "WindowVar(SummaryExpression, StartOffset, EndOffset)\r\nReturns the variance of the expression within the window.");
            AddString(DashboardStringId.FunctionDescriptionWindowVarp, "WindowVarp(SummaryExpression, StartOffset, EndOffset)\r\nReturns the biased variance of the expression within the window.");
            AddString(DashboardStringId.FunctionDescriptionCountDistinct, "CountDistinct(Value)\r\nReturns the number of unique objects in a collection.");
            AddString(DashboardStringId.FunctionDescriptionMedian, "Median(Value)\r\nReturns the median of the values in a collection.");
            AddString(DashboardStringId.FunctionDescriptionStdDev, "StdDev(Value)\r\nReturns an estimate of the standard deviation of a population, where the sample is a subset of the entire population.");
            AddString(DashboardStringId.FunctionDescriptionStdDevp, "StdDevp(Value)\r\nReturns the standard deviation of a population, where the population is the entire data to be summarized.");
            AddString(DashboardStringId.FunctionDescriptionVar, "Var(Value)\r\nReturns an estimate of the variance of a population, where the sample is a subset of the entire population.");
            AddString(DashboardStringId.FunctionDescriptionVarp, "Varp(Value)\r\nReturns the variance of a population, where the population is the entire data to be summarized.");
            AddString(DashboardStringId.FunctionDescriptionFirstValue, "FirstValue(Value)\r\nReturns the first value in a collection.");
            AddString(DashboardStringId.FunctionCategoryAggregate, "Aggregate");
            AddString(DashboardStringId.FunctionCategoryAdvanced, "Advanced");
            AddString(DashboardStringId.FunctionCategoryWindow, "Window");
            AddString(DashboardStringId.FunctionCategoryCustomAggregateNames, "Custom Aggregate Names");
            AddString(DashboardStringId.AggregateExFunctionDescriptionCountNotNull, "CountNotNull(Value)\r\nReturns a number of non-null objects in a collection.");
            AddString(DashboardStringId.AggregateExFunctionDescriptionMode, "Mode(Value)\r\nThe mode of the values. A mode is the value that is repeated more often than any other.");
            AddString(DashboardStringId.ActionSelectDateTimePeriod, "Select Date Time Period");
            AddString(DashboardStringId.RangeFilterCustomDateTimePeriod, "Custom Period...");
            AddString(DashboardStringId.RangeFilterSelectRange, "Select Range");
            AddString(DashboardStringId.RangeFilterSelectRangeFromCaption, "From:");
            AddString(DashboardStringId.RangeFilterSelectRangeToCaption, "To:");
            AddString(DashboardStringId.ErrorIncorrectIntervalCount, "The count parameter should be greater or equal to 1.");
            AddString(DashboardStringId.PeriodLastYear, "Last Year");
            AddString(DashboardStringId.PeriodThisYear, "This Year");
            AddString(DashboardStringId.PeriodNextYear, "Next Year");
            AddString(DashboardStringId.PeriodLastQuarter, "Last Quarter");
            AddString(DashboardStringId.PeriodThisQuarter, "This Quarter");
            AddString(DashboardStringId.PeriodNextQuarter, "Next Quarter");
            AddString(DashboardStringId.PeriodLastMonth, "Last Month");
            AddString(DashboardStringId.PeriodThisMonth, "This Month");
            AddString(DashboardStringId.PeriodNextMonth, "Next Month");
            AddString(DashboardStringId.PeriodLastDay, "Last Day");
            AddString(DashboardStringId.PeriodThisDay, "This Day");
            AddString(DashboardStringId.PeriodNextDay, "Next Day");
            AddString(DashboardStringId.PeriodLastHour, "Last Hour");
            AddString(DashboardStringId.PeriodThisHour, "This Hour");
            AddString(DashboardStringId.PeriodNextHour, "Next Hour");
            AddString(DashboardStringId.PeriodLastMinute, "Last Minute");
            AddString(DashboardStringId.PeriodThisMinute, "This Minute");
            AddString(DashboardStringId.PeriodNextMinute, "Next Minute");
            AddString(DashboardStringId.PeriodLastSecond, "Last Second");
            AddString(DashboardStringId.PeriodThisSecond, "This Second");
            AddString(DashboardStringId.PeriodNextSecond, "Next Second");
            AddString(DashboardStringId.ErrorEmptyPeriodName, "The name cannot be null or empty");
            AddString(DashboardStringId.DefaultPeriodName, "Period");
            AddString(DashboardStringId.MessageServerModeNotSupportedMedian, "Median is not supported in server mode for");
            AddString(DashboardStringId.MessageServerModeNotSupportedMode, "Mode is not supported in server mode for");
            AddString(DashboardStringId.MessageServerModeNotSupportedCountDistinct, "Count Distinct is not supported in server mode for");
            AddString(DashboardStringId.MessageEFNotSupportedMedian, "Median is not supported for the Entity Framework.");
            AddString(DashboardStringId.MessageDuplicateDataItemId, "A data item identifier with the same name already exists.");
            AddString(DashboardStringId.ErrorToBooleanDateTimeOperand, "Cannot convert a date-time value to boolean.");
            AddString(DashboardStringId.ErrorToBooleanCharOperand, "Cannot convert a character to a boolean value.");
            AddString(DashboardStringId.MeasureFilterCaptionFormatString, "Filtered {0}");
            AddString(DashboardStringId.RunningTotalCalculationMeasureCaptionFormatString, "Running Total of {0}");
            AddString(DashboardStringId.MovingCalculationMeasureCaptionFormatString, "Moving of {0}");
            AddString(DashboardStringId.DifferenceCalculationMeasureCaptionFormatString, "Difference of {0}");
            AddString(DashboardStringId.RankCalculationMeasureCaptionFormatString, "Rank of {0}");
            AddString(DashboardStringId.PercentOfTotalCalculationMeasureCaptionFormatString, "Percent of {0} Total");
            AddString(DashboardStringId.CustomExpressionCalculationMeasureCaption, "Calculation");
            AddString(DashboardStringId.OlapCubeNotFoundError, "The cube with the following name cannot be found:\r\n{0}.");
            AddString(DashboardStringId.ExtractDriverNotFoundError, "Cannot find an extract driver with the following name: '{0}'");
            AddString(DashboardStringId.ExtractCustomDriverNameError, "The name of the custom extract driver cannot be null or empty.");
            AddString(DashboardStringId.ExtractPreprocessorError, "An error occurred during creation of the data extract:\r\n{0}");
            AddString(DashboardStringId.ExtractPreprocessorColumnError, "The following columns cannot be processed:\r\n{0}");
            AddString(DashboardStringId.ExtractColumnUnsupportedTypeError, "The following columns have unsupported types: \r\n{0}");
            AddString(DashboardStringId.ExtractColumnUnsupportedTypeTooltip, "The column has unsupported type");
            AddString(DashboardStringId.ExtractSourceDataSourceNamePostfix, "(local copy)");
            AddString(DashboardStringId.CategoryNameGeneral, "General");
            AddString(DashboardStringId.OlapRaggedHierarchyNoneItemCaption, "(None)");
            AddString(DashboardStringId.DataSourceFilterContainsAggrExceptionText, "Cannot load data because the data source filter should not contain the Aggr function.");
            AddString(DashboardStringId.TreemapLabelArgumentTemplate, "{0} - {1}");
            AddString(DashboardStringId.TreemapLabelValueTemplate, "{0}: {1}");
            AddString(DashboardStringId.ExtractEmptyDataFieldsExceptionMessage, "Cannot create the extract file from the Object/Entity Framework data source because the ExtractSourceOptions.DataFields collection is empty.");
            AddString(DashboardStringId.ExtractEmptyDataMemberExceptionMessage, "Cannot create an extract file because ExtractSourceOptions.DataMember is empty or specified incorrectly.");
            AddString(DashboardStringId.CustomItems, "Custom Items");
            AddString(DashboardStringId.PointLabelContentTypeNone, "None");
            AddString(DashboardStringId.PointLabelContentTypeArgument, "Argument");
            AddString(DashboardStringId.PointLabelContentTypeSeriesName, "Series Name");
            AddString(DashboardStringId.PointLabelContentTypeValue, "Value");
            AddString(DashboardStringId.PointLabelContentTypePercent, "Percent");
            AddString(DashboardStringId.SearchNullValuePrompt, "Enter text to search...");
            AddString(DashboardStringId.GeoPointMapTooltipPointCount, "{0} points");
            AddString(DashboardStringId.SelectDate, "Select date");
            AddString(DashboardStringId.GaugeScaleLabelFormatCaption, "Scale Label");
            AddString(DashboardStringId.ResetExactDateFormatToDefault, "Reset to Default");
            AddString(DashboardStringId.CalculatedFieldTypeBoolean, "Boolean");
            AddString(DashboardStringId.CalculatedFieldTypeDateTime, "DateTime");
            AddString(DashboardStringId.CalculatedFieldTypeDecimal, "Decimal");
            AddString(DashboardStringId.CalculatedFieldTypeDouble, "Double");
            AddString(DashboardStringId.CalculatedFieldTypeLong, "Integer");
            AddString(DashboardStringId.CalculatedFieldTypeString, "String");
            AddString(DashboardStringId.CalculatedFieldTypeUnknown, "Unknown");
            AddString(DashboardStringId.CalculatedFieldTypeObject, "Object");
            AddString(DashboardStringId.CalculatedFieldTypeAuto, "Auto");
            AddString(DashboardStringId.CardLayoutTemplateCenteredCaption, "Centered");
            AddString(DashboardStringId.CardLayoutTemplateCompactCaption, "Compact");
            AddString(DashboardStringId.CardLayoutTemplateCustomCaption, "Custom");
            AddString(DashboardStringId.CardLayoutTemplateLightweightCaption, "Lightweight");
            AddString(DashboardStringId.CardLayoutTemplateNoneCaption, "None");
            AddString(DashboardStringId.CardLayoutTemplateStretchedCaption, "Stretched");
            AddString(DashboardStringId.CardRowDataElementTypeAbsoluteVariationCaption, "Absolute Variation");
            AddString(DashboardStringId.CardRowDataElementTypeActualValueCaption, "Actual Value");
            AddString(DashboardStringId.CardRowDataElementTypeCardNameCaption, "Card Name");
            AddString(DashboardStringId.CardRowDataElementTypeDeltaIndicatorCaption, "Delta Indicator");
            AddString(DashboardStringId.CardRowDataElementTypeDimensionValueCaption, "Dimension");
            AddString(DashboardStringId.CardRowDataElementTypePercentOfTargetCaption, "Percent of Target");
            AddString(DashboardStringId.CardRowDataElementTypePercentVariationCaption, "Percent Variation");
            AddString(DashboardStringId.CardRowDataElementTypeSparklineCaption, "Sparkline");
            AddString(DashboardStringId.CardRowDataElementTypeSubtitleCaption, "Subtitle");
            AddString(DashboardStringId.CardRowDataElementTypeTargetValueCaption, "Target Value");
            AddString(DashboardStringId.CardRowDataElementTypeTitleCaption, "Title");
            AddString(DashboardStringId.DateTimeFormatDateFormatDefaultCaption, "Default");
            AddString(DashboardStringId.DateTimeFormatDateFormatLongCaption, "Long");
            AddString(DashboardStringId.DateTimeFormatDateFormatShortCaption, "Short");
            AddString(DashboardStringId.DateTimeFormatDateTimeFormatDefaultCaption, "Default");
            AddString(DashboardStringId.DateTimeFormatDateTimeFormatLongCaption, "Long");
            AddString(DashboardStringId.DateTimeFormatDateTimeFormatShortCaption, "Short");
            AddString(DashboardStringId.DateTimeFormatDateTimeFormatTimeOnlyCaption, "Time only");
            AddString(DashboardStringId.DateTimeFormatDayOfWeekFormatAbbreviatedCaption, "Abbreviated");
            AddString(DashboardStringId.DateTimeFormatDayOfWeekFormatDefaultCaption, "Default");
            AddString(DashboardStringId.DateTimeFormatDayOfWeekFormatFullCaption, "Full");
            AddString(DashboardStringId.DateTimeFormatDayOfWeekFormatNumericCaption, "Numeric");
            AddString(DashboardStringId.DateTimeFormatMonthFormatAbbreviatedCaption, "Abbreviated");
            AddString(DashboardStringId.DateTimeFormatMonthFormatDefaultCaption, "Default");
            AddString(DashboardStringId.DateTimeFormatMonthFormatFullCaption, "Full");
            AddString(DashboardStringId.DateTimeFormatMonthFormatNumericCaption, "Numeric");
            AddString(DashboardStringId.DateTimeFormatQuarterFormatDefaultCaption, "Default");
            AddString(DashboardStringId.DateTimeFormatQuarterFormatFullCaption, "Full");
            AddString(DashboardStringId.DateTimeFormatQuarterFormatNumericCaption, "Numeric");
            AddString(DashboardStringId.DateTimeFormatYearFormatAbbreviatedCaption, "Abbreviated");
            AddString(DashboardStringId.DateTimeFormatYearFormatDefaultCaption, "Default");
            AddString(DashboardStringId.DateTimeFormatYearFormatFullCaption, "Full");
            AddString(DashboardStringId.FormatConditionAppearanceBlue, "Blue");
            AddString(DashboardStringId.FormatConditionAppearanceCustom, "Custom");
            AddString(DashboardStringId.FormatConditionAppearanceCyan, "Cyan");
            AddString(DashboardStringId.FormatConditionAppearanceFontBlue, "Blue Font");
            AddString(DashboardStringId.FormatConditionAppearanceFontBold, "Bold");
            AddString(DashboardStringId.FormatConditionAppearanceFontGrayed, "Gray Font");
            AddString(DashboardStringId.FormatConditionAppearanceFontGreen, "Green Font");
            AddString(DashboardStringId.FormatConditionAppearanceFontItalic, "Italic");
            AddString(DashboardStringId.FormatConditionAppearanceFontStrikeout, "Strikeout");
            AddString(DashboardStringId.FormatConditionAppearanceFontRed, "Red Font");
            AddString(DashboardStringId.FormatConditionAppearanceFontUnderline, "Underline");
            AddString(DashboardStringId.FormatConditionAppearanceFontYellow, "Yellow Font");
            AddString(DashboardStringId.FormatConditionAppearanceGradientBlue, "Gradient Blue");
            AddString(DashboardStringId.FormatConditionAppearanceGradientCyan, "Gradient Cyan");
            AddString(DashboardStringId.FormatConditionAppearanceGradientGreen, "Gradient Green");
            AddString(DashboardStringId.FormatConditionAppearanceGradientOrange, "Gradient Orange");
            AddString(DashboardStringId.FormatConditionAppearanceGradientPurple, "Gradient Purple");
            AddString(DashboardStringId.FormatConditionAppearanceGradientRed, "Gradient Red");
            AddString(DashboardStringId.FormatConditionAppearanceGradientTransparent, "Gradient Transparent");
            AddString(DashboardStringId.FormatConditionAppearanceGradientYellow, "Gradient Yellow");
            AddString(DashboardStringId.FormatConditionAppearanceGray, "Gray");
            AddString(DashboardStringId.FormatConditionAppearanceGreen, "Green");
            AddString(DashboardStringId.FormatConditionAppearanceNone, "None");
            AddString(DashboardStringId.FormatConditionAppearanceOrange, "Orange");
            AddString(DashboardStringId.FormatConditionAppearancePaleBlue, "Pale Blue");
            AddString(DashboardStringId.FormatConditionAppearancePaleCyan, "Pale Cyan");
            AddString(DashboardStringId.FormatConditionAppearancePaleGray, "Pale Gray");
            AddString(DashboardStringId.FormatConditionAppearancePaleGreen, "Pale Green");
            AddString(DashboardStringId.FormatConditionAppearancePaleOrange, "Pale Orange");
            AddString(DashboardStringId.FormatConditionAppearancePalePurple, "Pale Purple");
            AddString(DashboardStringId.FormatConditionAppearancePaleRed, "Pale Red");
            AddString(DashboardStringId.FormatConditionAppearancePaleYellow, "Pale Yellow");
            AddString(DashboardStringId.FormatConditionAppearancePurple, "Purple");
            AddString(DashboardStringId.FormatConditionAppearanceRed, "Red");
            AddString(DashboardStringId.FormatConditionAppearanceYellow, "Yellow");
            AddString(DashboardStringId.DateTimeIntervalDay, "Day");
            AddString(DashboardStringId.DateTimeIntervalHour, "Hour");
            AddString(DashboardStringId.DateTimeIntervalMinute, "Minute");
            AddString(DashboardStringId.DateTimeIntervalMonth, "Month");
            AddString(DashboardStringId.DateTimeIntervalWeek, "Week");
            AddString(DashboardStringId.DateTimeIntervalQuarter, "Quarter");
            AddString(DashboardStringId.DateTimeIntervalSecond, "Second");
            AddString(DashboardStringId.DateTimeIntervalYear, "Year");
            AddString(DashboardStringId.DateTimeIntervalAll, "All");
            AddString(DashboardStringId.FormatConditionAutomaticValueType, "Automatic");
            AddString(DashboardStringId.FormatConditionNumberValueType, "Number");
            AddString(DashboardStringId.FormatConditionPercentValueType, "Percent");
            AddString(DashboardStringId.SparklineIndicationModeArea, "Area");
            AddString(DashboardStringId.SparklineIndicationModeBar, "Bar");
            AddString(DashboardStringId.SparklineIndicationModeLine, "Line");
            AddString(DashboardStringId.SparklineIndicationModeWinLoss, "Win/Loss");
            AddString(DashboardStringId.RankOrderAscending, "Ascending");
            AddString(DashboardStringId.RankOrderDescending, "Descending");
            AddString(DashboardStringId.RankTypeCompetition, "Competition");
            AddString(DashboardStringId.RankTypeDense, "Dense");
            AddString(DashboardStringId.RankTypeModified, "Modified");
            AddString(DashboardStringId.RankTypePercentile, "Percentile");
            AddString(DashboardStringId.RankTypeUnique, "Unique");
            AddString(DashboardStringId.DeltaIndicationModeGreaterIsGoodCaption, "Greater is good");
            AddString(DashboardStringId.DeltaIndicationModeLessIsGoodCaption, "Less is good");
            AddString(DashboardStringId.DeltaIndicationModeNoIndicationCaption, "No indication");
            AddString(DashboardStringId.DeltaIndicationModeWarningIfGreaterCaption, "Warning if greater");
            AddString(DashboardStringId.DeltaIndicationModeWarningIfLessCaption, "Warning if less");
            AddString(DashboardStringId.DeltaThresholdTypeAbsolute, "Absolute");
            AddString(DashboardStringId.DeltaThresholdTypePercent, "Percent");
            AddString(DashboardStringId.DifferenceCalculationTargetFirst, "First");
            AddString(DashboardStringId.DifferenceCalculationTargetLast, "Last");
            AddString(DashboardStringId.DifferenceCalculationTargetNext, "Next");
            AddString(DashboardStringId.DifferenceCalculationTargetPrevious, "Previous");
            AddString(DashboardStringId.NumericFormatFormatTypeCurrencyCaption, "Currency");
            AddString(DashboardStringId.NumericFormatFormatTypeGeneralCaption, "General");
            AddString(DashboardStringId.NumericFormatFormatTypeNumberCaption, "Number");
            AddString(DashboardStringId.NumericFormatFormatTypePercentCaption, "Percent");
            AddString(DashboardStringId.NumericFormatFormatTypeScientificCaption, "Scientific");
            AddString(DashboardStringId.NumericFormatFormatTypeCustomCaption, "Custom");
            AddString(DashboardStringId.NumericFormatUnitAutoCaption, "Auto");
            AddString(DashboardStringId.NumericFormatUnitBillionsCaption, "Billions");
            AddString(DashboardStringId.NumericFormatUnitMillionsCaption, "Millions");
            AddString(DashboardStringId.NumericFormatUnitOnesCaption, "Ones");
            AddString(DashboardStringId.NumericFormatUnitThousandsCaption, "Thousands");
            AddString(DashboardStringId.NumericFormatFormatTypeAutoCaption, "Auto");
            AddString(DashboardStringId.NumericFormatUnitCaption, "Unit");
            AddString(DashboardStringId.ChartCalculationAlongArguments, "Arguments");
            AddString(DashboardStringId.ChartCalculationAlongArgumentsAndSeries, "Arguments / Series");
            AddString(DashboardStringId.ChartCalculationAlongSeries, "Series");
            AddString(DashboardStringId.ChartCalculationAlongSeriesAndArguments, "Series / Arguments");
            AddString(DashboardStringId.RangeFilterCalculationAlongArgument, "Argument");
            AddString(DashboardStringId.RangeFilterCalculationAlongSeries, "Series");
            AddString(DashboardStringId.PivotCalculationAlongColumns, "Columns");
            AddString(DashboardStringId.PivotCalculationAlongColumnsAndRows, "Columns / Rows");
            AddString(DashboardStringId.PivotCalculationAlongGroupsInColumns, "Columns within Groups");
            AddString(DashboardStringId.PivotCalculationAlongGroupsInColumnsAndRows, "Columns / Rows within Groups");
            AddString(DashboardStringId.PivotCalculationAlongGroupsInRows, "Rows within Groups");
            AddString(DashboardStringId.PivotCalculationAlongGroupsInRowsAndColumns, "Rows / Columns within Groups");
            AddString(DashboardStringId.PivotCalculationAlongRows, "Rows");
            AddString(DashboardStringId.PivotCalculationAlongRowsAndColumns, "Rows / Columns");
            AddString(DashboardStringId.GridCalculationAlongRows, "Rows");
            AddString(DashboardStringId.GridCalculationAlongRowsAndSparklineArgument, "Rows / Sparkline Argument");
            AddString(DashboardStringId.GridCalculationAlongSparklineArgument, "Sparkline Argument");
            AddString(DashboardStringId.GridCalculationAlongSparklineArgumentAndRows, "Sparkline Argument / Rows");
            AddString(DashboardStringId.CardCalculationAlongCards, "Cards");
            AddString(DashboardStringId.CardCalculationAlongCardsAndSparklineArgument, "Cards / Sparkline Argument");
            AddString(DashboardStringId.CardCalculationAlongSparklineArgument, "Sparkline Argument");
            AddString(DashboardStringId.CardCalculationAlongSparklineArgumentAndCards, "Sparkline Argument / Cards");
            AddString(DashboardStringId.PieCalculationAlongArguments, "Arguments");
            AddString(DashboardStringId.PieCalculationAlongSeries, "Series");
            AddString(DashboardStringId.PieCalculationAlongArgumentsAndSeries, "Arguments / Series");
            AddString(DashboardStringId.PieCalculationAlongSeriesAndArguments, "Series / Arguments");
            AddString(DashboardStringId.RangeFilterCalculationAlongArgumentAndSeries, "Argument / Series");
            AddString(DashboardStringId.RangeFilterCalculationAlongSeriesAndArgument, "Series / Argument");
            AddString(DashboardStringId.GaugeCalculationAlongGauges, "Gauges");
            AddString(DashboardStringId.ScatterCalculationAlongArguments, "Arguments");
            AddString(DashboardStringId.CalculationAlongSpecificDimensions, "Specific...");
            AddString(DashboardStringId.IntersectionLevelModeAll, "All levels");
            AddString(DashboardStringId.IntersectionLevelModeAuto, "(Auto)");
            AddString(DashboardStringId.IntersectionLevelModeFirst, "First level");
            AddString(DashboardStringId.IntersectionLevelModeLast, "Last level");
            AddString(DashboardStringId.IntersectionLevelModeSpecific, "Specific level");
            AddString(DashboardStringId.DeltaValueTypeAbsoluteVariationCaption, "Absolute variation");
            AddString(DashboardStringId.DeltaValueTypeActualValueCaption, "Actual value");
            AddString(DashboardStringId.DeltaValueTypePercentOfTargetCaption, "Percent of target");
            AddString(DashboardStringId.DeltaValueTypePercentVariationCaption, "Percent variation");
            AddString(DashboardStringId.DeltaValueTypeTargetValueCaption, "Target value");
            AddString(DashboardStringId.CalculationTypeDifference, "Difference");
            AddString(DashboardStringId.CalculationTypePercentageDifference, "Percentage Difference");
            AddString(DashboardStringId.CalculationTypeExpression, "Expression");
            AddString(DashboardStringId.CalculationTypeNone, "None");
            AddString(DashboardStringId.CalculationTypePercentOfTotal, "Percent Of Total");
            AddString(DashboardStringId.CalculationTypeRank, "Rank");
            AddString(DashboardStringId.CalculationTypeRunningTotal, "Running Total");
            AddString(DashboardStringId.CalculationTypeMovingCalculation, "Moving Calculation");
            AddString(DashboardStringId.ExactDateFormatDay, "Day");
            AddString(DashboardStringId.ExactDateFormatHour, "Hour");
            AddString(DashboardStringId.ExactDateFormatMinute, "Minute");
            AddString(DashboardStringId.ExactDateFormatMonth, "Month");
            AddString(DashboardStringId.ExactDateFormatQuarter, "Quarter");
            AddString(DashboardStringId.ExactDateFormatSecond, "Second");
            AddString(DashboardStringId.ExactDateFormatYear, "Year");
            AddString(DashboardStringId.ExactDateDateTimeFormatPattern, "{0}: {1}");
            AddString(DashboardStringId.CommandFormatRuleAboveBelowAverage, "Average");
            AddString(DashboardStringId.CommandFormatRuleBar, "Bar");
            AddString(DashboardStringId.CommandFormatRuleColorRangeBar, "Color Range Bar");
            AddString(DashboardStringId.CommandFormatRuleBetween, "Between");
            AddString(DashboardStringId.CommandFormatRuleBetweenOrEqual, "Between Or Equal To");
            AddString(DashboardStringId.CommandFormatRuleBottomN, "Bottom N");
            AddString(DashboardStringId.CommandFormatRuleContains, "Text that Contains");
            AddString(DashboardStringId.CommandFormatRuleEqualTo, "Equal To");
            AddString(DashboardStringId.CommandFormatRuleExpression, "Expression");
            AddString(DashboardStringId.CommandFormatRuleGradientRangeBar, "Bar Gradient Ranges");
            AddString(DashboardStringId.CommandFormatRuleGreaterThan, "Greater Than");
            AddString(DashboardStringId.CommandFormatRuleGreaterThanOrEqualTo, "Greater Than Or Equal To");
            AddString(DashboardStringId.CommandFormatRuleLessThan, "Less Than");
            AddString(DashboardStringId.CommandFormatRuleLessThanOrEqualTo, "Less Than Or Equal To");
            AddString(DashboardStringId.CommandFormatRuleNotBetween, "Not Between");
            AddString(DashboardStringId.CommandFormatRuleNotBetweenOrEqual, "Not Between Or Equal To");
            AddString(DashboardStringId.CommandFormatRuleNotEqualTo, "Not Equal To");
            AddString(DashboardStringId.CommandFormatRuleRange, "Range");
            AddString(DashboardStringId.CommandFormatRuleRangeIcons, "Icon Ranges");
            AddString(DashboardStringId.CommandFormatRuleRangeSet, "Range Set");
            AddString(DashboardStringId.CommandFormatRuleTopBottom, "Top/Bottom");
            AddString(DashboardStringId.CommandFormatRuleTopN, "Top N");
            AddString(DashboardStringId.CommandFormatRuleValue, "Value");
            AddString(DashboardStringId.CommandDimensionGroupChildValues, "Group Tiles");
            AddString(DashboardStringId.CommandDimensionSortModeDisplayText, "(Display Text)");
            AddString(DashboardStringId.CommandDimensionSortModeID, "(ID)");
            AddString(DashboardStringId.CommandDimensionSortModeKey, "(Key)");
            AddString(DashboardStringId.CommandDimensionSortModeValue, "(Value)");
            AddString(DashboardStringId.CommandFormatRuleAboveAverage, "Above Average");
            AddString(DashboardStringId.CommandFormatRuleAboveOrEqualAverage, "Above Or Equal to Average");
            AddString(DashboardStringId.CommandFormatRuleBelowAverage, "Below Average");
            AddString(DashboardStringId.CommandFormatRuleBelowOrEqualAverage, "Below Or Equal to Average");
            AddString(DashboardStringId.CommandFormatRuleDateOccurring, "A Date Occurring");
            AddString(DashboardStringId.CommandFormatRuleRangeColors, "Color Ranges");
            AddString(DashboardStringId.CommandFormatRuleBarRangeColors, "Bar Color Ranges");
            AddString(DashboardStringId.CommandFormatRuleRangeGradient, "Gradient Ranges");
            AddString(DashboardStringId.RedoText, "Redo");
            AddString(DashboardStringId.UndoText, "Undo");
            AddString(DashboardStringId.FormatRuleAllowNegativeAxis, "Allow negative axis");
            AddString(DashboardStringId.FormatRuleApplyTo, "Apply to");
            AddString(DashboardStringId.FormatRuleApplyToReadOnlyDescription, "The selected style applies to all layout elements");
            AddString(DashboardStringId.FormatRuleAppliesToCardBackground, "The selected style applies to a card's background");
            AddString(DashboardStringId.FormatRuleApplyToPointSeriesElementOnly, "This option is in effect only for line or area series");
            AddString(DashboardStringId.FormatRuleApplyToColumn, "Apply to column");
            AddString(DashboardStringId.FormatRuleApplyToChartElement, "Apply to chart elements");
            AddString(DashboardStringId.FormatRuleApplyToRow, "Apply to row");
            AddString(DashboardStringId.FormatRuleApplyToAllElements, "All elements");
            AddString(DashboardStringId.FormatRuleApplyToDimensionElement, "Dimension - {0}");
            AddString(DashboardStringId.FormatRuleApplyToTextElement, "Text - \"{0}\"");
            AddString(DashboardStringId.FormatRuleDrawAxis, "Draw axis");
            AddString(DashboardStringId.FormatRuleNegativeStyle, "Negative Style Settings");
            AddString(DashboardStringId.FormatRuleShowBarOnly, "Show bar only");
            AddString(DashboardStringId.FormatRuleStyle, "Style Settings");
            AddString(DashboardStringId.FormatRuleStyleAppearance, "Appearance");
            AddString(DashboardStringId.FormatRulePredefinedColor, "Predefined color");
            AddString(DashboardStringId.FormatRuleCustomColor, "Custom color");
            AddString(DashboardStringId.FormatRuleStyleIcons, "Icons");
            AddString(DashboardStringId.FormatRuleFormatStyle, "Format style");
            AddString(DashboardStringId.FormatRuleInvalidRule, "<Invalid Rule>");
            AddString(DashboardStringId.FormatRuleInvalidRuleChanging, "Invalid Rule cannot be enabled.");
            AddString(DashboardStringId.FormatRuleDataItemIsNotAvailable, "(N/A)");
            AddString(DashboardStringId.FormatRulePercentOf, "% of all values");
            AddString(DashboardStringId.FormatRuleRangeAdd, "Add");
            AddString(DashboardStringId.FormatRuleRangeDelete, "Delete");
            AddString(DashboardStringId.FormatRuleRangeReverseStyles, "Reverse");
            AddString(DashboardStringId.FormatRuleRangeUsePercent, "Use % ranges");
            AddString(DashboardStringId.FormatRuleRangeGenerateRanges, "Generate Ranges");
            AddString(DashboardStringId.FormatRuleRangeSegmentNumber, "Number of ranges:");
            AddString(DashboardStringId.FormatRuleDisplayName, "Caption");
            AddString(DashboardStringId.FormatRuleDisplayInLegend, "Display in legend");
            AddString(DashboardStringId.FormatRuleUnableToAddRule, "Unable to add a new format rule.");
            AddString(DashboardStringId.FormatRuleUnableToAddRule_NoItemsToCalculate, "Unable to add a new format rule. There is no data item to calculate the rule.");
            AddString(DashboardStringId.FormatRuleUnableToAddRule_NoColumnsToApply, "Unable to add a new format rule. There is no column to apply the rule.");
            AddString(DashboardStringId.FormatRuleUnableToAddRule_NoCardsToApply, "Unable to add a new format rule. There is no card to apply the rule.");
            AddString(DashboardStringId.FormatRuleUnableToAddRule_NoSeriesToApply, "Unable to add a new format rule. There is no series to apply the rule.");
            AddString(DashboardStringId.FormatRuleUnableToAddRule_NoCardLayout, "Unable to add a new format rule to cards that use a legacy layout.");
            AddString(DashboardStringId.FormatRuleUnableToAddRule_NoXYAxes, "Unable to add a new format rule. X and Y axis are required.");
            AddString(DashboardStringId.LegendItemFormatString, "{0} - {1}");
            AddString(DashboardStringId.EntireRangePeriodCaption, "Entire Range");
            AddString(DashboardStringId.ToDatePeriodCaption, "To {0}");
            AddString(DashboardStringId.FromDatePeriodCaption, "From {0}");
            AddString(DashboardStringId.FromToDatePeriodCaption, "{0} - {1}");
            AddString(DashboardStringId.ExactDatePeriodCaption, "{0}");
            AddString(DashboardStringId.DataSourceDataMember, "Data Member");
            AddString(DashboardStringId.MapShapeNoneAttribute, "NONE");
            AddString(DashboardStringId.DataSourceQuery, "Query");
            AddString(DashboardStringId.DataSourceFederationQuery, "Query");
            AddString(DashboardStringId.ChoroplethMapUseBindingAttribute, "Use binding attribute");
            AddString(DashboardStringId.DashboardCurrencyUseCurrentCurrency, "Use client system settings");
            AddString(DashboardStringId.DateFilterDatePickerButtonDefaultText, "Set Filter...");
            AddString(DashboardStringId.DateFilterDisplayTextPattern, "Display Text Pattern");
            AddString(DashboardStringId.DateFilterInvalidDisplayTextPattern, "Invalid text pattern");
            AddString(DashboardStringId.UniqueNameValidationMessage, "A name should be unique.");
            AddString(DashboardStringId.UniqueCalculatedFieldNameValidationMessage, "The {0} already contains a field named {1}.");
            AddString(DashboardStringId.MessageCollectionTypesNotSupported, "Dashboard does not support collection types.");
            AddString(DashboardStringId.InvalidCustomPropertyNameMessage, "The property name '{0}' is invalid. It should contain only letters, numbers, and the underscore symbol and cannot start with a number.");
            AddString(DashboardStringId.IntegerDivisionValidationMessage, "Please Note:  This Expression engine discards fractions during integer division operations. To return decimal values (floating-point division), use ToDecimal(), ToDouble() or ToFloat() for your expression. For instance, ToDecimal(10)/4 will return 2.5 whereas 10/4 will return 2.");
            AddString(DashboardStringId.WindowFunctionValidationMessage, "Please Note: The created field can not be used as a data item. The {0} expression is valid only within the w-function or as a custom expression applied to a measure calculation.");
            AddString(DashboardStringId.ChartElementPointCaption, "Point");
            AddString(DashboardStringId.ChartElementLineOrAreaCaption, "Line/Area");
            AddString(DashboardStringId.CustomItemEmptyMeasurePlaceholder, "Measure");
            AddString(DashboardStringId.CustomItemEmptyDimensionPlaceholder, "Dimension");
            AddString(DashboardStringId.MessageCustomItemIncorrectDataItemSectionName, "The dashboard definition contains the {0} property that does not exist in the corresponding {1} class. This property will be ignored while the custom item is loading.");
            AddString(DashboardStringId.CustomItemCalculationAlongFirstAxisDimensions, "Dimensions");
            AddString(DashboardStringId.CustomItemMetadataInteractivitySectionsIncorrectOrderExceptionMessage, "The custom '{0}' item's metadata configuration does not support interactivity. Declare the '{1}' property before non-interactive data sections. See documentation for more information: https://docs.devexpress.com/Dashboard/DevExpress.DashboardCommon.SupportInteractivityAttribute");
            AddString(DashboardStringId.LayoutDimensionModeAuto, "Auto");
            AddString(DashboardStringId.LayoutDimensionModeFixed, "Fixed");
            AddString(DashboardStringId.MessageBoxWarningTitle, "Warning");
        }
    }

    public class clsDashboardWinLocalizer : DevExpress.DashboardWin.Localization.DashboardWinLocalizer
    {
        protected override void PopulateStringTable()
        {
            AddString(DashboardWinStringId.MenuFormatRulesAdd, "Add Format Rule");
            AddString(DashboardWinStringId.MenuDimensionSortBy, "Sort by");
            AddString(DashboardWinStringId.MenuMore, "More");
            AddString(DashboardWinStringId.MenuColorBy, "Color by");
            AddString(DashboardWinStringId.MenuDateTimeFormatFormat, "Format");
            AddString(DashboardWinStringId.FileFilterAll, "All Files");
            AddString(DashboardWinStringId.FileFilterDashboards, "Dashboard Files");
            AddString(DashboardWinStringId.FileFilterAllImages, "All Image Files");
            AddString(DashboardWinStringId.FileFilterExtract, "Extract File");
            AddString(DashboardWinStringId.TooltipGroupByType, "Group Fields by Type");
            AddString(DashboardWinStringId.TooltipSortAscending, "Sort Fields A to Z");
            AddString(DashboardWinStringId.TooltipSortDescending, "Sort Fields Z to A");
            AddString(DashboardWinStringId.TooltipReloadData, "Reload data");
            AddString(DashboardWinStringId.MessageBoxWarningTitle, "Warning");
            AddString(DashboardWinStringId.MessageBoxConfirmationTitle, "Confirmation");
            AddString(DashboardWinStringId.MessageBoxErrorTitle, "Error");
            AddString(DashboardWinStringId.MessageNullDashboard, "The Dashboard property cannot be set to null.");
            AddString(DashboardWinStringId.FilterEditorMeasureTitleTemplate, "Filter Editor for {0}");
            AddString(DashboardWinStringId.FilterEditorVisibleDataFilterTitleTemplate, "Visible Data Filter Editor for {0}");
            AddString(DashboardWinStringId.FilterEditorDashboardItemTitleTemplate, "Filter Editor for {0}");
            AddString(DashboardWinStringId.MessageExternalDashboardItem, "The dashboard does not contain the {0} dashboard item.");
            AddString(DashboardWinStringId.DashboardDesignerCaption, "Dashboard Designer");
            AddString(DashboardWinStringId.DashboardDesignerDefaultDashboardName, "Dashboard");
            AddString(DashboardWinStringId.DashboardDesignerEmptyMessage, "To add a dashboard item to your dashboard, click the corresponding button in the Ribbon or the Toolbar");
            AddString(DashboardWinStringId.DashboardDesignerUnableCreateRibbonMessage, "Unable to create a ribbon. The Dashboard Designer has not been assigned a parent control");
            AddString(DashboardWinStringId.DashboardDesignerUnableCreateBarsMessage, "Unable to create bars. The Dashboard Designer has not been assigned a parent control");
            AddString(DashboardWinStringId.DashboardDesignerConfirmSaveMessage, "Do you want to save changes to {0}?");
            AddString(DashboardWinStringId.DashboardDesignerDataReducedMessage, "This dashboard item is bound to a large dataset and\r\ndoes not currently display all data to retain performance.\r\nIn the Dashboard Viewer, all data will be displayed.");
            AddString(DashboardWinStringId.DashboardDesignerDataObsoleteMessage, "The dashboard item does not reflect changes made since the last dashboard update. Use the Update button to update\r\nthe dashboard according to the last modifications or enable Automatic Updates.");
            AddString(DashboardWinStringId.DragAreaDashboardItemHasNotDataItemsMessage, "The '{0}' dashboard item has no data items");
            AddString(DashboardWinStringId.DragAreaHasNotDashboardItemMessage, "Select a dashboard item to see available data items");
            AddString(DashboardWinStringId.DragItemTextTemplate, "{0} {1}");
            AddString(DashboardWinStringId.DragItemCaptionTemplate, "<b>{0}:</b>");
            AddString(DashboardWinStringId.DragItemFieldText, "<b>Source Field:</b>");
            AddString(DashboardWinStringId.MessageFileNotFound, "This file could not be found.\r\n({0})");
            AddString(DashboardWinStringId.MessageConfirmUnpinnedItemsRemove, "Are you sure you want to remove all unpinned items from the list?");
            AddString(DashboardWinStringId.MessageInteractivityDashboardItemNotFound, "Cannot find a dashboard item with the specified name. Please specify a correct name.");
            AddString(DashboardWinStringId.MessageInteractivityDataDashboardItemRequired, "Action is called for an unsupported dashboard item. Interactivity actions can be performed for data-aware dashboard items only.");
            AddString(DashboardWinStringId.MessageInteractivityRangeFilterRequired, "Action is called for an unsupported dashboard item. This action can be performed only for Range Filter.");
            AddString(DashboardWinStringId.MessageInteractivityOperationNotAvailable, "The required action is not currently available for this dashboard item.");
            AddString(DashboardWinStringId.MessageEmptyDrillDownValue, "An empty or null value has been passed to the PerformDrillDown method.");
            AddString(DashboardWinStringId.MessageServerFailedCalculatedFields, "The following calculated fields cannot be evaluated in server mode:");
            AddString(DashboardWinStringId.MessageDataProcessingModeChanging, "This operation can take a significant amount of time. Do you want to continue?");
            AddString(DashboardWinStringId.MessageSummaryCalculatedFieldInDimension, "Cannot change the expression of the '{0}' calculated field that provides data for the '{1}' dimension. Summary-based calculated fields can provide data for measures only.");
            AddString(DashboardWinStringId.MessageInvalidCalculatedFieldExpression, "The expression cannot be evaluated.");
            AddString(DashboardWinStringId.MessageEmptyExpression, "An expression cannot be empty.");
            AddString(DashboardWinStringId.MessageIncorrectGridBestFitMaxRowCountValue, "GridBestFitMaxRowCount must be greater or equal -1.");
            AddString(DashboardWinStringId.MessageCouldNotLoadObjectDatasource, "Unable to load data from the Object data source.\r\n\r\n{0}\r\n\r\nClick 'Yes' to load data as is. If you save the current dashboard, you can lose information about the Object data source.\r\nClick 'No' to cancel loading a dashboard.");
            AddString(DashboardWinStringId.MessageAmbiguousFieldsCaptions, "The expression contains a field(s) whose name can refer to different fields from the data source:");
            AddString(DashboardWinStringId.DashboardViewerEmptyDesignerMessage, "This Dashboard Viewer is empty. To provide a dashboard, do one of the following:\r\n\r\n- Click the control's smart tag and choose the existing dashboard XML file as a Dashboard Source.\r\n- Create a new dashboard at design time and select this dashboard as a Dashboard Source.");
            AddString(DashboardWinStringId.DashboardLoadingError, "Unable to load the dashboard because the following file cannot be found or it is not a valid dashboard file.\r\n{0}\r\nPlease ensure that the application can access this file and that it is valid, or specify a different file.");
            AddString(DashboardWinStringId.DashboardSavingErrorDetails, "Failed to save the dashboard. To learn more, see the error details:\r\n{0}");
            AddString(DashboardWinStringId.BarDashboardCaption, "Dashboard");
            AddString(DashboardWinStringId.RibbonPageCategoryPivotToolsName, "Pivot Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryGridToolsName, "Grid Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryChartToolsName, "Chart Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryScatterChartToolsName, "Scatter Chart Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryPiesToolsName, "Pies Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryGaugesToolsName, "Gauges Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryCardsToolsName, "Cards Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryImageToolsName, "Bound Image Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryImageUnboundToolsName, "Image Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryTextBoxToolsName, "Text Box Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryTextBoxEditorName, "Text Box Editor");
            AddString(DashboardWinStringId.RibbonPageCategoryRangeFilterToolsName, "Range Filter Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryMapToolsName, "Map Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryChoroplethMapToolsName, "Choropleth Map Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryGeoPointMapToolsName, "Geo Point Map Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryBubbleMapToolsName, "Bubble Map Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryPieMapToolsName, "Pie Map Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryTreemapToolsName, "Treemap Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryFilterElementToolsName, "Filter Element Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryGroupToolsName, "Group Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryTabPageToolsName, "Page Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryTabContainerToolsName, "Tab Container Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryDateFilterToolsName, "Date Filter Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryCustomItemToolsName, "{0} Tools");
            AddString(DashboardWinStringId.RibbonPageCategoryDefaultCustomItemToolsName, "Custom Item Tools");
            AddString(DashboardWinStringId.RibbonPageDashboardCaption, "Dashboard");
            AddString(DashboardWinStringId.RibbonPageDataCaption, "Data");
            AddString(DashboardWinStringId.RibbonPageLayoutAndStyleCaption, "Design");
            AddString(DashboardWinStringId.RibbonPageImageOptionsCaption, "Options");
            AddString(DashboardWinStringId.RibbonPageTextBoxFormatCaption, "Format");
            AddString(DashboardWinStringId.RibbonPageRangeFilterStyleCaption, "Style");
            AddString(DashboardWinStringId.RibbonGroupFileCaption, "File");
            AddString(DashboardWinStringId.RibbonGroupHistoryCaption, "History");
            AddString(DashboardWinStringId.RibbonGroupDataSourceCaption, "Data Source");
            AddString(DashboardWinStringId.RibbonGroupInsertCaption, "Insert");
            AddString(DashboardWinStringId.RibbonGroupItemsCaption, "Item");
            AddString(DashboardWinStringId.RibbonGroupGroupsCaption, "Group");
            AddString(DashboardWinStringId.RibbonGroupTabContainersCaption, "Tab Container");
            AddString(DashboardWinStringId.RibbonGroupTabPagesCaption, "Page");
            AddString(DashboardWinStringId.RibbonGroupSkinsCaption, "Skins");
            AddString(DashboardWinStringId.RibbonGroupSkinPaletteGallery, "Appearance");
            AddString(DashboardWinStringId.RibbonGroupFilteringCaption, "Filtering");
            AddString(DashboardWinStringId.RibbonGroupInteractivityCaption, "Interactivity");
            AddString(DashboardWinStringId.RibbonGroupInteractivitySettingsCaption, "Interactivity settings");
            AddString(DashboardWinStringId.RibbonGroupTargetDimensions, "Target dimensions");
            AddString(DashboardWinStringId.RibbonGroupContentArrangementCaption, "Content Arrangement");
            AddString(DashboardWinStringId.RibbonGroupGridCellsCaption, "Cells");
            AddString(DashboardWinStringId.RibbonGroupGridStyleCaption, "Style");
            AddString(DashboardWinStringId.RibbonGroupGridColumnWidthModeCaption, "Column Width Mode");
            AddString(DashboardWinStringId.RibbonGroupGridLayoutCaption, "Layout");
            AddString(DashboardWinStringId.RibbonGroupChartLayoutCaption, "Diagram");
            AddString(DashboardWinStringId.RibbonGroupScatterChartLabelsCaption, "Labels");
            AddString(DashboardWinStringId.RibbonGroupChartSeriesTypeCaption, "Series Type");
            AddString(DashboardWinStringId.RibbonGroupChartLegendPositionCaption, "Legend");
            AddString(DashboardWinStringId.RibbonGroupMapLegendPositionCaption, "Color Legend");
            AddString(DashboardWinStringId.RibbonGroupWeightedLegendPositionCaption, "Weighted Legend");
            AddString(DashboardWinStringId.RibbonGroupPieStyleCaption, "Style");
            AddString(DashboardWinStringId.RibbonGroupPieLabelsCaption, "Labels");
            AddString(DashboardWinStringId.RibbonGroupGaugeStyleCaption, "Style");
            AddString(DashboardWinStringId.RibbonGroupGaugeLabelsCaption, "Labels");
            AddString(DashboardWinStringId.RibbonGroupImageOpenCaption, "Open");
            AddString(DashboardWinStringId.RibbonGroupImageSizeModeCaption, "Size Mode");
            AddString(DashboardWinStringId.RibbonGroupImageAlignmentCaption, "Alignment");
            AddString(DashboardWinStringId.RibbonGroupTextBoxEditingCaption, "Editing");
            AddString(DashboardWinStringId.RibbonGroupRangeFilterSeriesTypeCaption, "Series Type");
            AddString(DashboardWinStringId.RibbonGroupRangeFilterInteractivityCaption, "Interactivity");
            AddString(DashboardWinStringId.RibbonGroupDateFilterInteractivityCaption, "Interactivity");
            AddString(DashboardWinStringId.RibbonGroupMapCaption, "Map");
            AddString(DashboardWinStringId.RibbonGroupMapShapefileCaption, "Open");
            AddString(DashboardWinStringId.RibbonGroupGeoPointMapClusterizationCaption, "Clustering");
            AddString(DashboardWinStringId.RibbonGroupPieMapOptionsCaption, "Pie options");
            AddString(DashboardWinStringId.RibbonGroupMapNavigationCaption, "Navigation");
            AddString(DashboardWinStringId.RibbonGroupMapShapeLabelsAttributeCaption, "Labels");
            AddString(DashboardWinStringId.RibbonGroupDashboardCaption, "Dashboard");
            AddString(DashboardWinStringId.RibbonGroupPivotLayoutCaption, "Layout");
            AddString(DashboardWinStringId.RibbonGroupPivotInitialStateCaption, "Initial State");
            AddString(DashboardWinStringId.RibbonGroupFilterElementTypeCaption, "Item Type");
            AddString(DashboardWinStringId.RibbonGroupTreeViewLayoutCaption, "Layout");
            AddString(DashboardWinStringId.RibbonGroupTreemapLayoutCaption, "Layout");
            AddString(DashboardWinStringId.RibbonTileTreemapLabelsCaption, "Tile Labels");
            AddString(DashboardWinStringId.RibbonGroupTreemapLabelsCaption, "Group Labels");
            AddString(DashboardWinStringId.RibbonGroupElementItemPropertiesCaption, "Item Settings");
            AddString(DashboardWinStringId.RibbonTabContainerReorderTabsCaption, "Tab Settings");
            AddString(DashboardWinStringId.RibbonGroupTabPageLayoutCaption, "Layout");
            AddString(DashboardWinStringId.RibbonGroupDateFilterLayoutCaption, "Layout");
            AddString(DashboardWinStringId.CommandUnsupportedCaption, "Unsupported Action");
            AddString(DashboardWinStringId.CommandUnsupportedDescription, "This action is not supported by the current version of the Dashboard Designer.\r\n\r\nPlease contact the application vendor.");
            AddString(DashboardWinStringId.CommandNewDashboardCaption, "New");
            AddString(DashboardWinStringId.CommandNewDashboardDescription, "Create a new dashboard.");
            AddString(DashboardWinStringId.CommandOpenDashboardCaption, "Open");
            AddString(DashboardWinStringId.CommandOpenDashboardDescription, "Open a dashboard file.");
            AddString(DashboardWinStringId.CommandSaveDashboardCaption, "Save");
            AddString(DashboardWinStringId.CommandSaveDashboardDescription, "Save the dashboard.");
            AddString(DashboardWinStringId.CommandSaveAsDashboardCaption, "Save As");
            AddString(DashboardWinStringId.CommandSaveAsDashboardDescription, "Save a copy of the dashboard.");
            AddString(DashboardWinStringId.CommandUndoCaption, "Undo");
            AddString(DashboardWinStringId.CommandUndoDescription, "Undo '{0}'");
            AddString(DashboardWinStringId.CommandRedoCaption, "Redo");
            AddString(DashboardWinStringId.CommandRedoDescription, "Redo '{0}'");
            AddString(DashboardWinStringId.CommandNewDataSourceCaption, "New Data Source");
            AddString(DashboardWinStringId.CommandNewDataSourceDescription, "Create a new data source.\r\n\r\nSelect the required data source type (SQL database, OLAP cube, etc.) and configure connection settings.");
            AddString(DashboardWinStringId.CommandEditDataSourceCaption, "Edit");
            AddString(DashboardWinStringId.CommandEditDataSourceDescription, "Edit the current data source in the Query Designer by selecting tables or individual columns to be included in the data source.");
            AddString(DashboardWinStringId.CommandServerModeCaption, "Server Mode");
            AddString(DashboardWinStringId.CommandServerModeDescription, "Enable server mode.");
            AddString(DashboardWinStringId.CommandDeleteDataSourceCaption, "Delete");
            AddString(DashboardWinStringId.CommandDeleteDataSourceDescription, "Remove the current data source.");
            AddString(DashboardWinStringId.CommandDeleteDataSourceUsedInDataFederationWarning, "You are trying to delete the data source that is used in the following federated data sources:\r\n\r\n{0}Continue?");
            AddString(DashboardWinStringId.CommandRenameDataSourceCaption, "Rename");
            AddString(DashboardWinStringId.CommandRenameDataSourceDescription, "Rename the current data source.");
            AddString(DashboardWinStringId.CommandSetCurrencyCultureCaption, "Currency");
            AddString(DashboardWinStringId.CommandSetCurrencyCultureDescription, "Specify the currency that will be used to display all currency values in the dashboard by default.");
            AddString(DashboardWinStringId.CommandDashboardTitleCaption, "Title");
            AddString(DashboardWinStringId.CommandDashboardTitleDescription, "Enter or edit text and select an image for the dashboard title.");
            AddString(DashboardWinStringId.CommandInsertPivotCaption, "Pivot");
            AddString(DashboardWinStringId.CommandInsertPivotDescription, "Create a pivot grid dashboard item and insert it into the dashboard.\r\n\r\nThe pivot grid displays a cross-tabular report. Use it to present multi-dimensional data in a human-readable way.");
            AddString(DashboardWinStringId.CommandInsertGridCaption, "Grid");
            AddString(DashboardWinStringId.CommandInsertGridDescription, "Create a grid dashboard item and insert it into the dashboard.\r\n\r\nThe grid shows data in a tabular form while allowing you to summarize against specific measures or calculate differences between them.");
            AddString(DashboardWinStringId.CommandInsertChartCaption, "Chart");
            AddString(DashboardWinStringId.CommandInsertChartDescription, "Create a chart dashboard item and insert it into the dashboard.\r\n\r\nThe chart visualizes data in an XY-diagram allowing you to render a wide range of diagram types – from simple bar or line charts to financial Open-High-Low-Close graphs.");
            AddString(DashboardWinStringId.CommandInsertScatterChartCaption, "Scatter Chart");
            AddString(DashboardWinStringId.CommandInsertScatterChartDescription, "Create a scatter chart dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertPiesCaption, "Pies");
            AddString(DashboardWinStringId.CommandInsertPiesDescription, "Create a pie dashboard item and insert it into the dashboard.\r\n\r\nThis item displays a series of pies or donuts that represent the contribution of each value to a total.");
            AddString(DashboardWinStringId.CommandInsertGaugesCaption, "Gauges");
            AddString(DashboardWinStringId.CommandInsertGaugesDescription, "Create a gauge dashboard item and insert it into the dashboard.\r\n\r\nThis item displays a series of gauges. Each gauge can communicate two values – one with a needle and the other with a marker on the scale.");
            AddString(DashboardWinStringId.CommandInsertCardsCaption, "Cards");
            AddString(DashboardWinStringId.CommandInsertCardsDescription, "Create a card dashboard item and insert it into the dashboard. This item displays a series of cards each illustrating the difference between two values. This difference can be expressed in an absolute or percent variation.");
            AddString(DashboardWinStringId.CommandInsertImagesCaption, "Images");
            AddString(DashboardWinStringId.CommandInsertImagesDescription, "Create an image dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertImageCaption, "Image");
            AddString(DashboardWinStringId.CommandInsertImageDescription, "Create an image dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertBoundImageCaption, "Bound Image");
            AddString(DashboardWinStringId.CommandInsertBoundImageDescription, "Create a bound image dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertTextBoxCaption, "Text Box");
            AddString(DashboardWinStringId.CommandInsertTextBoxDescription, "Create a text box dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertRangeFilterCaption, "Range Filter");
            AddString(DashboardWinStringId.CommandInsertRangeFilterDescription, "Create a range filter dashboard item and insert it into the dashboard.\r\n\r\nThe Range Filter allows you to apply filtering to other dashboard items. Displays a chart with selection thumbs over it that allow you to filter out values displayed along the argument axis.");
            AddString(DashboardWinStringId.CommandInsertChoroplethMapCaption, "Choropleth Map");
            AddString(DashboardWinStringId.CommandInsertChoroplethMapDescription, "Create a choropleth map dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertGeoPointMapsCaption, "Geo Point Maps");
            AddString(DashboardWinStringId.CommandInsertGeoPointMapsDescription, "Create a geo point map dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertGeoPointMapCaption, "Geo Point Map");
            AddString(DashboardWinStringId.CommandInsertGeoPointMapDescription, "Create a geo point map dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertBubbleMapCaption, "Bubble Map");
            AddString(DashboardWinStringId.CommandInsertBubbleMapDescription, "Create a bubble map dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertPieMapCaption, "Pie Map");
            AddString(DashboardWinStringId.CommandInsertPieMapDescription, "Create a pie map dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertFilterElementsCaption, "Filter Elements");
            AddString(DashboardWinStringId.CommandInsertFilterElementsDescription, "Insert a filter element into the dashboard.\r\n\r\nFilter elements allow you to apply filtering to other dashboard items.");
            AddString(DashboardWinStringId.CommandInsertComboboxCaption, "Combo Box");
            AddString(DashboardWinStringId.CommandInsertComboboxDescription, "Create a combo box filter element and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertListBoxCaption, "List Box");
            AddString(DashboardWinStringId.CommandInsertListBoxDescription, "Create a list box filter element and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertTreeViewCaption, "Tree View");
            AddString(DashboardWinStringId.CommandInsertTreeViewDescription, "Create a tree view filter element and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertDateFilterCaption, "Date Filter");
            AddString(DashboardWinStringId.CommandInsertDateFilterDescription, "Create a date filter element and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertTreemapCaption, "Treemap");
            AddString(DashboardWinStringId.CommandInsertTreemapDescription, "Create a treemap dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandInsertGroupCaption, "Group");
            AddString(DashboardWinStringId.CommandInsertGroupDescription, "Create a group that arranges dashboard items and allows you to manage interaction between dashboard items within and outside the group.");
            AddString(DashboardWinStringId.CommandInsertTabContainerCaption, "Tab Container");
            AddString(DashboardWinStringId.CommandInsertTabContainerDescription, "Create a Tab Container that allows you to split the dashboard layout into several pages.");
            AddString(DashboardWinStringId.CommandInsertCustomItemDefaultCaption, "Custom Item");
            AddString(DashboardWinStringId.CommandInsertCustomItemDefaultDescription, "Create a custom dashboard item and insert it into the dashboard.");
            AddString(DashboardWinStringId.CommandDuplicateItemCaption, "Duplicate");
            AddString(DashboardWinStringId.CommandDuplicateItemDescription, "Create a copy of the selected dashboard item.");
            AddString(DashboardWinStringId.CommandDeleteItemCaption, "Delete");
            AddString(DashboardWinStringId.CommandDeleteItemDescription, "Delete the selected dashboard item.");
            AddString(DashboardWinStringId.CommandDeleteGroupCaption, "Delete");
            AddString(DashboardWinStringId.CommandDeleteGroupDescription, "Delete the selected dashboard item group.");
            AddString(DashboardWinStringId.CommandDeleteTabContainerCaption, "Delete");
            AddString(DashboardWinStringId.CommandDeleteTabContainerDescription, "Delete the selected dashboard item Tab Container.");
            AddString(DashboardWinStringId.CommandDeleteTabPageCaption, "Delete");
            AddString(DashboardWinStringId.CommandDeleteTabPageDescription, "Delete the selected dashboard tab page.");
            AddString(DashboardWinStringId.CommandRemoveDataItemsCaption, "Remove Data Items");
            AddString(DashboardWinStringId.CommandRemoveDataItemsDescription, "Remove bindings for the dashboard item.");
            AddString(DashboardWinStringId.CommandTransposeItemCaption, "Transpose");
            AddString(DashboardWinStringId.CommandDefaultTransposeItemDescription, "Transpose the dashboard item.");
            AddString(DashboardWinStringId.CommandTransposePivotDescription, "Transpose pivot rows and columns.");
            AddString(DashboardWinStringId.CommandTransposePieDescription, "Transpose pie arguments and series.");
            AddString(DashboardWinStringId.CommandTransposeChartDescription, "Transpose chart arguments and series.");
            AddString(DashboardWinStringId.CommandTransposeScatterChartDescription, "Transpose the chart's X and Y axes.");
            AddString(DashboardWinStringId.CommandConvertDashboardItemTypeCaption, "Convert To");
            AddString(DashboardWinStringId.CommandConvertDashboardItemTypeDescription, "Convert the selected dashboard item to another type.");
            AddString(DashboardWinStringId.CommandConvertToPivotCaption, "Pivot");
            AddString(DashboardWinStringId.CommandConvertToPivotDescription, "Convert the selected dashboard item to a pivot dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToGridCaption, "Grid");
            AddString(DashboardWinStringId.CommandConvertToGridDescription, "Convert the selected dashboard item to a grid dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToChartCaption, "Chart");
            AddString(DashboardWinStringId.CommandConvertToChartDescription, "Convert the selected dashboard item to a chart dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToScatterChartCaption, "Scatter Chart");
            AddString(DashboardWinStringId.CommandConvertToScatterChartDescription, "Convert the selected dashboard item to a scatter chart dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToPieCaption, "Pies");
            AddString(DashboardWinStringId.CommandConvertToPieDescription, "Convert the selected dashboard item to a pie dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToGaugeCaption, "Gauges");
            AddString(DashboardWinStringId.CommandConvertToGaugeDescription, "Convert the selected dashboard item to a gauge dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToCardCaption, "Cards");
            AddString(DashboardWinStringId.CommandConvertToCardDescription, "Convert the selected dashboard item to a card dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToChoroplethMapCaption, "Choropleth Map");
            AddString(DashboardWinStringId.CommandConvertToChoroplethMapDescription, "Convert the selected dashboard item to a choropleth map dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToGeoPointMapCaption, "Geo Point Map");
            AddString(DashboardWinStringId.CommandConvertToGeoPointMapDescription, "Convert the selected dashboard item to a geo point map dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToBubbleMapCaption, "Bubble Map");
            AddString(DashboardWinStringId.CommandConvertToBubbleMapDescription, "Convert the selected dashboard item to a bubble map dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToPieMapCaption, "Pie Map");
            AddString(DashboardWinStringId.CommandConvertToPieMapDescription, "Convert the selected dashboard item to a pie map dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToGeoPointMapBaseCaption, "Geo Point Map");
            AddString(DashboardWinStringId.CommandConvertToGeoPointMapBaseDescription, "Convert the selected dashboard item to a geo point map dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToRangeFilterCaption, "Range Filter");
            AddString(DashboardWinStringId.CommandConvertToRangeFilterDescription, "Convert the selected dashboard item to a range filter dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToFilterElementsBaseCaption, "Filter Element");
            AddString(DashboardWinStringId.CommandConvertToFilterElementsBaseDescription, "Convert the selected dashboard item to a filter element.");
            AddString(DashboardWinStringId.CommandConvertToComboBoxCaption, "Combo Box");
            AddString(DashboardWinStringId.CommandConvertToComboBoxDescription, "Convert the selected dashboard item to a combo box dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToListBoxCaption, "List Box");
            AddString(DashboardWinStringId.CommandConvertToListBoxDescription, "Convert the selected dashboard item to a list box dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToTreeViewCaption, "Tree View");
            AddString(DashboardWinStringId.CommandConvertToTreeViewDescription, "Convert the selected dashboard item to a tree view dashboard item.");
            AddString(DashboardWinStringId.CommandConvertToBoundImageCaption, "Bound Image");
            AddString(DashboardWinStringId.CommandConvertToBoundImageDescription, "Convert the selected dashboard item to a bound image item");
            AddString(DashboardWinStringId.CommandConvertToTextBoxCaption, "Text Box");
            AddString(DashboardWinStringId.CommandConvertToTextBoxDescription, "Convert the selected dashboard item to a text box item");
            AddString(DashboardWinStringId.CommandConvertToTreemapCaption, "Treemap");
            AddString(DashboardWinStringId.CommandConvertToTreemapDescription, "Convert the selected dashboard item to a treemap item");
            AddString(DashboardWinStringId.CommandConvertToDateFilterCaption, "Date Filter");
            AddString(DashboardWinStringId.CommandConvertToDateFilterDescription, "Convert the selected dashboard item to a date filter item");
            AddString(DashboardWinStringId.CommandConvertToCustomItemDefaultCaption, "Custom Item");
            AddString(DashboardWinStringId.CommandConvertToCustomItemDefaultDescription, "Convert the selected dashboard item to a custom item.");
            AddString(DashboardWinStringId.CommandEditNamesCaption, "Edit Names...");
            AddString(DashboardWinStringId.CommandEditNamesDescription, "Specify names for the dashboard item and its data item containers.");
            AddString(DashboardWinStringId.CommandEditRulesCaption, "Edit Rules");
            AddString(DashboardWinStringId.CommandEditRulesDescription, "Edit rules used to apply conditional formatting to dashboard item elements.");
            AddString(DashboardWinStringId.CommandShowCaptionCaption, "Show Caption");
            AddString(DashboardWinStringId.CommandShowCaptionDescription, "Show the dashboard item's caption.");
            AddString(DashboardWinStringId.CommandEditFilterCaption, "Edit Filter...");
            AddString(DashboardWinStringId.CommandEditFilterDescription, "Specify a criterion that defines which data should be displayed within the dashboard item.");
            AddString(DashboardWinStringId.CommandClearFilterCaption, "Clear");
            AddString(DashboardWinStringId.CommandClearFilterDescription, "Reset the filter criterion and turn off filtering.");
            AddString(DashboardWinStringId.CommandEditMeasureFilterCaption, "Edit Filter");
            AddString(DashboardWinStringId.CommandClearMeasureFilterCaption, "Clear Filter");
            AddString(DashboardWinStringId.CommandEditVisibleDataFilterCaption, "Filter Visible Data");
            AddString(DashboardWinStringId.CommandEditVisibleDataFilterDescription, "Limit calculated data in the resulting view.\r\nThe Visible Data Filter uses the conditions you have specified to filter displayed data. It does not filter out any underlying data used in the calculations or in intermediate level aggregations, it just hides it from view.");
            AddString(DashboardWinStringId.CommandSingleMasterFilterCaption, "Single Master Filter");
            AddString(DashboardWinStringId.CommandMultipleMasterFilterCaption, "Multiple Master Filter");
            AddString(DashboardWinStringId.CommandDrillDownCaption, "Drill Down");
            AddString(DashboardWinStringId.CommandSingleMasterFilterDescription, "Enable Single Master Filter.\r\nWhen you select an element within the dashboard item, other dashboard items show only data corresponding to the element you have selected.");
            AddString(DashboardWinStringId.CommandSingleMasterFilterDisabledDescription, "Single Master Filter is not supported when cell merging is enabled.");
            AddString(DashboardWinStringId.CommandMultipleMasterFilterDescription, "Enable Multiple Master Filter.\r\nWhen you select multiple elements within a dashboard item, other dashboard items show only data corresponding to elements you have selected.");
            AddString(DashboardWinStringId.CommandMultipleMasterFilterDisabledDescription, "Multiple Master Filter is not supported when cell merging is enabled.");
            AddString(DashboardWinStringId.CommandDrillDownDescription, "Enable Drill Down.\r\nClick an element within the dashboard item to display detailed data related to this element.");
            AddString(DashboardWinStringId.CommandDrillDownDisabledDescription, "The Drill Down is not supported when points are used to perform interactivity actions.");
            AddString(DashboardWinStringId.CommandTargetDimensionsArgumentsCaption, "Arguments");
            AddString(DashboardWinStringId.CommandTargetDimensionsSeriesCaption, "Series");
            AddString(DashboardWinStringId.CommandTargetDimensionsPointsCaption, "Points");
            AddString(DashboardWinStringId.CommandTargetDimensionsArgumentsDescription, "Arguments are used to perform Master Filtering and drill-down.");
            AddString(DashboardWinStringId.CommandTargetDimensionsSeriesDescription, "Series are used to perform Master Filtering and drill-down.");
            AddString(DashboardWinStringId.CommandTargetDimensionsPointsDescription, "Points are used to perform interactivity actions.");
            AddString(DashboardWinStringId.CommandCrossDataSourceFilteringCaption, "Cross-Data-Source Filtering");
            AddString(DashboardWinStringId.CommandCrossDataSourceFilteringDescription, "Allow the Master Filter to affect dashboard items that display data from other data sources. In this instance, filtering is performed if full names of data source fields match.");
            AddString(DashboardWinStringId.CommandIgnoreMasterFiltersCaption, "Ignore Master Filters");
            AddString(DashboardWinStringId.CommandIgnoreMasterFiltersDescription, "Specify whether this dashboard item ignores filtering applied by Master Filters.");
            AddString(DashboardWinStringId.CommandGroupIgnoreMasterFiltersCaption, "Ignore Master Filters");
            AddString(DashboardWinStringId.CommandGroupIgnoreMasterFiltersDescription, "Specify whether the dashboard items contained in this group ignore filtering applied by Master Filters.");
            AddString(DashboardWinStringId.CommandTabPageIgnoreMasterFiltersCaption, "Ignore Master Filters");
            AddString(DashboardWinStringId.CommandTabPageIgnoreMasterFiltersDescription, "Specify whether the dashboard items and groups contained in this tab page ignore filtering applied by Master Filters.");
            AddString(DashboardWinStringId.CommandGroupMasterFilterCaption, "Master Filter");
            AddString(DashboardWinStringId.CommandGroupMasterFilterDescription, "Enable the capability to filter external dashboard items using master filter items contained within the current dashboard item group.");
            AddString(DashboardWinStringId.CommandTabPageMasterFilterCaption, "Master Filter");
            AddString(DashboardWinStringId.CommandTabPageMasterFilterDescription, "Enable the capability to filter external dashboard items using master filter items contained within the current dashboard tab page.");
            AddString(DashboardWinStringId.CommandContentAutoArrangeCaption, "Auto Arrange");
            AddString(DashboardWinStringId.CommandContentAutoArrangeDescription, "The number of columns and rows is defined automatically.");
            AddString(DashboardWinStringId.CommandContentArrangeInColumnsCaption, "Arrange in Columns");
            AddString(DashboardWinStringId.CommandContentArrangeInColumnsDescription, "Arrange the elements in the specified number of columns.");
            AddString(DashboardWinStringId.CommandContentArrangeInRowsCaption, "Arrange in Rows");
            AddString(DashboardWinStringId.CommandContentArrangeInRowsDescription, "Arrange the elements in the specified number of rows.");
            AddString(DashboardWinStringId.CommandContentArrangementCountCaption, "Count ");
            AddString(DashboardWinStringId.CommandContentArrangementCountDescription, "The number of columns or rows.");
            AddString(DashboardWinStringId.CommandGridHorizontalLinesCaption, "Horizontal Lines");
            AddString(DashboardWinStringId.CommandGridHorizontalLinesDescription, "Show horizontal grid lines.");
            AddString(DashboardWinStringId.CommandGridWordWrapCaption, "Word Wrap");
            AddString(DashboardWinStringId.CommandGridWordWrapDescription, "Enable word wrapping that allows displaying cell content on multiple lines.");
            AddString(DashboardWinStringId.CommandGridAutoFitToContentsColumnWidthModeCaption, "AutoFit to Contents");
            AddString(DashboardWinStringId.CommandGridAutoFitToContentsColumnWidthModeDescription, "Adjust the width of columns automatically to display their content entirely. If the grid cannot display the entire content, horizontal scrolling is enabled.");
            AddString(DashboardWinStringId.CommandGridVerticalLinesCaption, "Vertical Lines");
            AddString(DashboardWinStringId.CommandGridVerticalLinesDescription, "Show vertical grid lines.");
            AddString(DashboardWinStringId.GridColumnFitToContentMenuItemCaption, "Fit to Content");
            AddString(DashboardWinStringId.GridColumnFitToContentMenuItemDescription, "Fit to Content.");
            AddString(DashboardWinStringId.GridColumnWidthMenuItemCaption, "Column Width...");
            AddString(DashboardWinStringId.GridColumnWidthMenuItemDescription, "Column Width...");
            AddString(DashboardWinStringId.GridColumnFixedWidthMenuItemCaption, "Fix Width");
            AddString(DashboardWinStringId.GridColumnFixedWidthMenuItemDescription, "Fix Width.");
            AddString(DashboardWinStringId.ResetGridColumnsWidthMenuItemCaption, "Reset Column Widths");
            AddString(DashboardWinStringId.ResetGridColumnsWidthMenuItemDescription, "Reset column widths.");
            AddString(DashboardWinStringId.RangeFilterCustomDateTimePeriodCaption, "Custom Period...");
            AddString(DashboardWinStringId.RangeFilterCustomDateTimePeriodDescription, "Select a custom date time period.");
            AddString(DashboardWinStringId.RangeFilterEditDateTimePeriodsRibbonCaption, "Edit Periods");
            AddString(DashboardWinStringId.RangeFilterEditDateTimePeriodsCaption, "Edit Periods...");
            AddString(DashboardWinStringId.RangeFilterEditDateTimePeriodsDescription, "Edit date-time periods used to select a predefined range using the range filter.");
            AddString(DashboardWinStringId.DateFilterEditDateTimePeriodsCaption, "Edit Periods");
            AddString(DashboardWinStringId.DateFilterEditDateTimePeriodsDescription, "Edit predefined periods displayed as quick filter buttons.");
            AddString(DashboardWinStringId.GridSortAscendingMenuItemCaption, "Sort Ascending");
            AddString(DashboardWinStringId.GridSortAscendingMenuItemDescription, "Sort Ascending");
            AddString(DashboardWinStringId.GridSortDescendingMenuItemCaption, "Sort Descending");
            AddString(DashboardWinStringId.GridSortDescendingMenuItemDescription, "Sort Descending");
            AddString(DashboardWinStringId.AddGridColumnTotalBarItemCaption, "Add Total");
            AddString(DashboardWinStringId.ClearGridColumnTotalsBarItemCaption, "Clear Totals");
            AddString(DashboardWinStringId.RemoveGridColumnTotalBarItemCaption, "Remove");
            AddString(DashboardWinStringId.GridColumnTotalCountBarItemCaption, "Count");
            AddString(DashboardWinStringId.GridColumnTotalMinBarItemCaption, "Min");
            AddString(DashboardWinStringId.GridColumnTotalMaxBarItemCaption, "Max");
            AddString(DashboardWinStringId.GridColumnTotalAvgBarItemCaption, "Average");
            AddString(DashboardWinStringId.GridColumnTotalSumBarItemCaption, "Sum");
            AddString(DashboardWinStringId.GridColumnTotalAutoBarItemCaption, "Auto");
            AddString(DashboardWinStringId.GridClearSortingMenuItemCaption, "Clear Sorting");
            AddString(DashboardWinStringId.GridClearSortingMenuItemDescription, "Clear Sorting");
            AddString(DashboardWinStringId.CommandGridAutoFitToGridColumnWidthModeCaption, "AutoFit to Grid");
            AddString(DashboardWinStringId.CommandGridAutoFitToGridColumnWidthModeDescription, "Adjust the width of columns automatically to display their content in an optimal way depending on grid width.");
            AddString(DashboardWinStringId.CommandGridManualGridColumnWidthModeCaption, "Manual");
            AddString(DashboardWinStringId.CommandGridManualGridColumnWidthModeDescription, "Adjust the width of columns manually.");
            AddString(DashboardWinStringId.CommandGridMergeCellsCaption, "Merge Cells");
            AddString(DashboardWinStringId.CommandGridMergeCellsDescription, "Merge adjacent cells with identical data.");
            AddString(DashboardWinStringId.CommandGridMergeCellsDisabledDescription, "Cell merging is not supported when Master Filtering is enabled.");
            AddString(DashboardWinStringId.CommandGridBandedRowsCaption, "Banded Rows");
            AddString(DashboardWinStringId.CommandGridBandedRowsDescription, "Paint the background of even and odd rows differently to make the grid easier to read.");
            AddString(DashboardWinStringId.CommandGridBandedRowsDisabledDescription, "Banded rows are not supported when cell merging is enabled.");
            AddString(DashboardWinStringId.CommandGridColumnHeadersCaption, "Column Headers");
            AddString(DashboardWinStringId.CommandGridColumnHeadersDescription, "Show column headers.");
            AddString(DashboardWinStringId.CommandChartRotateCaption, "Rotate");
            AddString(DashboardWinStringId.CommandChartRotateDescription, "Rotate the diagram at 90°.");
            AddString(DashboardWinStringId.CommandChartSeriesTypeCaption, "Series Type");
            AddString(DashboardWinStringId.CommandChartSeriesTypeDescription, "Change the type of chart series.");
            AddString(DashboardWinStringId.CommandRangeFilterSeriesTypeCaption, "Series Type");
            AddString(DashboardWinStringId.CommandRangeFilterSeriesTypeDescription, "Change the type of range filter series.");
            AddString(DashboardWinStringId.CommandChartShowLegendCaption, "Show Legend");
            AddString(DashboardWinStringId.CommandChartShowLegendDescription, "Show the legend that helps end-users identify chart elements.");
            AddString(DashboardWinStringId.CommandScatterChartShowLegendCaption, "Show Legend");
            AddString(DashboardWinStringId.CommandScatterChartShowLegendDescription, "Show the legend that helps end-users identify scatter chart elements.");
            AddString(DashboardWinStringId.CommandScatterChartPointLabelOptionsCaption, "Point Labels");
            AddString(DashboardWinStringId.CommandScatterChartPointLabelOptionsDescription, "Customize settings related to point labels.");
            AddString(DashboardWinStringId.CommandReorderTabsCaption, "Reorder Tabs");
            AddString(DashboardWinStringId.CommandReorderTabsDescription, "Change the page order.");
            AddString(DashboardWinStringId.CommandChartYAxisSettingsCaption, "Y-Axis Settings");
            AddString(DashboardWinStringId.CommandChartYAxisSettingsDescription, "Customize various Y-axis settings, such as the visibility, title and displayed range.");
            AddString(DashboardWinStringId.CommandChartXAxisSettingsCaption, "X-Axis Settings");
            AddString(DashboardWinStringId.CommandChartXAxisSettingsDescription, "Customize various X-axis settings, such as the visibility and axis title.");
            AddString(DashboardWinStringId.CommandScatterChartYAxisSettingsCaption, "Y-Axis Settings");
            AddString(DashboardWinStringId.CommandScatterChartYAxisSettingsDescription, "Customize various Y-axis settings, such as the visibility and axis type.");
            AddString(DashboardWinStringId.CommandScatterChartXAxisSettingsCaption, "X-Axis Settings");
            AddString(DashboardWinStringId.CommandScatterChartXAxisSettingsDescription, "Customize various X-axis settings, such as the visibility and axis type.");
            AddString(DashboardWinStringId.CommandChartLegendPositionCaption, "Legend Position");
            AddString(DashboardWinStringId.CommandChartLegendPositionDescription, "Change the legend position within the Chart.");
            AddString(DashboardWinStringId.CommandScatterChartLegendPositionCaption, "Legend Position");
            AddString(DashboardWinStringId.CommandScatterChartLegendPositionDescription, "Change the legend position within the Scatter Chart.");
            AddString(DashboardWinStringId.CommandChartAddPaneCaption, "Add Pane");
            AddString(DashboardWinStringId.CommandTreemapSliceAndDiceLayoutAlgorithmCaption, "Slice and Dice");
            AddString(DashboardWinStringId.CommandTreemapSliceAndDiceLayoutAlgorithmDescription, "Enable the Slice and Dice layout algorithm.");
            AddString(DashboardWinStringId.CommandTreemapSquarifiedLayoutAlgorithmCaption, "Squarified");
            AddString(DashboardWinStringId.CommandTreemapSquarifiedLayoutAlgorithmDescription, "Enable the Squarified layout algorithm.");
            AddString(DashboardWinStringId.CommandTreemapStripedLayoutAlgorithmCaption, "Striped");
            AddString(DashboardWinStringId.CommandTreemapStripedLayoutAlgorithmDescription, "Enable the Strip layout algorithm.");
            AddString(DashboardWinStringId.CommandTreemapLayoutDirectionCaption, "Layout Direction");
            AddString(DashboardWinStringId.CommandTreemapLayoutDirectionDescription, "Specify a layout direction used by Treemap.");
            AddString(DashboardWinStringId.CommandTreemapBottomLeftToTopRightLayoutDirectionCaption, "Bottom Left - Top Right");
            AddString(DashboardWinStringId.CommandTreemapBottomLeftToTopRightLayoutDirectionDescription, "Arrange items from the bottom-left to the top-right corner.");
            AddString(DashboardWinStringId.CommandTreemapBottomRightToTopLeftLayoutDirectionCaption, "Bottom Right - Top Left");
            AddString(DashboardWinStringId.CommandTreemapBottomRightToTopLeftLayoutDirectionDescription, "Arrange items from the bottom-right to the top-left corner.");
            AddString(DashboardWinStringId.CommandTreemapTopLeftToBottomRightLayoutDirectionCaption, "Top Left - Bottom Right");
            AddString(DashboardWinStringId.CommandTreemapTopLeftToBottomRightLayoutDirectionDescription, "Arrange items from the top-left to the bottom-right corner.");
            AddString(DashboardWinStringId.CommandTreemapTopRightToBottomLeftLayoutDirectionCaption, "Top Right - Bottom Left");
            AddString(DashboardWinStringId.CommandTreemapTopRightToBottomLeftLayoutDirectionDescription, "Arrange items from the top-right to the bottom-left corner.");
            AddString(DashboardWinStringId.CommandTreemapTileLabelsCaption, "Labels");
            AddString(DashboardWinStringId.CommandTreemapTileLabelsDescription, "Specify which values should be displayed within tiles.");
            AddString(DashboardWinStringId.CommandTreemapTileLabelsNoneCaption, "None");
            AddString(DashboardWinStringId.CommandTreemapTileLabelsNoneDescription, "Data labels are not displayed.");
            AddString(DashboardWinStringId.CommandTreemapTileLabelsArgumentCaption, "Argument");
            AddString(DashboardWinStringId.CommandTreemapTileLabelsArgumentDescription, "Arguments are displayed within data labels.");
            AddString(DashboardWinStringId.CommandTreemapTileLabelsValueCaption, "Value");
            AddString(DashboardWinStringId.CommandTreemapTileLabelsValueDescription, "Values are displayed within data labels.");
            AddString(DashboardWinStringId.CommandTreemapTileLabelsArgumentAndValueCaption, "Argument and Value");
            AddString(DashboardWinStringId.CommandTreemapTileLabelsArgumentAndValueDescription, "Arguments and values are displayed within data labels.");
            AddString(DashboardWinStringId.CommandTreemapTileTooltipsCaption, "Tooltips");
            AddString(DashboardWinStringId.CommandTreemapTileTooltipsDescription, "Specify which values should be displayed within tile tooltips.");
            AddString(DashboardWinStringId.CommandTreemapTileTooltipsNoneCaption, "None");
            AddString(DashboardWinStringId.CommandTreemapTileTooltipsNoneDescription, "Data labels are not displayed.");
            AddString(DashboardWinStringId.CommandTreemapTileTooltipsArgumentCaption, "Argument");
            AddString(DashboardWinStringId.CommandTreemapTileTooltipsArgumentDescription, "Arguments are displayed within data labels.");
            AddString(DashboardWinStringId.CommandTreemapTileTooltipsValueCaption, "Value");
            AddString(DashboardWinStringId.CommandTreemapTileTooltipsValueDescription, "Values are displayed within data labels.");
            AddString(DashboardWinStringId.CommandTreemapTileTooltipsArgumentAndValueCaption, "Argument and Value");
            AddString(DashboardWinStringId.CommandTreemapTileTooltipsArgumentAndValueDescription, "Arguments and values are displayed within data labels.");
            AddString(DashboardWinStringId.CommandTreemapGroupLabelsCaption, "Labels");
            AddString(DashboardWinStringId.CommandTreemapGroupLabelsDescription, "Specify which values should be displayed group captions.");
            AddString(DashboardWinStringId.CommandTreemapGroupLabelsNoneCaption, "None");
            AddString(DashboardWinStringId.CommandTreemapGroupLabelsNoneDescription, "Data labels are not displayed.");
            AddString(DashboardWinStringId.CommandTreemapGroupLabelsArgumentCaption, "Argument");
            AddString(DashboardWinStringId.CommandTreemapGroupLabelsArgumentDescription, "Arguments are displayed within data labels.");
            AddString(DashboardWinStringId.CommandTreemapGroupLabelsValueCaption, "Value");
            AddString(DashboardWinStringId.CommandTreemapGroupLabelsValueDescription, "Values are displayed within data labels.");
            AddString(DashboardWinStringId.CommandTreemapGroupLabelsArgumentAndValueCaption, "Argument and Value");
            AddString(DashboardWinStringId.CommandTreemapGroupLabelsArgumentAndValueDescription, "Arguments and values are displayed within data labels.");
            AddString(DashboardWinStringId.CommandTreemapGroupTooltipsCaption, "Tooltips");
            AddString(DashboardWinStringId.CommandTreemapGroupTooltipsDescription, "Specify which values should be displayed within group tooltips.");
            AddString(DashboardWinStringId.CommandTreemapGroupTooltipsNoneCaption, "None");
            AddString(DashboardWinStringId.CommandTreemapGroupTooltipsNoneDescription, "Data labels are not displayed.");
            AddString(DashboardWinStringId.CommandTreemapGroupTooltipsArgumentCaption, "Argument");
            AddString(DashboardWinStringId.CommandTreemapGroupTooltipsArgumentDescription, "Arguments are displayed within data labels.");
            AddString(DashboardWinStringId.CommandTreemapGroupTooltipsValueCaption, "Value");
            AddString(DashboardWinStringId.CommandTreemapGroupTooltipsValueDescription, "Values are displayed within data labels.");
            AddString(DashboardWinStringId.CommandTreemapGroupTooltipsArgumentAndValueCaption, "Argument and Value");
            AddString(DashboardWinStringId.CommandTreemapGroupTooltipsArgumentAndValueDescription, "Arguments and values are displayed within data labels.");
            AddString(DashboardWinStringId.CommandChartAddPaneDescription, "Create a new pane within this chart.");
            AddString(DashboardWinStringId.CommandChartRemovePaneCaption, "Remove Pane");
            AddString(DashboardWinStringId.CommandPieStylePieCaption, "Pie");
            AddString(DashboardWinStringId.CommandPieStylePieDescription, "Display pies.");
            AddString(DashboardWinStringId.CommandPieStyleDonutCaption, "Donut");
            AddString(DashboardWinStringId.CommandPieStyleDonutDescription, "Display donuts.");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsCaption, "Data Labels");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsDescription, "Specify which values should be displayed within data labels.");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsNoneCaption, "None");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsNoneDescription, "Do not display data labels");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsArgumentCaption, "Argument");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsArgumentDescription, "Argument");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsPercentCaption, "Percent");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsPercentDescription, "Percent");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsValueCaption, "Value");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsValueDescription, "Value");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsValueAndPercentCaption, "Value And Percent");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsValueAndPercentDescription, "Value And Percent");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsArgumentAndPercentCaption, "Argument And Percent");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsArgumentAndPercentDescription, "Argument And Percent");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsArgumentAndValueCaption, "Argument And Value");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsArgumentAndValueDescription, "Argument And Value");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsArgumentValueAndPercentCaption, "Argument, Value And Percent");
            AddString(DashboardWinStringId.CommandPieLabelsDataLabelsArgumentValueAndPercentDescription, "Argument, Value And Percent");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsCaption, "Tooltips");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsDescription, "Specify which values should be displayed within tooltips.");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsNoneCaption, "None");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsNoneDescription, "None");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsArgumentCaption, "Argument");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsArgumentDescription, "Argument");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsPercentCaption, "Percent");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsPercentDescription, "Percent");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsValueCaption, "Value");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsValueDescription, "Value");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsValueAndPercentCaption, "Value And Percent");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsValueAndPercentDescription, "Value And Percent");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsArgumentAndPercentCaption, "Argument And Percent");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsArgumentAndPercentDescription, "Argument And Percent");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsArgumentAndValueCaption, "Argument And Value");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsArgumentAndValueDescription, "Argument And Value");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsArgumentValueAndPercentCaption, "Argument, Value And Percent");
            AddString(DashboardWinStringId.CommandPieLabelsTooltipsArgumentValueAndPercentDescription, "Argument, Value And Percent");
            AddString(DashboardWinStringId.CommandPieLabelPositionCaption, "Data Labels Position");
            AddString(DashboardWinStringId.CommandPieLabelPositionDescription, "Specify data labels position.");
            AddString(DashboardWinStringId.CommandPieLabelPositionOutsideCaption, "Outside");
            AddString(DashboardWinStringId.CommandPieLabelPositionOutsideDescription, "Place data labels outside pie segments.");
            AddString(DashboardWinStringId.CommandPieLabelPositionInsideCaption, "Inside");
            AddString(DashboardWinStringId.CommandPieLabelPositionInsideDescription, "Place data labels inside pie segments.");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionCaption, "Legend Position");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionDescription, "Select the position of the legend.");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionNoneCaption, "None");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionNoneDescription, "None");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionLeftCaption, "Left");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionLeftDescription, "Left");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionRightCaption, "Right");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionRightDescription, "Right");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionTopCaption, "Top");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionTopDescription, "Top");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionBottomCaption, "Bottom");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionBottomDescription, "Bottom");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionTopRightCaption, "TopRight");
            AddString(DashboardWinStringId.CommandPieLabelsLegendPositionTopRightDescription, "TopRight");
            AddString(DashboardWinStringId.CommandPieShowCaptionsCaption, "Show Pie Captions");
            AddString(DashboardWinStringId.CommandPieShowCaptionsDescription, "Show captions for individual diagrams within this dashboard item.");
            AddString(DashboardWinStringId.CommandGaugeStyleFullCircularCaption, "Full Circular");
            AddString(DashboardWinStringId.CommandGaugeStyleFullCircularDescription, "Display full circular gauges.");
            AddString(DashboardWinStringId.CommandGaugeStyleHalfCircularCaption, "Half-Circular");
            AddString(DashboardWinStringId.CommandGaugeStyleHalfCircularDescription, "Display half-circular gauges.");
            AddString(DashboardWinStringId.CommandGaugeStyleLeftQuarterCircularCaption, "Left-Quarter Circular");
            AddString(DashboardWinStringId.CommandGaugeStyleLeftQuarterCircularDescription, "Display left-quarter circular gauges.");
            AddString(DashboardWinStringId.CommandGaugeStyleRightQuarterCircularCaption, "Right-Quarter Circular");
            AddString(DashboardWinStringId.CommandGaugeStyleRightQuarterCircularDescription, "Display right-quarter circular gauges.");
            AddString(DashboardWinStringId.CommandGaugeStyleThreeFourthCircularCaption, "Three-Quarter Circular");
            AddString(DashboardWinStringId.CommandGaugeStyleThreeFourthCircularDescription, "Display three-quarter circular gauges.");
            AddString(DashboardWinStringId.CommandGaugeStyleLinearHorizontalCaption, "Linear Horizontal");
            AddString(DashboardWinStringId.CommandGaugeStyleLinearHorizontalDescription, "Display horizontal linear gauges.");
            AddString(DashboardWinStringId.CommandGaugeStyleLinearVerticalCaption, "Linear Vertical");
            AddString(DashboardWinStringId.CommandGaugeStyleLinearVerticalDescription, "Display vertical linear gauges.");
            AddString(DashboardWinStringId.CommandGaugeShowCaptionsCaption, "Show Gauge Captions");
            AddString(DashboardWinStringId.CommandGaugeShowCaptionsDescription, "Show captions for individual gauges within this dashboard item.");
            AddString(DashboardWinStringId.CommandImageLoadCaption, "Load Image...");
            AddString(DashboardWinStringId.CommandImageLoadDescription, "Load an image from a file. The dashboard will store the path to the image file and will not store the image itself.");
            AddString(DashboardWinStringId.CommandImageImportCaption, "Import Image...");
            AddString(DashboardWinStringId.CommandImageImportDescription, "Import an image from a file. The dashboard will store a copy of the image.");
            AddString(DashboardWinStringId.CommandImageSizeMode, "Size Mode");
            AddString(DashboardWinStringId.CommandImageSizeModeClipCaption, "Clip");
            AddString(DashboardWinStringId.CommandImageSizeModeClipDescription, "The image is placed in the upper-left corner of the dashboard item and clipped if necessary.");
            AddString(DashboardWinStringId.CommandImageSizeModeStretchCaption, "Stretch");
            AddString(DashboardWinStringId.CommandImageSizeModeStretchDescription, "The image within the dashboard item is stretched or shrunk as appropriate to fit the size of the dashboard item.");
            AddString(DashboardWinStringId.CommandImageSizeModeSqueezeCaption, "Squeeze");
            AddString(DashboardWinStringId.CommandImageSizeModeSqueezeDescription, "If the dashboard item 's dimensions exceed that of the image it contains, the image is centered and shown full-size. Otherwise, the image is resized to fit into the dashboard item 's dimensions.");
            AddString(DashboardWinStringId.CommandImageSizeModeZoomCaption, "Zoom");
            AddString(DashboardWinStringId.CommandImageSizeModeZoomDescription, "The image is sized proportionally (without clipping), so that it is best fitted to the dashboard item.");
            AddString(DashboardWinStringId.CommandImageAlignmentCaption, "Alignment");
            AddString(DashboardWinStringId.CommandImageAlignmentTopLeftCaption, "Align Top Left");
            AddString(DashboardWinStringId.CommandImageAlignmentTopLeftDescription, "Align image to the top left corner of the dashboard item.");
            AddString(DashboardWinStringId.CommandImageAlignmentCenterLeftCaption, "Align Center Left");
            AddString(DashboardWinStringId.CommandImageAlignmentCenterLeftDescription, "Center image vertically and align it to the left of the dashboard item.");
            AddString(DashboardWinStringId.CommandImageAlignmentBottomLeftCaption, "Align Bottom Left");
            AddString(DashboardWinStringId.CommandImageAlignmentBottomLeftDescription, "Align image to the bottom left corner of the dashboard item.");
            AddString(DashboardWinStringId.CommandImageAlignmentTopCenterCaption, "Align Top Center");
            AddString(DashboardWinStringId.CommandImageAlignmentTopCenterDescription, "Center image horizontally and align it to the top of the dashboard item.");
            AddString(DashboardWinStringId.CommandImageAlignmentCenterCenterCaption, "Align Center");
            AddString(DashboardWinStringId.CommandImageAlignmentCenterCenterDescription, "Center image horizontally and vertically within the dashboard item.");
            AddString(DashboardWinStringId.CommandImageAlignmentBottomCenterCaption, "Align Bottom Center");
            AddString(DashboardWinStringId.CommandImageAlignmentBottomCenterDescription, "Center image horizontally and align it to the bottom of the dashboard item.");
            AddString(DashboardWinStringId.CommandImageAlignmentTopRightCaption, "Align Top Right");
            AddString(DashboardWinStringId.CommandImageAlignmentTopRightDescription, "Align image to the top right corner of the dashboard item.");
            AddString(DashboardWinStringId.CommandImageAlignmentCenterRightCaption, "Align Center Right");
            AddString(DashboardWinStringId.CommandImageAlignmentCenterRightDescription, "Center image vertically and align it to the right of the dashboard item.");
            AddString(DashboardWinStringId.CommandImageAlignmentBottomRightCaption, "Align Bottom Right");
            AddString(DashboardWinStringId.CommandImageAlignmentBottomRightDescription, "Align image to the bottom right corner of the dashboard item.");
            AddString(DashboardWinStringId.CommandDateFilterExactTypeCaption, "Exact");
            AddString(DashboardWinStringId.CommandDateFilterExactTypeDescription, "Display values for the specified date.");
            AddString(DashboardWinStringId.CommandDateFilterAfterTypeCaption, "After");
            AddString(DashboardWinStringId.CommandDateFilterAfterTypeDescription, "Display values from the specified date.");
            AddString(DashboardWinStringId.CommandDateFilterBeforeTypeCaption, "Before");
            AddString(DashboardWinStringId.CommandDateFilterBeforeTypeDescription, "Display values before the specified date.");
            AddString(DashboardWinStringId.CommandDateFilterBetweenTypeCaption, "Between");
            AddString(DashboardWinStringId.CommandDateFilterBetweenTypeDescription, "Display values between two specified dates.");
            AddString(DashboardWinStringId.CommandDateFilterTypeCaption, "Filter Type");
            AddString(DashboardWinStringId.CommandDateFilterTypeDescription, "Specify the Date Filter type.");
            AddString(DashboardWinStringId.CommandDateFilterArrangementModeCaption, "Arrangement Mode");
            AddString(DashboardWinStringId.CommandDateFilterArrangementModeDescription, "Set a layout of the Date Filter elements.");
            AddString(DashboardWinStringId.CommandDateFilterArrangementModeAutoHeightCaption, "Auto Height");
            AddString(DashboardWinStringId.CommandDateFilterArrangementModeAutoHeightDescription, "Elements are arranged in horizontal order in a row and moved to the next row(s) when the Date Filter's width is not sufficient. In a dashboard with several dashboard items laid out vertically, the Date Filter's height is set to the minimum value required to fit Date Filter elements.");
            AddString(DashboardWinStringId.CommandDateFilterArrangementModeHorizontalCaption, "Horizontal");
            AddString(DashboardWinStringId.CommandDateFilterArrangementModeHorizontalDescription, "Elements are arranged in horizontal order in a row and moved to the next row(s) when the Date Filter's width is not sufficient.");
            AddString(DashboardWinStringId.CommandDateFilterArrangementModeVerticalCaption, "Vertical");
            AddString(DashboardWinStringId.CommandDateFilterArrangementModeVerticalDescription, "Elements are arranged in vertical order in a column and moved to the next column(s) when the Date Filter item's height is not sufficient.");
            AddString(DashboardWinStringId.CommandDateFilterDatePickerLocationCaption, "Date Picker Location");
            AddString(DashboardWinStringId.CommandDateFilterDatePickerLocationDescription, "Specify the Date Picker position in the series of Quick Buttons.");
            AddString(DashboardWinStringId.CommandDateFilterDatePickerLocationFarCaption, "Far");
            AddString(DashboardWinStringId.CommandDateFilterDatePickerLocationFarDescription, "The position at the far end of the series.");
            AddString(DashboardWinStringId.CommandDateFilterDatePickerLocationNearCaption, "Near");
            AddString(DashboardWinStringId.CommandDateFilterDatePickerLocationNearDescription, "The position at the near end of the series.");
            AddString(DashboardWinStringId.CommandDateFilterDatePickerLocationHiddenCaption, "Hidden");
            AddString(DashboardWinStringId.CommandDateFilterDatePickerLocationHiddenDescription, "The element is not displayed.");
            AddString(DashboardWinStringId.CommandMapDefaultShapefileCaption, "Default Map");
            AddString(DashboardWinStringId.CommandMapDefaultShapefileDescription, "Load a default map. ");
            AddString(DashboardWinStringId.CommandMapLoadCaption, "Load Map...");
            AddString(DashboardWinStringId.CommandMapLoadDescription, " Load a map from a file. The dashboard will store a path to the shape file.");
            AddString(DashboardWinStringId.CommandMapImportCaption, "Import Map...");
            AddString(DashboardWinStringId.CommandMapImportDescription, "Import a map from a file. The dashboard will store a copy of the map.");
            AddString(DashboardWinStringId.CommandMapWorldCountriesCaption, "World Countries");
            AddString(DashboardWinStringId.CommandMapWorldCountriesDescription, "Load a world map.");
            AddString(DashboardWinStringId.CommandMapEuropeCaption, "Europe");
            AddString(DashboardWinStringId.CommandMapEuropeDescription, "Load a map of Europe.");
            AddString(DashboardWinStringId.CommandMapAsiaCaption, "Asia");
            AddString(DashboardWinStringId.CommandMapAsiaDescription, "Load a map of Asia.");
            AddString(DashboardWinStringId.CommandMapNorthAmericaCaption, "North America");
            AddString(DashboardWinStringId.CommandMapNorthAmericaDescription, "Load a map of North America.");
            AddString(DashboardWinStringId.CommandMapSouthAmericaCaption, "South America");
            AddString(DashboardWinStringId.CommandMapSouthAmericaDescription, "Load a map of South America.");
            AddString(DashboardWinStringId.CommandMapAfricaCaption, "Africa");
            AddString(DashboardWinStringId.CommandMapAfricaDescription, " Load a map of Africa.");
            AddString(DashboardWinStringId.CommandMapUSACaption, "USA");
            AddString(DashboardWinStringId.CommandMapUSADescription, " Load a map of USA.");
            AddString(DashboardWinStringId.CommandMapCanadaCaption, "Canada");
            AddString(DashboardWinStringId.CommandMapCanadaDescription, "Load a map of Canada.");
            AddString(DashboardWinStringId.CommandMapShowLegendCaption, "Show Color Legend");
            AddString(DashboardWinStringId.CommandMapShowLegendDescription, "Show the color legend that helps end-users identify map elements.");
            AddString(DashboardWinStringId.CommandMapLegendPositionCaption, "Legend Position");
            AddString(DashboardWinStringId.CommandMapLegendPositionDescription, "Change the legend position within the Map.");
            AddString(DashboardWinStringId.CommandMapFullExtentCaption, "Full Extent");
            AddString(DashboardWinStringId.CommandMapFullExtentDescription, "Full Extent.");
            AddString(DashboardWinStringId.CommandMapInitialExtentCaption, "Initial Extent");
            AddString(DashboardWinStringId.CommandMapInitialExtentDescription, "Initial Extent.");
            AddString(DashboardWinStringId.CommandMapShapeTitleAttributeCaption, "Shape Title");
            AddString(DashboardWinStringId.CommandMapShapeTitleAttributeDescription, "Select the required map attribute to display its values within corresponding shape titles.");
            AddString(DashboardWinStringId.CommandChoroplethMapShapeLabelsAttributeCaption, "Shape Labels");
            AddString(DashboardWinStringId.CommandChoroplethMapShapeLabelsAttributeDescription, "Select the required map attributes to display their values within corresponding shape labels.");
            AddString(DashboardWinStringId.CommandWeightedLegendLinearTypeCaption, "Linear");
            AddString(DashboardWinStringId.CommandWeightedLegendLinearTypeDescription, "Show the linear weighted legend that helps end-users identify map elements.");
            AddString(DashboardWinStringId.CommandWeightedLegendNestedTypeCaption, "Nested");
            AddString(DashboardWinStringId.CommandWeightedLegendNestedTypeDescription, "Show the nested weighted legend that helps end-users identify map elements.");
            AddString(DashboardWinStringId.CommandWeightedLegendNoneTypeCaption, "None");
            AddString(DashboardWinStringId.CommandWeightedLegendNoneTypeDescription, "Disable the weighted legend.");
            AddString(DashboardWinStringId.CommandChangeWeightedLegendTypeCaption, "Show Weighted Legend");
            AddString(DashboardWinStringId.CommandChangeWeightedLegendTypeDescription, "Show the weighted legend that helps end-users identify map elements.");
            AddString(DashboardWinStringId.CommandGeoPointMapClusterizationCaption, "Enable Clustering");
            AddString(DashboardWinStringId.CommandGeoPointMapClusterizationDescription, "Enable clustering of map objects.");
            AddString(DashboardWinStringId.CommandPieMapIsWeightedCaption, "Weighted Pies");
            AddString(DashboardWinStringId.CommandPieMapIsWeightedDescription, "Enable weighted pies.");
            AddString(DashboardWinStringId.CommandMapLockNavigationCaption, "Lock Navigation");
            AddString(DashboardWinStringId.CommandMapLockNavigationDescription, "Lock map zooming and scrolling.");
            AddString(DashboardWinStringId.CommandTextBoxEditTextCaption, "Edit...");
            AddString(DashboardWinStringId.CommandTextBoxEditTextDescription, "Edit the content of the text box.");
            AddString(DashboardWinStringId.CommandTextBoxInsertFieldCaption, "Insert Field");
            AddString(DashboardWinStringId.CommandTextBoxInsertFieldDescription, "Insert a data field into the document.");
            AddString(DashboardWinStringId.CommandDimensionTopN, "Top N...");
            AddString(DashboardWinStringId.CommandNumericFormat, "Format...");
            AddString(DashboardWinStringId.CommandDataItemRename, "Rename...");
            AddString(DashboardWinStringId.CommandFormatRuleManager, "Edit Rules...");
            AddString(DashboardWinStringId.CommandFormatRuleClearDataItem, "Clear Rules");
            AddString(DashboardWinStringId.CommandFormatRuleTopNDescription, "Format {0} values that rank in the top");
            AddString(DashboardWinStringId.CommandFormatRuleBottomNDescription, "Format {0} values that rank in the bottom");
            AddString(DashboardWinStringId.CommandFormatRuleAboveAverageDescription, "Format {0} values that are above average");
            AddString(DashboardWinStringId.CommandFormatRuleAboveOrEqualAverageDescription, "Format {0} values that are above or equal to average");
            AddString(DashboardWinStringId.CommandFormatRuleBelowAverageDescription, "Format {0} values that are below average");
            AddString(DashboardWinStringId.CommandFormatRuleBelowOrEqualAverageDescription, "Format {0} values that are below or equal to average");
            AddString(DashboardWinStringId.CommandFormatRuleGreaterThanDescription, "Format {0} values that are greater than");
            AddString(DashboardWinStringId.CommandFormatRuleGreaterThanOrEqualToDescription, "Format {0} values that are greater than or equal to");
            AddString(DashboardWinStringId.CommandFormatRuleLessThanDescription, "Format {0} values that are less than");
            AddString(DashboardWinStringId.CommandFormatRuleLessThanOrEqualToDescription, "Format {0} values that are less than or equal to");
            AddString(DashboardWinStringId.CommandFormatRuleBetweenDescription, "Format {0} values that are between");
            AddString(DashboardWinStringId.CommandFormatRuleNotBetweenDescription, "Format {0} values that are not between");
            AddString(DashboardWinStringId.CommandFormatRuleBetweenOrEqualDescription, "Format {0} values that are between or equal to");
            AddString(DashboardWinStringId.CommandFormatRuleNotBetweenOrEqualDescription, "Format {0} values that are not between or equal to");
            AddString(DashboardWinStringId.CommandFormatRuleEqualToDescription, "Format {0} values that are equal to");
            AddString(DashboardWinStringId.CommandFormatRuleNotEqualToDescription, "Format {0} values that are not equal to");
            AddString(DashboardWinStringId.CommandFormatRuleExpressionDescription, "Format values that match the following condition");
            AddString(DashboardWinStringId.CommandFormatRuleContainsDescription, "Format {0} values that contain the text");
            AddString(DashboardWinStringId.CommandFormatRuleDateOccurringDescription, "Format {0} values that contain a date matching these conditions");
            AddString(DashboardWinStringId.CommandFormatRuleRangeSetDescription, "Format {0} values using range conditions");
            AddString(DashboardWinStringId.CommandFormatRuleColorRangeBarDescription, "Format {0} values using color range bar conditions");
            AddString(DashboardWinStringId.CommandFormatRuleRangeGradientDescription, "Format {0} values using range conditions");
            AddString(DashboardWinStringId.CommandFormatRuleGradientRangeBarDescription, "Format {0} values using range bar conditions");
            AddString(DashboardWinStringId.CommandFormatRuleBarDescription, "Format {0} values using bar conditions");
            AddString(DashboardWinStringId.CommandDimensionSortAscending, "Sort Ascending");
            AddString(DashboardWinStringId.CommandDimensionSortDescending, "Sort Descending");
            AddString(DashboardWinStringId.CommandDimensionSortNone, "No Sorting");
            AddString(DashboardWinStringId.CommandPivotInitialStateCaption, "Initial State");
            AddString(DashboardWinStringId.CommandPivotInitialStateDescription, "Specify how the pivot dashboard item appears in the Dashboard Viewer by default.");
            AddString(DashboardWinStringId.CommandPivotAutoExpandColumnCaption, "Expand Column Groups");
            AddString(DashboardWinStringId.CommandPivotAutoExpandColumnDescription, "Expand Column Groups");
            AddString(DashboardWinStringId.CommandPivotAutoExpandRowCaption, "Expand Row Groups");
            AddString(DashboardWinStringId.CommandPivotAutoExpandRowDescription, "Expand Row Groups");
            AddString(DashboardWinStringId.CommandPivotLayoutTypeCaption, "Layout");
            AddString(DashboardWinStringId.CommandPivotLayoutTypeDescription, "Select a pivot table's layout.");
            AddString(DashboardWinStringId.CommandPivotLayoutTypeCompactCaption, "Compact");
            AddString(DashboardWinStringId.CommandPivotLayoutTypeCompactDescription, "A Compact layout.");
            AddString(DashboardWinStringId.CommandPivotLayoutTypeTabularCaption, "Tabular");
            AddString(DashboardWinStringId.CommandPivotLayoutTypeTabularDescription, "A Tabular layout.");
            AddString(DashboardWinStringId.CommandPivotShowGrandTotalsCaption, "Grand Totals");
            AddString(DashboardWinStringId.CommandPivotShowGrandTotalsDescription, "Show Grand Totals in the pivot dashboard item.");
            AddString(DashboardWinStringId.CommandPivotShowColumnGrandTotalsCaption, "Show Column Grand Totals");
            AddString(DashboardWinStringId.CommandPivotShowColumnGrandTotalsDescription, "Show column Grand Totals in the pivot dashboard item.");
            AddString(DashboardWinStringId.CommandPivotShowRowGrandTotalsCaption, "Show Row Grand Totals");
            AddString(DashboardWinStringId.CommandPivotShowRowGrandTotalsDescription, "Show row Grand Totals in the pivot dashboard item.");
            AddString(DashboardWinStringId.CommandPivotShowTotalsCaption, "Totals");
            AddString(DashboardWinStringId.CommandPivotShowTotalsDescription, "Show Totals in the pivot dashboard item.");
            AddString(DashboardWinStringId.CommandPivotShowColumnTotalsCaption, "Show Column Totals");
            AddString(DashboardWinStringId.CommandPivotShowColumnTotalsDescription, "Show column Totals in the pivot dashboard item.");
            AddString(DashboardWinStringId.CommandPivotShowRowTotalsCaption, "Show Row Totals");
            AddString(DashboardWinStringId.CommandPivotShowRowTotalsDescription, "Show row Totals in the pivot dashboard item.");
            AddString(DashboardWinStringId.CommandPivotValuesPositionCaption, "Values Position");
            AddString(DashboardWinStringId.CommandPivotValuesPositionDescription, "Specify the position of data headers used to arrange summary values.");
            AddString(DashboardWinStringId.CommandPivotValuesPositionColumnsCaption, "Columns");
            AddString(DashboardWinStringId.CommandPivotValuesPositionColumnsDescription, "Data headers are displayed in columns.");
            AddString(DashboardWinStringId.CommandPivotValuesPositionRowsCaption, "Rows");
            AddString(DashboardWinStringId.CommandPivotValuesPositionRowsDescription, "Data headers are displayed in rows.");
            AddString(DashboardWinStringId.CommandPivotRowTotalsPositionCaption, "Row Totals Position");
            AddString(DashboardWinStringId.CommandPivotRowTotalsPositionDescription, "Specify the row totals' position.");
            AddString(DashboardWinStringId.CommandPivotRowTotalsPositionDisabledDescription, "A position of row totals cannot be changed when Pivot Layout is set to Compact.");
            AddString(DashboardWinStringId.CommandPivotRowTotalsPositionTopCaption, "Top");
            AddString(DashboardWinStringId.CommandPivotRowTotalsPositionTopDescription, "Row totals are displayed at the top of the group/pivot.");
            AddString(DashboardWinStringId.CommandPivotRowTotalsPositionBottomCaption, "Bottom");
            AddString(DashboardWinStringId.CommandPivotRowTotalsPositionBottomDescription, "Row totals are displayed at the bottom of the group/pivot.");
            AddString(DashboardWinStringId.CommandPivotColumnTotalsPositionCaption, "Column Totals Position");
            AddString(DashboardWinStringId.CommandPivotColumnTotalsPositionDescription, "Specify the column totals' position.");
            AddString(DashboardWinStringId.CommandPivotColumnTotalsPositionNearCaption, "Near");
            AddString(DashboardWinStringId.CommandPivotColumnTotalsPositionNearDescription, "Column totals are displayed near row field values.");
            AddString(DashboardWinStringId.CommandPivotColumnTotalsPositionFarCaption, "Far");
            AddString(DashboardWinStringId.CommandPivotColumnTotalsPositionFarDescription, "Column totals are displayed far from row field values.");
            AddString(DashboardWinStringId.CommandPivotResetLayoutOptionsCaption, "Reset Layout Options");
            AddString(DashboardWinStringId.CommandPivotResetLayoutOptionsDescription, "Reset options related to a pivot table layout to their default values.");
            AddString(DashboardWinStringId.CommandDataItemShowValues, "Show Values");
            AddString(DashboardWinStringId.CommandDataItemShowTotals, "Show Totals");
            AddString(DashboardWinStringId.CommandDataItemShowGrandTotal, "Show Grand Totals");
            AddString(DashboardWinStringId.CommandComboBoxStandardTypeCaption, "Standard");
            AddString(DashboardWinStringId.CommandComboBoxStandardTypeDescription, "Set the type of a combo box to 'Standard'.");
            AddString(DashboardWinStringId.CommandComboBoxCheckedTypeCaption, "Checked");
            AddString(DashboardWinStringId.CommandComboBoxCheckedTypeDescription, "Set the type of a combo box to 'Checked'.");
            AddString(DashboardWinStringId.CommandListBoxCheckedTypeCaption, "Checked");
            AddString(DashboardWinStringId.CommandListBoxCheckedTypeDescription, "Set the type of a list box to 'Checked'.");
            AddString(DashboardWinStringId.CommandListBoxRadioTypeCaption, "Radio");
            AddString(DashboardWinStringId.CommandListBoxRadioTypeDescription, "Set the type of a list box to 'Radio'.");
            AddString(DashboardWinStringId.CommandTreeViewAutoExpandCaption, "Auto Expand");
            AddString(DashboardWinStringId.CommandTreeViewAutoExpandDescription, "Specify the initial expanded state of the tree view.");
            AddString(DashboardWinStringId.CommandFilterElementShowAllValueCaption, "Show 'All' Value");
            AddString(DashboardWinStringId.CommandFilterElementShowAllValueDescription, "Adds the '(All)' option to the filter list.");
            AddString(DashboardWinStringId.CommandFilterElementAllowEmptyFilterCaption, "Allow Empty Filter");
            AddString(DashboardWinStringId.CommandFilterElementAllowEmptyFilterOptionDescription, "When enabled, allows end users to clear filter to display all data. The Clear Filter button resets the filter to an empty selection.");
            AddString(DashboardWinStringId.CommandFilterElementEnableSearchCaption, "Enable Search");
            AddString(DashboardWinStringId.CommandFilterElementEnableSearchDescription, "Enable the search capability in a filter element.");
            AddString(DashboardWinStringId.CommandUseGlobalColorsCaption, "Global Colors");
            AddString(DashboardWinStringId.CommandUseGlobalColorsDescription, "Use a global scheme to color elements of a dashboard item.");
            AddString(DashboardWinStringId.CommandUseLocalColorsCaption, "Local Colors");
            AddString(DashboardWinStringId.CommandUseLocalColorsDescription, "Use a local scheme to color elements of a dashboard item.");
            AddString(DashboardWinStringId.CommandEditLocalColorSchemeCaption, "Edit Colors");
            AddString(DashboardWinStringId.CommandEditLocalColorSchemeDescription, "Specify colors used to color elements of a dashboard item.");
            AddString(DashboardWinStringId.CommandEditDashboardColorSchemeCaption, "Edit Colors");
            AddString(DashboardWinStringId.CommandEditDashboardColorSchemeDescription, "Edit the dashboard color scheme by binding display values to specific colors.");
            AddString(DashboardWinStringId.CommandAddQueryCaption, "Add Query");
            AddString(DashboardWinStringId.CommandAddQueryDescription, "Add a new query to the selected data source.");
            AddString(DashboardWinStringId.CommandDeleteQueryCaption, "Delete");
            AddString(DashboardWinStringId.CommandDeleteQueryDescription, "Delete the selected query from the current data source.");
            AddString(DashboardWinStringId.CommandEditQueryFilterDescription, "Edit the current query filter.");
            AddString(DashboardWinStringId.CommandEditQueryFilterCaption, "Filter");
            AddString(DashboardWinStringId.CommandRenameQueryCaption, "Rename");
            AddString(DashboardWinStringId.CommandRenameQueryDescription, "Rename the selected query.");
            AddString(DashboardWinStringId.CommandEditQueryCaption, "Edit");
            AddString(DashboardWinStringId.CommandEditQueryDescription, "Edit the selected query.");
            AddString(DashboardWinStringId.CommandAddFederationQueryCaption, "Add Query");
            AddString(DashboardWinStringId.CommandAddFederationQueryDescription, "Add a new query to the selected data source.");
            AddString(DashboardWinStringId.CommandDeleteFederationQueryCaption, "Delete");
            AddString(DashboardWinStringId.CommandDeleteFederationQueryDescription, "Delete the selected query from the current data source.");
            AddString(DashboardWinStringId.CommandRenameFederationQueryCaption, "Rename");
            AddString(DashboardWinStringId.CommandRenameFederationQueryDescription, "Rename the selected query.");
            AddString(DashboardWinStringId.CommandEditFederationQueryCaption, "Edit");
            AddString(DashboardWinStringId.CommandEditFederationQueryDescription, "Edit the selected query.");
            AddString(DashboardWinStringId.CommandEditConnectionCaption, "Edit Connection");
            AddString(DashboardWinStringId.CommandEditConnectionDescription, "Customize parameters used to establish a connection to a data store.");
            AddString(DashboardWinStringId.CommandEditObjectDataSourceCaption, "Edit");
            AddString(DashboardWinStringId.CommandEditObjectDataSourceDescription, "Edit the current data source by selecting the required class definition and the data member.");
            AddString(DashboardWinStringId.CommandEditJsonDataSourceCaption, "Edit");
            AddString(DashboardWinStringId.CommandEditJsonDataSourceDescription, "Specify the JSON data location - a web service endpoint URI, file path or a string in JSON format.");
            AddString(DashboardWinStringId.CommandEditExcelDataSourceCaption, "Edit");
            AddString(DashboardWinStringId.CommandEditExcelDataSourceDescription, "Edit the current data source by specifying a data file and selecting the required data.");
            AddString(DashboardWinStringId.CommandEditEFDataSourceCaption, "Edit");
            AddString(DashboardWinStringId.CommandEditEFDataSourceDescription, "Edit the Entity Framework data source by selecting an existing data context or using an external assembly.");
            AddString(DashboardWinStringId.CommandDisplayItemAsPageCaption, "Display Item as Page");
            AddString(DashboardWinStringId.CommandDisplayItemAsPageDescription, "Display a dashboard item as a tab page, if there is only one item on a page.");
            AddString(DashboardWinStringId.CommandDashboardLayoutOptionsCaption, "Layout Options");
            AddString(DashboardWinStringId.CommandDashboardLayoutOptionsDescription, "Customize dashboard layout options");
            AddString(DashboardWinStringId.DesignerActionListCreateRibbonTransaction, "Create Ribbon");
            AddString(DashboardWinStringId.DesignerActionListUpdateRibbonTransaction, "Update Ribbon");
            AddString(DashboardWinStringId.DesignerActionListCreateBarsTransaction, "Create Bars");
            AddString(DashboardWinStringId.DesignerActionListUpdateBarsTransaction, "Update Bars");
            AddString(DashboardWinStringId.DesignerActionMethodCreateRibbonItem, "Create Ribbon");
            AddString(DashboardWinStringId.DesignerActionMethodUpdateRibbonItem, "Update Ribbon");
            AddString(DashboardWinStringId.DesignerActionMethodCreateBarsItem, "Create Bars");
            AddString(DashboardWinStringId.DesignerActionMethodUpdateBarsItem, "Update Bars");
            AddString(DashboardWinStringId.HistoryItemEnabling, "Enable");
            AddString(DashboardWinStringId.HistoryItemDisabling, "Disable");
            AddString(DashboardWinStringId.HistoryItemNewDataSource, "Create '{0}' data source");
            AddString(DashboardWinStringId.HistoryItemEditDataSource, "Modify the '{0}' data source");
            AddString(DashboardWinStringId.HistoryItemEditConnection, "Modify connection parameters for '{0}'");
            AddString(DashboardWinStringId.HistoryItemServerMode, "{0} server mode for '{1}'");
            AddString(DashboardWinStringId.HistoryItemDeleteDataSource, "Delete '{0}' data source");
            AddString(DashboardWinStringId.HistoryItemRenameDataSource, "Rename the '{0}' data source");
            AddString(DashboardWinStringId.HistoryItemInsertItem, "Insert '{0}'");
            AddString(DashboardWinStringId.HistoryItemInsertGroup, "Insert '{0}'");
            AddString(DashboardWinStringId.HistoryItemDuplicateItem, "Create a copy of '{0}'");
            AddString(DashboardWinStringId.HistoryItemConvertDashboardItemType, "Convert '{0}' to {1}");
            AddString(DashboardWinStringId.HistoryItemDeleteItem, "Delete '{0}'");
            AddString(DashboardWinStringId.HistoryItemSetCurrencyCulture, "Change the dashboard's currency culture");
            AddString(DashboardWinStringId.HistoryItemEditDashboardTitle, "Edit dashboard title");
            AddString(DashboardWinStringId.HistoryItemEditNames, "Edit names within '{0}'");
            AddString(DashboardWinStringId.HistoryItemLayoutChanged, "Layout changed");
            AddString(DashboardWinStringId.HistoryItemShowCaption, "Show/Hide caption for '{0}'");
            AddString(DashboardWinStringId.HistoryItemEditFilter, "Edit filter for '{0}'");
            AddString(DashboardWinStringId.HistoryItemEditVisibleDataFilter, "Edit Visible Data Filter for '{0}'");
            AddString(DashboardWinStringId.HistoryItemEditMeasureFilter, "Edit filter for '{0}'");
            AddString(DashboardWinStringId.HistoryItemSingleMasterFilter, "{0} Single Master Filter for '{1}'");
            AddString(DashboardWinStringId.HistoryItemMultipleMasterFilter, "{0} Multiple Master Filter for '{1}'");
            AddString(DashboardWinStringId.HistoryItemDrillDown, "{0} Drill-Down for '{1}'");
            AddString(DashboardWinStringId.HistoryItemTargetDimensions, "Modify interactivity options for '{0}'");
            AddString(DashboardWinStringId.HistoryItemCrossDataSourceFiltering, "{0} cross-data-source filtering for '{1}'");
            AddString(DashboardWinStringId.HistoryItemIgnoreMasterFilters, "{0} ignoring of Master Filters for '{1}'");
            AddString(DashboardWinStringId.HistoryItemGroupIgnoreMasterFilters, "{0} ignoring external Master Filters for '{1}'");
            AddString(DashboardWinStringId.HistoryItemGroupMasterFilter, "{0} Master Filter for '{1}'");
            AddString(DashboardWinStringId.HistoryItemContentArrangement, "Change arrangement settings for '{0}'");
            AddString(DashboardWinStringId.HistoryItemGridHorizontalLines, "{0} horizontal grid lines visibility for '{1}'");
            AddString(DashboardWinStringId.HistoryItemGridVerticalLines, "{0} vertical grid lines visibility for '{1}'");
            AddString(DashboardWinStringId.HistoryItemGridMergeCells, "{0} cell merging for '{1}'");
            AddString(DashboardWinStringId.HistoryItemGridBandedRows, "{0} banded rows for '{1}'");
            AddString(DashboardWinStringId.HistoryItemGridColumnHeaders, "{0} column headers visibility for '{1}'");
            AddString(DashboardWinStringId.HistoryItemGridColumnOptions, "Change column options for '{0}'");
            AddString(DashboardWinStringId.HistoryItemGridResizeColumns, "Change the '{0}' and '{1}' column widths for '{2}'");
            AddString(DashboardWinStringId.HistoryItemGridAutoFitToContentsColumnWidthMode, "Enable the 'AutoFit to Contents' column width mode for '{0}'");
            AddString(DashboardWinStringId.HistoryItemGridAutoFitToGridColumnWidthMode, "Enable the 'AutoFit to Grid' column width mode for '{0}'");
            AddString(DashboardWinStringId.HistoryItemGridManualColumnWidthMode, "Enable the 'Manual' column width mode for '{0}'");
            AddString(DashboardWinStringId.HistoryItemGridWordWrap, "{0} word wrapping for '{1}'");
            AddString(DashboardWinStringId.HistoryItemEnableGridColumnFitToContent, "Adjust the '{0}' column width to fit its content for '{1}'");
            AddString(DashboardWinStringId.HistoryItemDisableGridColumnFitToContent, "Disable fit to content of the '{0}' column for '{1}'");
            AddString(DashboardWinStringId.HistoryItemEnableGridColumnFixedWidth, "Fix the width of the '{0}' column for '{1}'");
            AddString(DashboardWinStringId.HistoryItemDisableGridColumnFixedWidth, "Disable fixed width of the '{0}' column for '{1}'");
            AddString(DashboardWinStringId.HistoryItemChartSeriesType, "Change series options for '{0}'");
            AddString(DashboardWinStringId.HistoryItemChartRotate, "{0} diagram rotation in '{1}'");
            AddString(DashboardWinStringId.HistoryItemChartShowLegend, "{0} legend visibility for '{1}'");
            AddString(DashboardWinStringId.HistoryItemChartYAxisSettings, "Change Y axis settings for '{0}'");
            AddString(DashboardWinStringId.HistoryItemChartXAxisSettings, "Change X-axis settings for '{0}'");
            AddString(DashboardWinStringId.HistoryItemScatterChartPointLabelOptions, "Change point label settings for '{0}'");
            AddString(DashboardWinStringId.HistoryItemChartLegendPosition, "Change legend position for '{0}'");
            AddString(DashboardWinStringId.HistoryItemChartAddPane, "Add new pane to '{0}'");
            AddString(DashboardWinStringId.HistoryItemChartRemovePane, "Remove '{0}' pane from '{1}'");
            AddString(DashboardWinStringId.HistoryItemPieStyle, "Change pie style for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPieLabelContentType, "Change data labels content for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPieTooltipContentType, "Change tooltips content for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPieLegendPosition, "Change legend position in '{0}'");
            AddString(DashboardWinStringId.HistoryItemPieShowCaptions, "{0} pie captions visibility for '{1}'");
            AddString(DashboardWinStringId.HistoryItemPieLabelPosition, "Change data labels position in '{0}'");
            AddString(DashboardWinStringId.HistoryItemGaugeViewType, "Change gauge view type for '{0}'");
            AddString(DashboardWinStringId.HistoryItemGaugeRange, "Change settings for '{0}'");
            AddString(DashboardWinStringId.HistoryItemGaugeShowCaptions, "{0} gauge captions visibility for '{1}'");
            AddString(DashboardWinStringId.HistoryItemImageOpen, "Load image to '{0}'");
            AddString(DashboardWinStringId.HistoryItemImageSizeMode, "Change size mode for '{0}'");
            AddString(DashboardWinStringId.HistoryItemImageAlignment, "Change alignment for '{0}'");
            AddString(DashboardWinStringId.HistoryItemTextBoxEditText, "Edit text in '{0}'");
            AddString(DashboardWinStringId.HistoryItemRangeFilterSeriesType, "Change series type for all series in '{0}'");
            AddString(DashboardWinStringId.HistoryItemGeoPointMapClusterization, "{0} clustering for '{1}'");
            AddString(DashboardWinStringId.HistoryItemPieMapIsWeighted, "'{0}' weighted pies for '{1}'");
            AddString(DashboardWinStringId.HistoryItemMapLockNavigation, "Lock map navigation for '{0}'");
            AddString(DashboardWinStringId.HistoryItemMapUnLockNavigation, "Unlock map navigation for '{0}'");
            AddString(DashboardWinStringId.HistoryItemBubbleMapOptions, "Change bubble map options for '{0}'");
            AddString(DashboardWinStringId.HistoryItemMapOpen, "Load map to '{0}'");
            AddString(DashboardWinStringId.HistoryItemMapAttribute, "Change attribute binding in '{0}'");
            AddString(DashboardWinStringId.HistoryItemMapShapeTitleAttribute, "Change attributes providing shape labels for '{0}'");
            AddString(DashboardWinStringId.HistoryItemMapDelta, "Change delta options in '{0}'");
            AddString(DashboardWinStringId.HistoryItemChangeWeightedLegendType, "Change weighted legend type for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDisableWeightedLegend, "Disable weighted Legend for '{0}'");
            AddString(DashboardWinStringId.HistoryItemMapShowLegend, "{0} color legend for '{1}'");
            AddString(DashboardWinStringId.HistoryItemRestoreMapViewport, "Restore map extent in '{0}'");
            AddString(DashboardWinStringId.HistoryItemChangeMapViewport, "Change map extent in '{0}'");
            AddString(DashboardWinStringId.HistoryItemModifyBindings, "Modify bindings for '{0}'");
            AddString(DashboardWinStringId.HistoryItemMeasureSummaryType, "Set summary type for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDimensionSortOrder, "Set sort order for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDimensionSorting, "Set sort mode for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDimensionSpecifyTopN, "Set Top N for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDataItemNumericFormat, "Set numeric format for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDataItemDateTimeFormat, "Set date-time format for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDataItemRename, "Rename data item for {0}");
            AddString(DashboardWinStringId.HistoryItemDimensionGroupInterval, "Set group interval for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotAutoExpandColumnEnable, "Enable automatic expansion of column groups for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotAutoExpandColumnDisable, "Disable automatic expansion of column groups for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotAutoExpandRowEnable, "Enable automatic expansion of row groups for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotAutoExpandRowDisable, "Disable automatic expansion of row groups for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotLayoutTypeCompact, "Change a pivot table's layout to compact for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotLayoutTypeTabular, "Change a pivot table's layout to tabular for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotShowColumnGrandTotalsEnable, "Enable the visibility of column Grand Totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotShowColumnGrandTotalsDisable, "Disable the visibility of column Grand Totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotShowRowGrandTotalsEnable, "Enable the visibility of row Grand Totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotShowRowGrandTotalsDisable, "Disable the visibility of row Grand Totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotShowColumnTotalsEnable, "Enable the visibility of column Totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotShowColumnTotalsDisable, "Disable the visibility of column Totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotShowRowTotalsEnable, "Enable the visibility of row Totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotShowRowTotalsDisable, "Disable the visibility of row Totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotValuesPositionColumns, "Change the position of data headers to columns for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotValuesPositionRows, "Change the position of data headers to rows for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotRowTotalsPositionTop, "Change the row totals' position to top for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotRowTotalsPositionBottom, "Change the row totals' position to bottom for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotColumnTotalsPositionNear, "Change the column totals' position to near for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotColumnTotalsPositionFar, "Change the column totals' position to far for '{0}'");
            AddString(DashboardWinStringId.HistoryItemPivotResetLayoutOptions, "Reset options related to a pivot table layout for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDataItemShowValuesDisable, "Hide values for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDataItemShowValuesEnable, "Show values for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDataItemShowTotalsDisable, "Hide totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDataItemShowTotalsEnable, "Show totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDataItemShowGrandTotalsDisable, "Hide grand totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDataItemShowGrandTotalsEnable, "Show grand totals for '{0}'");
            AddString(DashboardWinStringId.HistoryItemTreemapLayoutAlgorithm, "Change a treemap's layout algorithm for '{0}'");
            AddString(DashboardWinStringId.HistoryItemTreemapLayoutDirection, "Change a treemap's layout direction for '{0}'");
            AddString(DashboardWinStringId.HistoryItemTreemapTileLabelContentType, "Change content of tile labels for '{0}'");
            AddString(DashboardWinStringId.HistoryItemTreemapTileTooltipContentType, "Change content of tile tooltips for '{0}'");
            AddString(DashboardWinStringId.HistoryItemTreemapGroupLabelContentType, "Change content of group labels for '{0}'");
            AddString(DashboardWinStringId.HistoryItemTreemapGroupTooltipContentType, "Change content of group tooltips for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDateFilterChangeFilterType, "Change the filter type of a date filter in '{0}'");
            AddString(DashboardWinStringId.HistoryItemDateFilterChangeArrangementMode, "Change the layout direction in {0}");
            AddString(DashboardWinStringId.HistoryItemDateFilterChangeDatePickerLocation, "Change the date picker location in {0}");
            AddString(DashboardWinStringId.HistoryItemComboBoxChangeType, "Change the type of a combo box in '{0}'");
            AddString(DashboardWinStringId.HistoryItemListBoxChangeType, "Change the type of a list box in '{0}'");
            AddString(DashboardWinStringId.HistoryItemTreeViewAutoExpandChanged, "{0} automatic expansion of nodes for '{1}'");
            AddString(DashboardWinStringId.HistoryItemFilterElementShowAllValueChanged, "Change the 'All' value visibility for '{0}'");
            AddString(DashboardWinStringId.HistoryItemFilterElementEnableSearchChanged, "Change search settings for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDimensionColoringMode, "Change coloring mode for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDimensionGroupChildValues, "Change tile group settings for '{0}'");
            AddString(DashboardWinStringId.HistoryItemMeasureColoringMode, "Change measure coloring mode for '{0}'");
            AddString(DashboardWinStringId.HistoryItemUseGlobalColorsEnable, "Use a global scheme to color elements of the '{0}'");
            AddString(DashboardWinStringId.HistoryItemUseGlobalColorsDisable, "Use a local scheme to color elements of the '{0}'");
            AddString(DashboardWinStringId.HistoryItemEditDashboardColorScheme, "Modify a dashboard color scheme");
            AddString(DashboardWinStringId.HistoryItemEditLocalColorScheme, "Modify a local color scheme for '{0}'");
            AddString(DashboardWinStringId.HistoryItemFormatRuleCreate, "Create new '{0}' format rule for the '{1}'");
            AddString(DashboardWinStringId.HistoryItemFormatRuleEdit, "Edit '{0}' format rule of the '{1}'");
            AddString(DashboardWinStringId.HistoryItemFormatRuleClear, "Clear format rules calculated by '{0}' for the '{1}'");
            AddString(DashboardWinStringId.HistoryItemFormatRulesMove, "Change format rules order for the '{0}'");
            AddString(DashboardWinStringId.HistoryItemFormatRulesDelete, "Delete format rule from the '{0}'");
            AddString(DashboardWinStringId.HistoryItemFormatRulePropertyEnabled, "Enable/disable format rule for the '{0}'");
            AddString(DashboardWinStringId.HistoryItemDateTimePeriodDelete, "Delete date-time period from the '{0}'");
            AddString(DashboardWinStringId.HistoryItemDateTimePeriodAdd, "Add date-time period to the '{0}'");
            AddString(DashboardWinStringId.HistoryItemDateTimePeriodsAdd, "Add date-time periods to the '{0}'");
            AddString(DashboardWinStringId.HistoryItemDateTimePeriodMove, "Change date-time period order for the '{0}'");
            AddString(DashboardWinStringId.HistoryItemDateTimePeriodEdit, "Edit '{0}' date-time period of the '{1}'");
            AddString(DashboardWinStringId.HistoryItemSetDefaultDateTimePeriod, "Change a default date-time period for the '{0}'");
            AddString(DashboardWinStringId.HistoryItemDateTimePeriodRename, "Change the display name of the '{0}' date-time period for '{1}'");
            AddString(DashboardWinStringId.HistoryItemAddQuery, "Add a new query to the '{0}' data source");
            AddString(DashboardWinStringId.HistoryItemEditQuery, "Edit the '{0}' query");
            AddString(DashboardWinStringId.HistoryItemEditQueryFilter, "Edit the current filter for the '{0}' query");
            AddString(DashboardWinStringId.HistoryItemRenameQuery, "Rename the '{0}' query");
            AddString(DashboardWinStringId.HistoryItemDeleteQuery, "Delete the '{0}' query from the '{1}' data source");
            AddString(DashboardWinStringId.HistoryItemAddFederationQuery, "Add a new query to the '{0}' data source");
            AddString(DashboardWinStringId.HistoryItemEditFederationQuery, "Edit the '{0}' query");
            AddString(DashboardWinStringId.HistoryItemRenameFederationQuery, "Rename the '{0}' query");
            AddString(DashboardWinStringId.HistoryItemDeleteFederationQuery, "Delete the '{0}' query from the '{1}' data source");
            AddString(DashboardWinStringId.HistoryItemManageMongoDBQueries, "\"Manage Queries\" for the '{0}' data source");
            AddString(DashboardWinStringId.HistoryItemRenameMongoDBQuery, "Rename the '{0}' query");
            AddString(DashboardWinStringId.HistoryItemDeleteMongoDBQuery, "Delete the '{0}' query from the '{1}' data source");
            AddString(DashboardWinStringId.HistoryItemAddGridColumnTotal, "Add the '{0}' summary for the '{1}' of '{2}'");
            AddString(DashboardWinStringId.HistoryItemClearGridColumnTotals, "Remove all totals for the '{0}'");
            AddString(DashboardWinStringId.HistoryItemRemoveGridColumnTotal, "Remove the '{0}' total for the '{1}' column of '{2}'");
            AddString(DashboardWinStringId.HistoryItemChangeGridColumnTotal, "Change the summary type for '{0}' to '{1}'");
            AddString(DashboardWinStringId.HistoryItemBoundImageBindingOptions, "Change data binding options for {0}");
            AddString(DashboardWinStringId.HistoryItemMeasureCalculation, "Change calculation settings for '{0}'");
            AddString(DashboardWinStringId.HistoryItemDisplayItemAsPage, "{0} display item as page on '{1}'");
            AddString(DashboardWinStringId.FormatRuleDataItemsAll, "[All]");
            AddString(DashboardWinStringId.UndoRedoSingleAction, "{0} {1} Action");
            AddString(DashboardWinStringId.UndoRedoActionsCount, "{0} {1} Actions");
            AddString(DashboardWinStringId.ImageWrongFormatMessage, "The selected image file is corrupted.");
            AddString(DashboardWinStringId.ImageFileCorruptedMessage, "An image file is corrupted.\r\nURL: {0}");
            AddString(DashboardWinStringId.ImageNotFoundMessage, "Cannot find an image file. This file may have been renamed, moved, or deleted.\r\nURL: {0}");
            AddString(DashboardWinStringId.ImageGeneralExceptionMessage, "Cannot open an image file at the following path:\r\n{0}");
            AddString(DashboardWinStringId.ImageCorruptedMessage, "The image file is corrupted.");
            AddString(DashboardWinStringId.DataSourceNameExistsMessage, "A data source with the specified name already exists.");
            AddString(DashboardWinStringId.DataSourceEmptyNameMessage, "The data source name cannot be empty.");
            AddString(DashboardWinStringId.RecentDashboardsCaption, "Recent");
            AddString(DashboardWinStringId.RecentItemsMenuEmptyText, "To browse for a dashboard, click the Open button.");
            AddString(DashboardWinStringId.RecentBarButtonItemOpenCommand, "&Open");
            AddString(DashboardWinStringId.RecentBarButtonItemPinCommand, "Pin");
            AddString(DashboardWinStringId.RecentBarButtonItemUnpinCommand, "Unpin");
            AddString(DashboardWinStringId.RecentBarButtonItemRemoveCommand, "&Remove from list");
            AddString(DashboardWinStringId.RecentBarButtonItemClearFilesCommand, "&Clear unpinned dashboards");
            AddString(DashboardWinStringId.RecentBarButtonItemClearFoldersCommand, "&Clear unpinned folders");
            AddString(DashboardWinStringId.CurrencyInvariantRegion, "Undefined");
            AddString(DashboardWinStringId.DataItemCurrencyUseDashboardCurrency, "Use dashboard settings");
            AddString(DashboardWinStringId.YesterdayCheckEditCaption, "Yesterday");
            AddString(DashboardWinStringId.TodayCheckEditCaption, "Today");
            AddString(DashboardWinStringId.TomorrowCheckEditCaption, "Tomorrow");
            AddString(DashboardWinStringId.NextNPeriodsCheckEditCaption, "Next");
            AddString(DashboardWinStringId.LastNPeriodsCheckEditCaption, "Last");
            AddString(DashboardWinStringId.PreviousYearCheckEditCaption, "Previous Year");
            AddString(DashboardWinStringId.ThisYearCheckEditCaption, "This Year");
            AddString(DashboardWinStringId.NextYearCheckEditCaption, "Next Year");
            AddString(DashboardWinStringId.YearToDateTimePeriodCheckEditCaption, "Year-to-date");
            AddString(DashboardWinStringId.YearsLabelCaption, "years");
            AddString(DashboardWinStringId.PreviousQuarterCheckEditCaption, "Previous Quarter");
            AddString(DashboardWinStringId.ThisQuarterCheckEditCaption, "This Quarter");
            AddString(DashboardWinStringId.NextQuarterCheckEditCaption, "Next Quarter");
            AddString(DashboardWinStringId.QuarterToDateTimePeriodCheckEditCaption, "Quarter-to-date");
            AddString(DashboardWinStringId.QuartersLabelCaption, "quarters");
            AddString(DashboardWinStringId.PreviousMonthCheckEditCaption, "Previous Month");
            AddString(DashboardWinStringId.PreviousWeekCheckEditCaption, "Previous Week");
            AddString(DashboardWinStringId.ThisMonthCheckEditCaption, "This Month");
            AddString(DashboardWinStringId.ThisWeekCheckEditCaption, "This Week");
            AddString(DashboardWinStringId.NextMonthCheckEditCaption, "Next Month");
            AddString(DashboardWinStringId.NextWeekCheckEditCaption, "Next Week");
            AddString(DashboardWinStringId.MonthToDateTimePeriodCheckEditCaption, "Month-to-date");
            AddString(DashboardWinStringId.MonthsLabelCaption, "months");
            AddString(DashboardWinStringId.WeekLabelCaption, "weeks");
            AddString(DashboardWinStringId.DaysLabelCaption, "days");
            AddString(DashboardWinStringId.PreviousHourCheckEditCaption, "Previous Hour");
            AddString(DashboardWinStringId.ThisHourCheckEditCaption, "This Hour");
            AddString(DashboardWinStringId.NextHourCheckEditCaption, "Next Hour");
            AddString(DashboardWinStringId.HoursLabelCaption, "hours");
            AddString(DashboardWinStringId.PreviousMinuteCheckEditCaption, "Previous Minute");
            AddString(DashboardWinStringId.ThisMinuteCheckEditCaption, "This Minute");
            AddString(DashboardWinStringId.NextMinuteCheckEditCaption, "Next Minute");
            AddString(DashboardWinStringId.MinutesLabelCaption, "minutes");
            AddString(DashboardWinStringId.PreviousSecondCheckEditCaption, "Previous Second");
            AddString(DashboardWinStringId.ThisSecondCheckEditCaption, "This Second");
            AddString(DashboardWinStringId.NextSecondCheckEditCaption, "Next Second");
            AddString(DashboardWinStringId.SecondsLabelCaption, "seconds");
            AddString(DashboardWinStringId.IncludeCurrentYearCheckEditCaption, "Include current");
            AddString(DashboardWinStringId.IncludeCurrentQuarterCheckEditCaption, "Include current");
            AddString(DashboardWinStringId.IncludeCurrentMonthCheckEditCaption, "Include current");
            AddString(DashboardWinStringId.IncludeCurrentWeekCheckEditCaption, "Include current");
            AddString(DashboardWinStringId.IncludeCurrentDayCheckEditCaption, "Include current");
            AddString(DashboardWinStringId.IncludeCurrentHourCheckEditCaption, "Include current");
            AddString(DashboardWinStringId.IncludeCurrentMinuteCheckEditCaption, "Include current");
            AddString(DashboardWinStringId.IncludeCurrentSecondCheckEditCaption, "Include current");
            AddString(DashboardWinStringId.ChartCannotRenderData, "Specified data cannot be rendered in a chart");
            AddString(DashboardWinStringId.ConnectionErrorFormDetailPattern, "Connection name: {0}\r\nError message: {1}");
            AddString(DashboardWinStringId.CommandPrintPreview, "Print Preview...");
            AddString(DashboardWinStringId.CommandExportTo, "Export To");
            AddString(DashboardWinStringId.CommandExportToPdf, "Export To PDF");
            AddString(DashboardWinStringId.CommandExportToImage, "Export To Image");
            AddString(DashboardWinStringId.CommandExportToExcel, "Export To Excel");
            AddString(DashboardWinStringId.CommandDrillUp, "Drill Up");
            AddString(DashboardWinStringId.CommandClearMasterFilter, "Clear Master Filter");
            AddString(DashboardWinStringId.CommandClearSelection, "Clear Selection");
            AddString(DashboardWinStringId.CommandMultiSelect, "Multi-Select");
            AddString(DashboardWinStringId.CommandSelectOtherValues, "Values");
            AddString(DashboardWinStringId.CommandSelectDateTimePeriod, "Select Date Time Period");
            AddString(DashboardWinStringId.ChartInsideHorizontalGalleryGroupCaption, "Inside Horizontal");
            AddString(DashboardWinStringId.ChartInsideVerticalGalleryGroupCaption, "Inside Vertical");
            AddString(DashboardWinStringId.ChartOutsideHorizontalGalleryGroupCaption, "Outside Horizontal");
            AddString(DashboardWinStringId.ChartOutsideVerticalGalleryGroupCaption, "Outside Vertical");
            AddString(DashboardWinStringId.ChartTopLeftHorizontalInsideLegendPosition, "Align the legend to the top left corner of the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartTopCenterHorizontalInsideLegendPosition, "Center the legend horizontally and align it to the top of the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartTopRightHorizontalInsideLegendPosition, "Align the legend to the top right corner of the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartBottomLeftHorizontalInsideLegendPosition, "Align the legend to the bottom left corner of the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartBottomCenterHorizontalInsideLegendPosition, "Center the legend horizontally and align it to the bottom of the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartBottomRightHorizontalInsideLegendPosition, "Align the legend to the bottom right corner of the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartTopLeftVerticalInsideLegendPosition, "Align the legend to the top left corner of the diagram. Orient the legend vertically.");
            AddString(DashboardWinStringId.ChartTopCenterVerticalInsideLegendPosition, "Center the legend horizontally and align it to the top of the diagram. Orient the legend vertically.");
            AddString(DashboardWinStringId.ChartTopRightVerticalInsideLegendPosition, "Align the legend to the top right corner of the diagram. Orient the legend vertically.");
            AddString(DashboardWinStringId.ChartBottomLeftVerticalInsideLegendPosition, "Align the legend to the bottom left corner of the diagram. Orient the legend vertically.");
            AddString(DashboardWinStringId.ChartBottomCenterVerticalInsideLegendPosition, "Center the legend horizontally and align it to the bottom of the diagram. Orient the legend vertically.");
            AddString(DashboardWinStringId.ChartBottomRightVerticalInsideLegendPosition, "Align the legend to the bottom right corner of the diagram. Orient the legend vertically.");
            AddString(DashboardWinStringId.ChartTopLeftHorizontalOutsideLegendPosition, "Align the legend to the top left corner of the chart outside the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartTopCenterHorizontalOutsideLegendPosition, "Center the legend horizontally and align it to the top of the chart outside the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartTopRightHorizontalOutsideLegendPosition, "Align the legend to the top right corner of the chart outside the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartBottomLeftHorizontalOutsideLegendPosition, "Align the legend to the bottom left corner of the chart outside the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartBottomCenterHorizontalOutsideLegendPosition, "Center the legend horizontally and align it to the bottom of the chart outside the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartBottomRightHorizontalOutsideLegendPosition, "Align the legend to the bottom right corner of the chart outside the diagram. Orient the legend horizontally.");
            AddString(DashboardWinStringId.ChartTopLeftVerticalOutsideLegendPosition, "Align the legend to the top left corner of the chart outside the diagram. Orient the legend vertically.");
            AddString(DashboardWinStringId.ChartTopRightVerticalOutsideLegendPosition, "Align the legend to the top right corner of the chart outside the diagram. Orient the legend vertically.");
            AddString(DashboardWinStringId.ChartBottomLeftVerticalOutsideLegendPosition, "Align the legend to the bottom left corner of the chart outside the diagram. Orient the legend vertically.");
            AddString(DashboardWinStringId.ChartBottomRightVerticalOutsideLegendPosition, "Align the legend to the bottom right corner of the chart outside the diagram. Orient the legend vertically.");
            AddString(DashboardWinStringId.ChartPrimaryAxisTypeName, "Primary axis");
            AddString(DashboardWinStringId.ChartSecondaryAxisTypeName, "Secondary axis");
            AddString(DashboardWinStringId.DataFieldBrowserRemoveCalculatedFieldMenuItem, "Delete");
            AddString(DashboardWinStringId.DataFieldBrowserRenameCalculatedFieldMenuItem, "Rename");
            AddString(DashboardWinStringId.DataFieldBrowserCalculatedFieldTypeMenuItem, "Field Type");
            AddString(DashboardWinStringId.DataFieldBrowserCalculatedFieldExpressionEditorMenuItem, "Edit Expression...");
            AddString(DashboardWinStringId.CheckedDataFieldsBrowserSelectAll, "(Select All)");
            AddString(DashboardWinStringId.HistoryItemAddCalculatedField, "Add calculated field '{0}'");
            AddString(DashboardWinStringId.HistoryItemRemoveCalculatedField, "Remove calculated field '{0}'");
            AddString(DashboardWinStringId.HistoryItemCalculatedFieldName, "Rename '{0}' to '{1}'");
            AddString(DashboardWinStringId.HistoryItemCalculatedFieldExpression, "Change expression for '{0}'");
            AddString(DashboardWinStringId.HistoryItemCalculatedFieldType, "Change field type for '{0}'");
            AddString(DashboardWinStringId.CommandAddCalculatedFieldCaption, "Add Calculated Field");
            AddString(DashboardWinStringId.CommandAddCalculatedFieldDescription, "Add a new calculated field into the current data source.");
            AddString(DashboardWinStringId.CommandEditDataSourceFilterCaption, "Filter");
            AddString(DashboardWinStringId.CommandEditDataSourceFilterDescription, "Edit the current data source filter.");
            AddString(DashboardWinStringId.CommandClearDataSourceFilterCaption, "Clear");
            AddString(DashboardWinStringId.CommandClearDataSourceFilterDescription, "Clear the current data source filter.");
            AddString(DashboardWinStringId.CommandDashboardParametersCaption, "Parameters");
            AddString(DashboardWinStringId.CommandDashboardParametersDescription, "Edit the current dashboard parameters.");
            AddString(DashboardWinStringId.CommandEditDashboardParametersCaption, "Parameters");
            AddString(DashboardWinStringId.CommandEditDashboardParametersDescription, "Edit the current dashboard parameters.");
            AddString(DashboardWinStringId.HistoryItemEditDashboardParameters, "Edit dashboard parameters");
            AddString(DashboardWinStringId.HistoryItemFilterDataSource, "Filter data source '{0}'");
            AddString(DashboardWinStringId.HistoryItemEditExtractParameters, "Edit extract parameters");
            AddString(DashboardWinStringId.ExtractPathRequest, "Error loading data extract file");
            AddString(DashboardWinStringId.HistoryItemExtractSourceOptionsDataSourceFilter, "Filter data extract source");
            AddString(DashboardWinStringId.BarDataSourceName, "Data Source");
            AddString(DashboardWinStringId.RibbonGroupDataSource, "Data Source");
            AddString(DashboardWinStringId.RibbonGroupFiltering, "Filtering");
            AddString(DashboardWinStringId.BarViewName, "View");
            AddString(DashboardWinStringId.RibbonGroupView, "View");
            AddString(DashboardWinStringId.RibbonGroupDesign, "Design");
            AddString(DashboardWinStringId.RibbonGroupHome, "Home");
            AddString(DashboardWinStringId.RibbonGroupSqlDataSourceQuery, "Query");
            AddString(DashboardWinStringId.RibbonGroupFederationDataSourceQuery, "Query");
            AddString(DashboardWinStringId.RibbonGroupMongoDBDataSourceQuery, "Query");
            AddString(DashboardWinStringId.BarHomeName, "Home");
            AddString(DashboardWinStringId.CommandEditNamesRibbonCaption, "Edit Names");
            AddString(DashboardWinStringId.CommandEditFilterRibbonCaption, "Edit Filter");
            AddString(DashboardWinStringId.CommandImageLoadRibbonCaption, "Load Image");
            AddString(DashboardWinStringId.CommandImageImportRibbonCaption, "Import Image");
            AddString(DashboardWinStringId.CommandMapLoadRibbonCaption, "Load Map");
            AddString(DashboardWinStringId.CommandMapImportRibbonCaption, "Import Map");
            AddString(DashboardWinStringId.CommandTextBoxEditTextRibbonCaption, "Edit");
            AddString(DashboardWinStringId.RibbonGroupLayoutOptionsCaption, "Layout options");
            AddString(DashboardWinStringId.RibbonGroupCommonCaption, "Common");
            AddString(DashboardWinStringId.RibbonGroupColoringCaption, "Coloring");
            AddString(DashboardWinStringId.CommandExportDashboardCaption, "Export Dashboard");
            AddString(DashboardWinStringId.CommandSelectDashboardCaption, "Select Dashboard");
            AddString(DashboardWinStringId.CommandSelectDashboardDescription, "Select the current dashboard.");
            AddString(DashboardWinStringId.CommandSelectDashboardItemGroupCaption, "Select Group");
            AddString(DashboardWinStringId.CommandSelectDashboardItemGroupDescription, "Select the parent group.");
            AddString(DashboardWinStringId.CommandSelectDashboardTabPageCaption, "Select Tab Page");
            AddString(DashboardWinStringId.CommandSelectDashboardTabPageDescription, "Select the tab page.");
            AddString(DashboardWinStringId.CommandSelectTabContainerCaption, "Select Tab Container");
            AddString(DashboardWinStringId.CommandSelectTabContainerDescription, "Select the tab container.");
            AddString(DashboardWinStringId.WeightedLegendGalleryGroupCaption, "Position");
            AddString(DashboardWinStringId.MapGalleryVerticalGroupCaption, "Vertical");
            AddString(DashboardWinStringId.MapGalleryHorizontalGroupCaption, "Horizontal");
            AddString(DashboardWinStringId.MapTopLeftWeightedLegendPosition, "Align the legend to the top left corner of the map.");
            AddString(DashboardWinStringId.MapTopCenterWeightedLegendPosition, "Center the legend horizontally and align it to the top of the map.");
            AddString(DashboardWinStringId.MapTopRightWeightedLegendPosition, "Align the legend to the top right corner of the map.");
            AddString(DashboardWinStringId.MapBottomLeftWeightedLegendPosition, "Align the legend to the bottom left corner of the map.");
            AddString(DashboardWinStringId.MapBottomCenterWeightedLegendPosition, "Center the legend horizontally and align it to the bottom of the map.");
            AddString(DashboardWinStringId.MapBottomRightWeightedLegendPosition, "Align the legend to the bottom right corner of the map.");
            AddString(DashboardWinStringId.MapTopLeftVerticalLegendPosition, "Align the legend to the top left corner of the map. Orient the legend vertically.");
            AddString(DashboardWinStringId.MapTopCenterVerticalLegendPosition, "Center the legend horizontally and align it to the top of the map. Orient the legend vertically.");
            AddString(DashboardWinStringId.MapTopRightVerticalLegendPosition, "Align the legend to the top right corner of the map. Orient the legend vertically.");
            AddString(DashboardWinStringId.MapBottomLeftVerticalLegendPosition, "Align the legend to the bottom left corner of the map. Orient the legend vertically.");
            AddString(DashboardWinStringId.MapBottomCenterVerticalLegendPosition, "Center the legend horizontally and align it to the bottom of the map. Orient the legend vertically.");
            AddString(DashboardWinStringId.MapBottomRightVerticalLegendPosition, "Align the legend to the bottom right corner of the map. Orient the legend vertically.");
            AddString(DashboardWinStringId.MapTopLeftHorizontalLegendPosition, "Align the legend to the top left corner of the map. Orient the legend horizontally.");
            AddString(DashboardWinStringId.MapTopCenterHorizontalLegendPosition, "Center the legend horizontally and align it to the top of the map. Orient the legend horizontally.");
            AddString(DashboardWinStringId.MapTopRightHorizontalLegendPosition, "Align the legend to the top right corner of the map. Orient the legend horizontally.");
            AddString(DashboardWinStringId.MapBottomLeftHorizontalLegendPosition, "Align the legend to the bottom left corner of the map. Orient the legend horizontally.");
            AddString(DashboardWinStringId.MapBottomCenterHorizontalLegendPosition, "Center the legend horizontally and align it to the bottom of the map. Orient the legend horizontally.");
            AddString(DashboardWinStringId.MapBottomRightHorizontalLegendPosition, "Align the legend to the bottom right corner of the map. Orient the legend horizontally.");
            AddString(DashboardWinStringId.MapLayerOptionsResetCustomScale, "This action will reset the colorizer scale, and all your changes will be discarded. Do you wish to continue?");
            AddString(DashboardWinStringId.HistoryItemMapLayerOptions, "Change map layer options for '{0}'");
            AddString(DashboardWinStringId.PropertyGridParametersLookUpStaticList, "Static List");
            AddString(DashboardWinStringId.PropertyGridParametersLookUpDynamicList, "Dynamic List");
            AddString(DashboardWinStringId.PropertyGridParametersValueSelectAllValues, "Select All Values");
            AddString(DashboardWinStringId.PropertyGridParametersValueNull, "Null");
            AddString(DashboardWinStringId.PropertyGridNoDataSource, "(none)");
            AddString(DashboardWinStringId.PropertyGridNoDataMember, "(none)");
            AddString(DashboardWinStringId.PropertyGridNoDashboardItemGroup, "(none)");
            AddString(DashboardWinStringId.PrintPreviewOptionsFormCaption, "Options");
            AddString(DashboardWinStringId.LocalColorSchemeEditFormCaption, "Local Color Scheme");
            AddString(DashboardWinStringId.GlobalColorSchemeEditFormCaption, "Global Color Scheme");
            AddString(DashboardWinStringId.MenuResetColor, "Reset");
            AddString(DashboardWinStringId.MenuResetAllColors, "Reset all");
            AddString(DashboardWinStringId.MenuRemoveColor, "Remove");
            AddString(DashboardWinStringId.MenuRemoveAllColors, "Remove all");
            AddString(DashboardWinStringId.MenuRetainColor, "Retain this color");
            AddString(DashboardWinStringId.MenuRetainAllColors, "Retain all colors");
            AddString(DashboardWinStringId.MenuApplyAutoColors, "Apply Auto colors");
            AddString(DashboardWinStringId.MenuPredefinedRanges, "Predefined Ranges");
            AddString(DashboardWinStringId.ColorPickerPaletteColorsSectionCaption, "Palette Colors");
            AddString(DashboardWinStringId.MessageNewColorTableDialogSwitchingDataSource, "If you proceed and change the data source, the dimension list below will be cleared. Do you wish to continue?");
            AddString(DashboardWinStringId.MessageNewColorTableDialogSwitchingDataSourceCaption, "Change Data Source");
            AddString(DashboardWinStringId.ColorSchemeGridEmptyText, "Add a data source to the dashboard to create color schemes");
            AddString(DashboardWinStringId.EditorEmptyEnter, "<enter a value>");
            AddString(DashboardWinStringId.EditorAutomaticValue, "(Automatic)");
            AddString(DashboardWinStringId.EditorCustomValue, "(Custom)");
            AddString(DashboardWinStringId.FormatConditionRangeSetNoStyleCaption, "No Style");
            AddString(DashboardWinStringId.FormatConditionTopBottomNCaption, "N = ");
            AddString(DashboardWinStringId.FormatConditionBetweenAndCaption, "and");
            AddString(DashboardWinStringId.FormatConditionMinMaxValueCaption, "Value");
            AddString(DashboardWinStringId.FormatConditionMinimumCaption, "Min =");
            AddString(DashboardWinStringId.FormatConditionMaximumCaption, "Max =");
            AddString(DashboardWinStringId.IntersectionLevelColumnCaption, "Column dimension");
            AddString(DashboardWinStringId.IntersectionLevelRowCaption, "Row dimension");
            AddString(DashboardWinStringId.IntersectionLevelModeCaption, "Intersection mode");
            AddString(DashboardWinStringId.RangeSetDescription, "Apply formatting to values classified\r\ninto the specified number of ranges");
            AddString(DashboardWinStringId.RangeSetIconBars, "{0} Bars");
            AddString(DashboardWinStringId.RangeSetIconArrowsColored, "{0} Arrows (Colored)");
            AddString(DashboardWinStringId.RangeSetIconArrowsGray, "{0} Arrows (Gray)");
            AddString(DashboardWinStringId.RangeSetIconTriangles, "{0} Triangles");
            AddString(DashboardWinStringId.RangeSetIconCircles, "{0} Circles");
            AddString(DashboardWinStringId.RangeSetIconSymbolsCircled, "{0} Symbols (Circled)");
            AddString(DashboardWinStringId.RangeSetIconSymbolsUncircled, "{0} Symbols (Uncircled)");
            AddString(DashboardWinStringId.RangeSetIconFlags, "3 Flags");
            AddString(DashboardWinStringId.RangeSetIconSigns, "3 Signs");
            AddString(DashboardWinStringId.RangeSetIconStars, "3 Stars");
            AddString(DashboardWinStringId.RangeSetIconTrafficLights, "3 Traffic Lights");
            AddString(DashboardWinStringId.RangeSetIconQuarters, "5 Quarters");
            AddString(DashboardWinStringId.RangeSetIconBoxes, "5 Boxes");
            AddString(DashboardWinStringId.RangeSetIconCirclesRedToBlack, "4 Circles (Red To Black)");
            AddString(DashboardWinStringId.RangeSetIconPositiveNegativeTriangles, "3 Triangles");
            AddString(DashboardWinStringId.RangeSetColorsPaleRedGreen, "Red/Green (Pale)");
            AddString(DashboardWinStringId.RangeSetColorsPaleRedGreenBlue, "Red/Green/Blue (Pale)");
            AddString(DashboardWinStringId.RangeSetColorsPaleRedYellowGreenBlue, "Red/Yellow/Green/Blue (Pale)");
            AddString(DashboardWinStringId.RangeSetColorsPaleRedOrangeYellowGreenBlue, "Red/Orange/Yellow/Green/Blue (Pale)");
            AddString(DashboardWinStringId.RangeSetColorsRedGreen, "Red/Green");
            AddString(DashboardWinStringId.RangeSetColorsRedGreenBlue, "Red/Green/Blue");
            AddString(DashboardWinStringId.RangeSetColorsRedYellowGreenBlue, "Red/Yellow/Green/Blue");
            AddString(DashboardWinStringId.RangeSetColorsRedOrangeYellowGreenBlue, "Red/Orange/Yellow/Green/Blue");
            AddString(DashboardWinStringId.RangeGradientDescription, "Apply formatting to values using\r\nthe specified color gradient.\r\nUnique colors indicate values\r\ncorresponding to the specified range");
            AddString(DashboardWinStringId.RangeGradientGreenWhite, "Green - White");
            AddString(DashboardWinStringId.RangeGradientWhiteGreen, "White - Green");
            AddString(DashboardWinStringId.RangeGradientRedWhite, "Red - White");
            AddString(DashboardWinStringId.RangeGradientWhiteRed, "White - Red");
            AddString(DashboardWinStringId.RangeGradientYellowGreen, "Yellow - Green");
            AddString(DashboardWinStringId.RangeGradientGreenYellow, "Green - Yellow");
            AddString(DashboardWinStringId.RangeGradientYellowRed, "Yellow - Red");
            AddString(DashboardWinStringId.RangeGradientRedYellow, "Red - Yellow");
            AddString(DashboardWinStringId.RangeGradientBlueWhite, "Blue - White");
            AddString(DashboardWinStringId.RangeGradientWhiteBlue, "White - Blue");
            AddString(DashboardWinStringId.RangeGradientBlueRed, "Blue - Red");
            AddString(DashboardWinStringId.RangeGradientRedBlue, "Red - Blue");
            AddString(DashboardWinStringId.RangeGradientYellowBlue, "Yellow - Blue");
            AddString(DashboardWinStringId.RangeGradientBlueYellow, "Blue - Yellow");
            AddString(DashboardWinStringId.RangeGradientGreenBlue, "Green - Blue");
            AddString(DashboardWinStringId.RangeGradientBlueGreen, "Blue - Green");
            AddString(DashboardWinStringId.RangeGradientGreenWhiteBlue, "Green - White - Blue");
            AddString(DashboardWinStringId.RangeGradientBlueWhiteGreen, "Blue - White - Green");
            AddString(DashboardWinStringId.RangeGradientBlueWhiteRed, "Blue - White - Red");
            AddString(DashboardWinStringId.RangeGradientRedWhiteBlue, "Red - White - Blue");
            AddString(DashboardWinStringId.RangeGradientGreenWhiteRed, "Green - White - Red");
            AddString(DashboardWinStringId.RangeGradientRedWhiteGreen, "Red - White - Green");
            AddString(DashboardWinStringId.RangeGradientGreenYellowRed, "Green - Yellow - Red");
            AddString(DashboardWinStringId.RangeGradientRedYellowGreen, "Red - Yellow - Green");
            AddString(DashboardWinStringId.RangeGradientBlueYellowRed, "Blue - Yellow - Red");
            AddString(DashboardWinStringId.RangeGradientRedYellowBlue, "Red - Yellow - Blue");
            AddString(DashboardWinStringId.RangeGradientGreenYellowBlue, "Green - Yellow - Blue");
            AddString(DashboardWinStringId.RangeGradientBlueYellowGreen, "Blue - Yellow - Green");
            AddString(DashboardWinStringId.FormatConditionCustomAppearanceCaption, "Custom Appearance");
            AddString(DashboardWinStringId.FormatConditionTopBottomTemplate, "{0} (N= {1}{2})");
            AddString(DashboardWinStringId.FormatConditionRangeSetTemplate, "Set of [{0}] ranges");
            AddString(DashboardWinStringId.FormatConditionBarTemplate, "Bars");
            AddString(DashboardWinStringId.FormatConditionColorRangeBarTemplate, "Set of [{0}] range bars");
            AddString(DashboardWinStringId.FormatConditionGradientRangeBarTemplate, "Gradient of [{0}] range bars");
            AddString(DashboardWinStringId.FormatConditionRangeGradientTemplate, "Gradient of [{0}] ranges");
            AddString(DashboardWinStringId.FormatConditionUndefinedConditionException, "Rule Caption: Undefined Condition");
            AddString(DashboardWinStringId.DashboardFormatConditionPercentValue, "%");
            AddString(DashboardWinStringId.DashboardFormatConditionTemplate, "{0} ({1}{2})");
            AddString(DashboardWinStringId.DashboardFormatConditionBetweenTemplate, "{0} ({1}, {2})");
            AddString(DashboardWinStringId.DashboardFormatConditionBetweenOrEqualTemplate, "{0} [{1}, {2}]");
            AddString(DashboardWinStringId.FormatConditionRangeSetRanges2Caption, "2 Ranges");
            AddString(DashboardWinStringId.FormatConditionRangeSetRanges3Caption, "3 Ranges");
            AddString(DashboardWinStringId.FormatConditionRangeSetRanges4Caption, "4 Ranges");
            AddString(DashboardWinStringId.FormatConditionRangeSetRanges5Caption, "5 Ranges");
            AddString(DashboardWinStringId.FormatConditionRangeGradientTwoColorsCaption, "2 Color Gradient Ranges");
            AddString(DashboardWinStringId.FormatConditionRangeGradientThreeColorsCaption, "3 Color Gradient Ranges");
            AddString(DashboardWinStringId.ConfigureOlapParametersPageViewHeaderDescription, "Specify the connection properties.");
            AddString(DashboardWinStringId.ConfigureFederationCalculatedFieldsPageViewHeaderDescription, "Select calculated fields you want to include in a federated data source.");
            AddString(DashboardWinStringId.LabelSourceFieldsText, "Calculated fields in original data sources");
            AddString(DashboardWinStringId.LabelTargetFieldsText, "Calculated fields in a federated data source");
            AddString(DashboardWinStringId.DataSourceTypeSql, "Database");
            AddString(DashboardWinStringId.DataSourceTypeSqlDescription, "Connect to an SQL database and select the required data using the Query Builder or SQL query.");
            AddString(DashboardWinStringId.DataSourceTypeOlap, "Olap");
            AddString(DashboardWinStringId.DataSourceTypeOlapDescription, "Connect to an OLAP cube in an MS Analysis Services database.");
            AddString(DashboardWinStringId.DataSourceTypeEF, "Entity Framework");
            AddString(DashboardWinStringId.DataSourceTypeEFDescription, "Connect to an Entity Framework data source.");
            AddString(DashboardWinStringId.DataSourceTypeObject, "Object Binding");
            AddString(DashboardWinStringId.DataSourceTypeObjectDescription, "Bind to an object that provides the required data.");
            AddString(DashboardWinStringId.DataSourceTypeXmlSchema, "XML Schema");
            AddString(DashboardWinStringId.DataSourceTypeXmlSchemaDescription, "Provide the data source schema using an XML/XSD file or a data class.");
            AddString(DashboardWinStringId.DataSourceTypeExcel, "Microsoft Excel workbook / CSV file");
            AddString(DashboardWinStringId.DataSourceTypeExcelDescription, "Connect to a Microsoft Excel workbook / CSV file and select the required data.");
            AddString(DashboardWinStringId.DataSourceTypeExtract, "Data extract");
            AddString(DashboardWinStringId.DataSourceTypeExtractDescription, "Create a new data extract or connect to an existing one.");
            AddString(DashboardWinStringId.DataSourceTypeFederation, "Data Federation");
            AddString(DashboardWinStringId.DataSourceTypeFederationDescription, "Select data sources to create a federated data source.");
            AddString(DashboardWinStringId.DataSourceTypeXPO, "eXpress Persistent Objects (XPO)");
            AddString(DashboardWinStringId.DataSourceTypeXPODescription, "Create a data source that provides XPO data to the dashboard.");
            AddString(DashboardWinStringId.DataSourceTypeJson, "JSON data");
            AddString(DashboardWinStringId.DataSourceTypeJsonDescription, "Import data in JSON format.");
            AddString(DashboardWinStringId.DataSourceTypeMongoDB, "MongoDB");
            AddString(DashboardWinStringId.DataSourceTypeMongoDBDescription, "Connect to a MongoDB database and select data in the Query Builder.");
            AddString(DashboardWinStringId.DataSourceTypeFederationDisabledDescription, "Create several data sources to integrate them in a federated data source.");
            AddString(DashboardWinStringId.MessageColorTableAlreadyExists, "A similar color table already exists in the scheme.");
            AddString(DashboardWinStringId.MessageColorTableAlreadyExistsCaption, "Warning");
            AddString(DashboardWinStringId.MessageColorSchemeValueAlreadyExists, "This value is already present in the table.");
            AddString(DashboardWinStringId.MessageColorSchemeValueAlreadyExistsCaption, "Warning");
            AddString(DashboardWinStringId.MessageDashboardLocked, "Client actions cannot be performed until the Dashboard object is locked. Call the Dashboard.EndUpdate method to unlock the Dashboard.");
            AddString(DashboardWinStringId.AddDashboardParameter, "Add Dashboard Parameter");
            AddString(DashboardWinStringId.ParameterFormCaption, "Dashboard Parameter");
            AddString(DashboardWinStringId.ParameterFormPassNullNotAvailable, "n/a");
            AddString(DashboardWinStringId.RangeEditorControlBetweenValidateMessage, "Specify a value between {0} and {1}");
            AddString(DashboardWinStringId.RangeEditorControlGreaterValidateMessage, "Specify a value greater than {0}");
            AddString(DashboardWinStringId.RangeEditorControlLessValidateMessage, "Specify a value less than {0}");
            AddString(DashboardWinStringId.RenameQueryFormCaption, "Rename Query");
            AddString(DashboardWinStringId.RenameFederationQueryFormCaption, "Rename Query");
            AddString(DashboardWinStringId.RenameDataSourceFormCaption, "Rename Data Source");
            AddString(DashboardWinStringId.AutomaticUpdatesCaption, "Automatic Updates");
            AddString(DashboardWinStringId.AutomaticUpdatesDescription, "Enable/disable automatic updates for the dashboard.");
            AddString(DashboardWinStringId.UpdateDataCaption, "Update");
            AddString(DashboardWinStringId.UpdateDashboardDataCaption, "Update Dashboard");
            AddString(DashboardWinStringId.UpdateDataDescription, "Update the dashboard according to the last modifications.");
            AddString(DashboardWinStringId.ErrorHandlingServerModeIsDisabled, "Server mode is disabled");
            AddString(DashboardWinStringId.ErrorDateTimePeriodDoesNotExists, "A date-time period with the specified name does not exist.");
            AddString(DashboardWinStringId.ConfigureExtractDataSourceHeaderDescription, "Specify the filter used to create the data extract");
            AddString(DashboardWinStringId.CreateExtractDataSourceHeaderDescription, "Create a new data extract or connect to an existing one");
            AddString(DashboardWinStringId.EditExtractDataSourceHeaderDescription, "Edit the existing data extract");
            AddString(DashboardWinStringId.SpecifyExtractParametersHeaderDescription, "Specify the parameter value(s) used to create a data extract");
            AddString(DashboardWinStringId.StoreExtractFileHeaderDescription, "Specify a path to the file that will contain the resulting data extract");
            AddString(DashboardWinStringId.CommandEditExtractDataSourceCaption, "Edit Extract");
            AddString(DashboardWinStringId.CommandEditExtractDataSourceDescription, "Edit the extract options.");
            AddString(DashboardWinStringId.CommandEditExtractSourceCaption, "Edit Extract Source");
            AddString(DashboardWinStringId.CommandEditExtractSourceDescription, "Recreate the extract file using new data.");
            AddString(DashboardWinStringId.CommandEditExtractSourceQueryCaption, "Edit Query");
            AddString(DashboardWinStringId.CommandManageMongoDBQueriesCaption, "Manage Queries");
            AddString(DashboardWinStringId.CommandManageMongoDBQueriesDescription, "Configure the list of queries for the selected data source.");
            AddString(DashboardWinStringId.CommandDeleteMongoDBQueryCaption, "Delete");
            AddString(DashboardWinStringId.CommandDeleteMongoDBQueryDescription, "Delete the selected query from the current data source.");
            AddString(DashboardWinStringId.CommandRenameMongoDBQueryCaption, "Rename Query");
            AddString(DashboardWinStringId.CommandRenameMongoDBQueryDescription, "Rename Query");
            AddString(DashboardWinStringId.RenameMongoDBQueryFormCaption, "Rename Query");
            AddString(DashboardWinStringId.ConfigureExtractDataSource, "Edit extract");
            AddString(DashboardWinStringId.RibbonGroupDataExtract, "Data Extract");
            AddString(DashboardWinStringId.RibbonGroupExtractSource, "Extract Source");
            AddString(DashboardWinStringId.ChooseExtractFieldsDescription, "Select the required fields whose data will be stored within the data extract");
            AddString(DashboardWinStringId.ChangeDashboardItemDataBindingConfirm, "Do you want to change the data source/data member for '{0}'?\r\n\r\n\tOld data source/data member: {1}\r\n\tNew data source/data member: {2}");
            AddString(DashboardWinStringId.TooltipChangeDashboardItemDataBinding, "Change the data source for the {0}");
            AddString(DashboardWinStringId.TooltipChangeDataBinding, "Change the data source for the dashboard item");
            AddString(DashboardWinStringId.CommandUpdateDataExtractCaption, "Update");
            AddString(DashboardWinStringId.CommandUpdateDataExtractDescription, "Update the current data extract.");
            AddString(DashboardWinStringId.UpdateDataExtractConfirmation, "Do you want to update the data extract with actual data?");
            AddString(DashboardWinStringId.TextBoxEditorDataBindingFieldCaption, "Select value");
            AddString(DashboardWinStringId.TextBoxEditorRemovedFieldCaption, "Removed field");
            AddString(DashboardWinStringId.TextBoxEditorNoDataItemsToInsertTooltip, "Add at least one field to the Values section");
            AddString(DashboardWinStringId.PeriodLastYear, "Last Year");
            AddString(DashboardWinStringId.PeriodLastTwoYears, "Last 2 Years");
            AddString(DashboardWinStringId.PeriodLastThreeYears, "Last 3 Years");
            AddString(DashboardWinStringId.PeriodLastFiveYears, "Last 5 Years");
            AddString(DashboardWinStringId.PeriodThisYear, "This Year");
            AddString(DashboardWinStringId.PeriodNextYear, "Next Year");
            AddString(DashboardWinStringId.PeriodLastQuarter, "Last Quarter");
            AddString(DashboardWinStringId.PeriodThisQuarter, "This Quarter");
            AddString(DashboardWinStringId.PeriodNextQuarter, "Next Quarter");
            AddString(DashboardWinStringId.PeriodLastMonth, "Last Month");
            AddString(DashboardWinStringId.PeriodLastThreeMonth, "Last 3 Months");
            AddString(DashboardWinStringId.PeriodLastSixMonth, "Last 6 Months");
            AddString(DashboardWinStringId.PeriodLastTwelveMonth, "Last 12 Months");
            AddString(DashboardWinStringId.PeriodThisMonth, "This Month");
            AddString(DashboardWinStringId.PeriodNextMonth, "Next Month");
            AddString(DashboardWinStringId.PeriodLastSevenDays, "Last 7 Days");
            AddString(DashboardWinStringId.PeriodLastThirtyDays, "Last 30 Days");
            AddString(DashboardWinStringId.PeriodLastSixtyDays, "Last 60 Days");
            AddString(DashboardWinStringId.PeriodLastNinetyDays, "Last 90 Days");
            AddString(DashboardWinStringId.PeriodYearToDate, "Year-to-date");
            AddString(DashboardWinStringId.PeriodQuarterToDate, "Quarter-to-date");
            AddString(DashboardWinStringId.PeriodMonthToDate, "Month-to-date");
            AddString(DashboardWinStringId.PeriodToday, "Today");
            AddString(DashboardWinStringId.PeriodNextSevenDays, "Next 7 Days");
            AddString(DashboardWinStringId.PeriodNextThirtyDays, "Next 30 Days");
            AddString(DashboardWinStringId.PeriodNextSixtyDays, "Next 60 Days");
            AddString(DashboardWinStringId.PeriodNextNinetyDays, "Next 90 Days");
            AddString(DashboardWinStringId.PeriodLastTwentyFourHours, "Last 24 Hours");
            AddString(DashboardWinStringId.PeriodThisHour, "This Hour");
            AddString(DashboardWinStringId.PeriodNextHour, "Next Hour");
            AddString(DashboardWinStringId.PeriodNextTwentyFourHours, "Next 24 Hours");
            AddString(DashboardWinStringId.PeriodLastSixtyMinutes, "Last 60 Minutes");
            AddString(DashboardWinStringId.PeriodThisMinute, "This Minute");
            AddString(DashboardWinStringId.PeriodNextSixtyMinutes, "Next 60 Minutes");
            AddString(DashboardWinStringId.PeriodLastSixtySeconds, "Last 60 Seconds");
            AddString(DashboardWinStringId.PeriodThisSecond, "This Second");
            AddString(DashboardWinStringId.PeriodNextSixtySeconds, "Next 60 Seconds");
            AddString(DashboardWinStringId.CustomPeriod, "Custom");
            AddString(DashboardWinStringId.MessageEmptyPeriodName, "The name cannot be empty");
            AddString(DashboardWinStringId.MenuCalculation, "Calculation");
            AddString(DashboardWinStringId.CommandCustomizeCalculation, "Custom...");
            AddString(DashboardWinStringId.CommandNoneCalculation, "(None)");
            AddString(DashboardWinStringId.CommandPercentOfTotalCalculation, "Percent of Total");
            AddString(DashboardWinStringId.CommandRunningSummaryCalculation, "Running Summary");
            AddString(DashboardWinStringId.CommandRankCalculation, "Rank");
            AddString(DashboardWinStringId.CommandDifferenceCalculation, "Difference");
            AddString(DashboardWinStringId.CommandPercentageDifferenceCalculation, "Percentage Difference");
            AddString(DashboardWinStringId.CommandChartPercentOfArgumentTotalCalculation, "Percent of Argument Total");
            AddString(DashboardWinStringId.CommandChartPercentOfSeriesTotalCalculation, "Percent of Series Total");
            AddString(DashboardWinStringId.CommandChartPercentOfGrandTotalCalculation, "Percent of Grand Total");
            AddString(DashboardWinStringId.CommandPiePercentOfArgumentTotalCalculation, "Percent of Argument Total");
            AddString(DashboardWinStringId.CommandPiePercentOfSeriesTotalCalculation, "Percent of Series Total");
            AddString(DashboardWinStringId.CommandPiePercentOfGrandTotalCalculation, "Percent of Grand Total");
            AddString(DashboardWinStringId.CommandRangeFilterPercentOfArgumentTotalCalculation, "Percent of Argument Total");
            AddString(DashboardWinStringId.CommandRangeFilterPercentOfSeriesTotalCalculation, "Percent of Series Total");
            AddString(DashboardWinStringId.CommandRangeFilterPercentOfGrandTotalCalculation, "Percent of Grand Total");
            AddString(DashboardWinStringId.CommandPivotPercentOfColumnGrandTotalCalculation, "Percent of Column Grand Total");
            AddString(DashboardWinStringId.CommandPivotPercentOfRowGrandTotalCalculation, "Percent of Row Grand Total");
            AddString(DashboardWinStringId.CommandPivotPercentOfGrandTotalCalculation, "Percent of Grand Total");
            AddString(DashboardWinStringId.CommandChartRankAlongArgumentsCalculation, "Rank along Arguments");
            AddString(DashboardWinStringId.CommandChartRankAlongSeriesCalculation, "Rank along Series");
            AddString(DashboardWinStringId.CommandChartRankAlongPointsCalculation, "Rank along Points");
            AddString(DashboardWinStringId.CommandPieRankAlongArgumentsCalculation, "Rank along Arguments");
            AddString(DashboardWinStringId.CommandPieRankAlongSeriesCalculation, "Rank along Series");
            AddString(DashboardWinStringId.CommandPieRankAlongPointsCalculation, "Rank along Points");
            AddString(DashboardWinStringId.CommandRangeFilterRankAlongArgumentCalculation, "Rank along Argument");
            AddString(DashboardWinStringId.CommandRangeFilterRankAlongSeriesCalculation, "Rank along Series");
            AddString(DashboardWinStringId.CommandRangeFilterRankAlongPointsCalculation, "Rank along Points");
            AddString(DashboardWinStringId.CommandPivotRankAlongColumnsCalculation, "Rank along Columns");
            AddString(DashboardWinStringId.CommandPivotRankAlongRowsCalculation, "Rank along Rows");
            AddString(DashboardWinStringId.CommandPivotRankAlongCellsCalculation, "Rank along Cells");
            AddString(DashboardWinStringId.CommandChartRunningSummaryAlongArgumentsCalculation, "Running Summary along Arguments");
            AddString(DashboardWinStringId.CommandChartRunningSummaryAlongSeriesCalculation, "Running Summary along Series");
            AddString(DashboardWinStringId.CommandPieRunningSummaryAlongArgumentsCalculation, "Running Summary along Arguments");
            AddString(DashboardWinStringId.CommandPieRunningSummaryAlongSeriesCalculation, "Running Summary along Series");
            AddString(DashboardWinStringId.CommandRangeFilterRunningSummaryAlongArgumentCalculation, "Running Summary along Argument");
            AddString(DashboardWinStringId.CommandRangeFilterRunningSummaryAlongSeriesCalculation, "Running Summary along Series");
            AddString(DashboardWinStringId.CommandPivotRunningSummaryAlongColumnsCalculation, "Running Summary along Columns");
            AddString(DashboardWinStringId.CommandPivotRunningSummaryAlongRowsCalculation, "Running Summary along Rows");
            AddString(DashboardWinStringId.CommandChartDifferenceAlongArgumentsCalculation, "Difference along Arguments");
            AddString(DashboardWinStringId.CommandChartDifferenceAlongSeriesCalculation, "Difference along Series");
            AddString(DashboardWinStringId.CommandPieDifferenceAlongArgumentsCalculation, "Difference along Arguments");
            AddString(DashboardWinStringId.CommandPieDifferenceAlongSeriesCalculation, "Difference along Series");
            AddString(DashboardWinStringId.CommandRangeFilterDifferenceAlongArgumentCalculation, "Difference along Argument");
            AddString(DashboardWinStringId.CommandRangeFilterDifferenceAlongSeriesCalculation, "Difference along Series");
            AddString(DashboardWinStringId.CommandPivotDifferenceAlongColumnsCalculation, "Difference along Columns");
            AddString(DashboardWinStringId.CommandPivotDifferenceAlongRowsCalculation, "Difference along Rows");
            AddString(DashboardWinStringId.CommandChartPercentageDifferenceAlongArgumentsCalculation, "Percentage Difference along Arguments");
            AddString(DashboardWinStringId.CommandChartPercentageDifferenceAlongSeriesCalculation, "Percentage Difference along Series");
            AddString(DashboardWinStringId.CommandPiePercentageDifferenceAlongArgumentsCalculation, "Percentage Difference along Arguments");
            AddString(DashboardWinStringId.CommandPiePercentageDifferenceAlongSeriesCalculation, "Percentage Difference along Series");
            AddString(DashboardWinStringId.CommandRangeFilterPercentageDifferenceAlongArgumentCalculation, "Percentage Difference along Argument");
            AddString(DashboardWinStringId.CommandRangeFilterPercentageDifferenceAlongSeriesCalculation, "Percentage Difference along Series");
            AddString(DashboardWinStringId.CommandPivotPercentageDifferenceAlongColumnsCalculation, "Percentage Difference along Columns");
            AddString(DashboardWinStringId.CommandPivotPercentageDifferenceAlongRowsCalculation, "Percentage Difference along Rows");
            AddString(DashboardWinStringId.CalculatedFieldContainsAggrError, "Cannot apply filtering to a field whose expression contains the Aggr function.");
            AddString(DashboardWinStringId.DataConnectionParametersDialogCaptionUnableToConnect, "Cannot connect to the database using the specified connection parameters.\r\nSpecify the correct connection parameters and click OK.\r\nDatabase credentials will not be saved after closing this dialog window.");
            AddString(DashboardWinStringId.DataConnectionParametersDialog, "Connection Error");
            AddString(DashboardWinStringId.FieldsDescriptionPrefix, "The type of this field is ");
            AddString(DashboardWinStringId.NoDataSourcesForDataFederationMessage, "Provide at least one data source to be used to create a federated data source.");
            AddString(DashboardWinStringId.XPOIsNotConfiguredMessage, "Your application administrator has not configured an XPO data source. Please contact your admin for further assistance/information.");
            AddString(DashboardWinStringId.MessageCouldNotLoadShapeItem, "Unable to load the selected shape file. See documentation for more information about available formats: https://docs.devexpress.com/Dashboard/16503/");
            AddString(DashboardWinStringId.CardItemLegacyCardsEditRulesDescription, "Cards that use a legacy layout do not support conditional formatting");
            AddString(DashboardWinStringId.MessageEmptyCalculatedFieldsList, "Drag or double-click a calculated field on the left grid\r\nto copy it to a federated data source");
            AddString(DashboardWinStringId.CustomItemMetadataIsNotFoundExceptionMessage, "Cannot find metadata for the '{0}' custom item type. Call the 'Dashboard.CustomItemMetadataTypes.Register' method to register the corresponding metadata type.");
            AddString(DashboardWinStringId.CustomItemCustomControlProviderIsNotInitializedExceptionMessage, "CustomControlProvider is not initialized for the '{0}' custom item type. Add required initialization code to the 'DashboardControl.CustomDashboardItemControlCreating' event handler.");
            AddString(DashboardWinStringId.ConfigureFederationCalculatedFieldsPageView_SourceFieldNameCaption, "Name");
            AddString(DashboardWinStringId.ConfigureFederationCalculatedFieldsPageView_SourceCalculatedFieldExpression, "Expression");
            AddString(DashboardWinStringId.ConfigureFederationCalculatedFieldsPageView_TargetFieldNameCaption, "Name");
            AddString(DashboardWinStringId.ConfigureFederationCalculatedFieldsPageView_TargetCalculatedFieldExpression, "Expression");
            AddString(DashboardWinStringId.HistoryItemEditDashboardLayoutOptions, "Edit dashboard layout options");
            AddString(DashboardWinStringId.LayoutOptionsDialogOkButton, "OK");
            AddString(DashboardWinStringId.LayoutOptionsDialogCancelButton, "Cancel");
            AddString(DashboardWinStringId.LayoutOptionsDialogApplyButton, "Apply");
            AddString(DashboardWinStringId.LayoutOptionsDialogHeightEditorCaption, "Height");
            AddString(DashboardWinStringId.LayoutOptionsDialogWidthEditorCaption, "Width");
            AddString(DashboardWinStringId.LayoutOptionsDialogCaption, "Dashboard Layout Options");
            AddString(DashboardWinStringId.CommandGridFilterRowCaption, "Filter Row");
            AddString(DashboardWinStringId.CommandGridFilterRowDescription, "Enables a service row where you can apply filter conditions to columns.");
            AddString(DashboardWinStringId.CommandGridUpdateTotalsCaption, "Update Totals");
            AddString(DashboardWinStringId.CommandGridUpdateTotalsDescription, "Specifies whether the grid re-calculates totals on filter changes. If this option is off, the grid always displays totals calculated against the entire dataset.");
            AddString(DashboardWinStringId.HistoryItemGridFilterRow, "{0} filter row for '{1}'");
            AddString(DashboardWinStringId.HistoryItemGridUpdateTotals, "{0} update totals for '{1}'");
            AddString(DashboardWinStringId.RibbonGroupGridFilterCaption, "Column Filter");
        }
    }
}
